<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>用Isolate實現Loading Widget不卡頓</title>
    <url>//post/flutter-isolate.html</url>
    <content><![CDATA[<blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot="">
<path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path>
<path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path>
<path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path>
</svg>
</span><p>Flutter預設是單執行緒處理，在你還沒發覺UI變得卡頓時，你是不會發現的。</p></blockquote>
<p>剛開始接觸Flutter時，完全沒有認真研究過他的執行序，認為只要把複雜或需要時間的工作丟進Future, async, await就解決一切了，直到…我發現UI變得超卡的！！於是就誕生了這篇文章…紀錄在頁面放上loading元件<code>CircularProgressIndicator()</code>並在背後做繁重的運算。</p>
<h3 id="Dart中的Isolate"><a href="#Dart中的Isolate" class="headerlink" title="Dart中的Isolate"></a>Dart中的Isolate</h3><p>如果不特別創建Isolate，我們的所有程式碼幾乎都是在預設的main Isolate中執行的，不管是使用Future, async, await，最後都還是在同一個Isolate上進行處理，如果我們給main Isolate太多繁重的工作，UI就會開始延遲，因此我們就需要一個新的Isolate來分擔繁重的工作。<br>Dart中的Isolate是不會共享記憶體的，所以必須透過Port來溝通，且Dart中的溝通是異步的，這就使得寫起來變得十分複雜啊…</p>
<h3 id="預覽目標"><a href="#預覽目標" class="headerlink" title="預覽目標"></a>預覽目標</h3><p><img src="https://imgur.com/fPbyIxA.gif" alt="flutter-isolate"></p>
<h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>首先，我們需要一個非常繁重的工作，於是我們就創一個超繁重的while迴圈，Isolate的工作內容都需寫在最上層（global）或是static funciton。</p>
<pre class="line-numbers language-dart" data-language="dart"><code class="language-dart">int countEven() &#123;
  int num &#x3D; Random().nextInt(100) + 1000000000;
  int count &#x3D; 0;
  while (num &gt; 0) &#123;
    if (num % 2 &#x3D;&#x3D; 0) &#123;
      count++;
    &#125;
    num--;
  &#125;
  return count % 1000;
&#125;</code></pre>
<blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot="">
<path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path>
<path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path>
<path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path>
</svg>
</span><p>給他跑個十億多次，夠繁重了吧</p></blockquote>
<p>接著，創造一個與Isolate溝通的通道<code>isolateCompute()</code>，分別會有兩個通訊端</p>
<ul>
<li>SendPort: 丟工作的Isolate的通訊端（傳送端）</li>
<li>ReceivePort: 做工作的Isolate的通訊端（接收端）</li>
</ul>
<p>當main Isolate帶著他的通訊端過來時：</p>
<ol>
<li>先創造一個做工作Isolate的通訊端</li>
<li>並使用<code>sendPort.send(reveivePort.sendPort)</code>將兩個通訊端做連接</li>
<li>連接上後接收端就可以用<code>receivePort</code>開始監聽訊息</li>
<li>若有訊息包<code>MessagePackage</code>過來則開始處理</li>
<li>將結果用臨時傳送器傳回main Isolate</li>
</ol>
<pre class="line-numbers language-dart" data-language="dart"><code class="language-dart">&#x2F;&#x2F; 訊息包
class MessagePackage &#123;
  SendPort sender; &#x2F;&#x2F; 臨時傳送器
  dynamic msg; &#x2F;&#x2F; 訊息
  MessagePackage(this.sender, this.msg);
&#125;

isolateCompute(SendPort sendPort) &#123;
  &#x2F;&#x2F; 1. 創造一個做工作Isolate的通訊端
  ReceivePort receivePort &#x3D; ReceivePort();
  &#x2F;&#x2F; 2. 將兩個通訊端做連接
  sendPort.send(receivePort.sendPort);
  &#x2F;&#x2F; 3. 連接上後接收端就可以開始監聽訊息
  receivePort.listen((package) &#123;
    &#x2F;&#x2F; 4. 若有訊息過來則開始處理
    MessagePackage _msg &#x3D; package as MessagePackage;
    print(_msg.msg); &#x2F;&#x2F; output: a message to isolate
    int r &#x3D; countEven();
    &#x2F;&#x2F; 5. 將結果用臨時傳送器傳回去
    _msg.sender.send(r);
  &#125;);
&#125;</code></pre>

<p>創建完Isolate後，我們就可以在頁面上加上<code>_executeIsolate()</code>來呼叫Isolate做事</p>
<ol>
<li>創建一個通訊端</li>
<li>將通訊端傳至Isolate，並等待連接上，即變成傳送端</li>
<li>建立好通道後即可使用傳送端將訊息包（臨時傳送器＋訊息）傳至Isolate</li>
<li>回傳結果</li>
<li>關閉臨時傳送器</li>
<li>關閉通訊端<pre class="line-numbers language-dart" data-language="dart"><code class="language-dart">int? _counter;
bool _computing &#x3D; false;

Isolate? isolate;
SendPort? isolateSender;
void _executeIsolate() async &#123;
  setState(() &#123;
    _computing &#x3D; true;
  &#125;);
  &#x2F;&#x2F; 1. 創建一個通訊端
  ReceivePort receivePort &#x3D; ReceivePort();
  &#x2F;&#x2F; 2. 將通訊端傳至Isolate，並等待連接上
  isolate &#x3D;
      await Isolate.spawn&lt;SendPort&gt;(isolateCompute, receivePort.sendPort);
  isolateSender &#x3D; await receivePort.first;
  &#x2F;&#x2F; 3. 用傳送端將訊息包傳至Isolate
  ReceivePort _temp &#x3D; ReceivePort();
  isolateSender!.send(MessagePackage(_temp.sendPort, &quot;a message to isolate&quot;));
  &#x2F;&#x2F; 4. 回傳結果
  int r &#x3D; await _temp.first;
  setState(() &#123;
    _counter &#x3D; r;
  &#125;);
  &#x2F;&#x2F; 5. 關閉臨時傳送器
  _temp.close();
  &#x2F;&#x2F; 6. 關閉通訊端
  receivePort.close();
  setState(() &#123;
    _computing &#x3D; false;
  &#125;);
&#125;</code></pre></li>
</ol>
<p>最後做個按鈕來觸發<code>_executeIsolate()</code>，並在運算時把<code>CircularProgressIndicator()</code>加入頁面</p>
<pre class="line-numbers language-dart" data-language="dart"><code class="language-dart">@override
Widget build(BuildContext context) &#123;
  int i &#x3D; _counter ?? 0;
  return Scaffold(
    appBar: AppBar(
      title: const Text(&quot;Flutter Demo Home Page&quot;),
    ),
    body: Center(
      child: Container(
        alignment: Alignment.center,
        width: MediaQuery.of(context).size.width * 0.5,
        height: MediaQuery.of(context).size.width * 0.5,
        color: Colors.grey[100],
        child: _computing
            ? const CircularProgressIndicator()
            : Text(
                &quot;$i&quot;,
                style: Theme.of(context).textTheme.headline1,
              ),
      ),
    ),
    floatingActionButton: FloatingActionButton(
      onPressed: _executeIsolate,
      tooltip: &#39;Change&#39;,
      child: _computing
          ? const CircularProgressIndicator()
          : const Icon(Icons.swap_horiz_rounded),
    ),
  );
&#125;</code></pre>]]></content>
      <categories>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>App</tag>
        <tag>Flutter</tag>
        <tag>Dart</tag>
        <tag>Isolate</tag>
      </tags>
  </entry>
  <entry>
    <title>Flutter的Windows套件 - webview_windows (1)</title>
    <url>//post/flutter-webview-windows.html</url>
    <content><![CDATA[<p>WebView在Flutter的iOS及Android端支援已非常完善，但在Windows及Mac端卻始終沒有支援，在2019年，就有網友在Github提出何時會支援電腦桌面端的WebView套件，但始終沒有消息…</p>
<p>終於在兩年後，隨著微軟推出了WebView2，終於也有大神在Flutter為Windows開發了<a href="https://pub.dev/packages/webview_windows">Webview</a>套件！！！</p>
<p>今天就來好好了解該怎麼使用這個套件吧～</p>
<h3 id="配置需求"><a href="#配置需求" class="headerlink" title="配置需求"></a>配置需求</h3><ul>
<li><p>用戶端的電腦</p>
<ul>
<li><a href="https://developer.microsoft.com/zh-tw/microsoft-edge/webview2/">WebView2 執行階段</a><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot="">
<path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path>
<path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path>
<path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path>
</svg>
</span><p>當然要debug的話也是要安裝</p></blockquote>
</li>
<li>Windows 10 1809+</li>
</ul>
</li>
<li><p>開發端的電腦</p>
<ul>
<li><a href="https://visualstudio.microsoft.com/zh-hant/downloads/">Visual Studio 2019</a></li>
<li>Windows 10 SDK 2004+ (10.0.19041.0)</li>
</ul>
</li>
</ul>
<h4 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h4><p>查看看Windows的版本：<strong>開始</strong> &gt; <strong>設定</strong> &gt; <strong>系統</strong> &gt; <strong>關於</strong><br><img src="https://i.imgur.com/yZKv4QW.png" alt="windows_ver"></p>
<h3 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h3><p>首先，當然就是將套件放進<code>pubspec.yaml</code>中</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">dev_dependencies:
  webview_windows: ^0.0.8</code></pre>

<p>然後安裝套件</p>
<pre class="line-numbers language-console" data-language="console"><code class="language-console">$ flutter pub get</code></pre>
<p>再將它匯入專案中</p>
<pre class="line-numbers language-dart" data-language="dart"><code class="language-dart">import &#39;package:webview_windows&#x2F;webview_windows.dart&#39; as wweb;</code></pre>

<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>首先，我們先宣告一個Controller來控制WebView</p>
<pre class="line-numbers language-dart" data-language="dart"><code class="language-dart">final _winController &#x3D; wweb.WebviewController();</code></pre>
<p>並寫一個初始WebView的function</p>
<pre class="line-numbers language-dart" data-language="dart"><code class="language-dart">Future&lt;void&gt; initWindowsWebView() async &#123;
  if (!Platform.isWindows) return;
  await _winController.initialize();  &#x2F;&#x2F; 初始WebView
  await _winController.loadUrl(
      &quot;https:&#x2F;&#x2F;developer.microsoft.com&#x2F;en-us&#x2F;microsoft-edge&#x2F;webview2&#x2F;&quot;); &#x2F;&#x2F; 載入頁面
  while (!_winController.value.isInitialized) &#123; &#x2F;&#x2F; 等待初始完成
    sleep(Duration(milliseconds: 200));
  &#125;
  setState(() &#123;&#125;); &#x2F;&#x2F; 重整頁面UI
&#125;</code></pre>

<p>再將<code>initWindowsWebView()</code>放至<code>initState()</code>中</p>
<pre class="line-numbers language-dart" data-language="dart"><code class="language-dart">@override
void initState() &#123;
  super.initState();
  initWindowsWebView();
&#125;</code></pre>

<p>然後切記!要在離開頁面時關閉WebviewController</p>
<pre class="line-numbers language-dart" data-language="dart"><code class="language-dart">@override
void dispose() &#123;
  super.dispose();
  _winController.dispose();
&#125;</code></pre>

<p>寫完動作後，我們再來寫一個Widget來顯示WebView</p>
<pre class="line-numbers language-dart" data-language="dart"><code class="language-dart">Widget webView() &#123;
  if (!Platform.isWindows)
    return Center(
      child: Text(&quot;not Support&quot;),
    );
  if (!_winController.value.isInitialized)
    return Center(
      child: CircularProgressIndicator(), &#x2F;&#x2F; 未初始完成顯示loading圖示
    );
  return Container(
    child: wweb.Webview(_winController),
  );
&#125;</code></pre>

<p>最後，再將Wiget放進頁面就完成了~</p>
<pre class="line-numbers language-dart" data-language="dart"><code class="language-dart">@override
Widget build(BuildContext context) &#123;
  return Scaffold(
    appBar: AppBar(
      title: Text(&quot;WebView&quot;),
    ),
    body: webView(),
  );
&#125;</code></pre>

<h3 id="另人激動的成果時間"><a href="#另人激動的成果時間" class="headerlink" title="另人激動的成果時間"></a>另人激動的成果時間</h3><p><img src="https://i.imgur.com/ZfztlMU.gif" alt="webview preview"></p>
<h3 id="Full-Code"><a href="#Full-Code" class="headerlink" title="Full Code"></a>Full Code</h3><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot="">
<path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path>
<path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path>
<path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path>
</svg>
</span><p>完整程式碼請至<a href="https://github.com/cailirl980519/sample_windows_webview">sample_windows_webview</a></p></blockquote>
<pre class="line-numbers language-dart" data-language="dart"><code class="language-dart">import &#39;dart:io&#39;;

import &#39;package:flutter&#x2F;material.dart&#39;;
import &#39;package:lottie&#x2F;lottie.dart&#39;;
import &#39;package:webview_windows&#x2F;webview_windows.dart&#39; as wweb;

class WebViewPage extends StatefulWidget &#123;
  const WebViewPage(&#123;Key? key&#125;) : super(key: key);

  @override
  _WebViewPageState createState() &#x3D;&gt; _WebViewPageState();
&#125;

class _WebViewPageState extends State&lt;WebViewPage&gt; &#123;
  final _winController &#x3D; wweb.WebviewController();

  Future&lt;void&gt; initWindowsWebView() async &#123;
    if (!Platform.isWindows) return;
    await _winController.initialize();  &#x2F;&#x2F; 初始WebView
    await _winController.loadUrl(
        &quot;https:&#x2F;&#x2F;developer.microsoft.com&#x2F;en-us&#x2F;microsoft-edge&#x2F;webview2&#x2F;&quot;); &#x2F;&#x2F; 載入頁面
    while (!_winController.value.isInitialized) &#123; &#x2F;&#x2F; 等待初始完成
      sleep(Duration(milliseconds: 200));
    &#125;
    setState(() &#123;&#125;); &#x2F;&#x2F; 重整頁面UI
  &#125;

  Widget webView() &#123;
    if (!Platform.isWindows)
      return Center(
        child: Text(&quot;not Support&quot;),
      );
    if (!_winController.value.isInitialized)
      return Center(
        child: CircularProgressIndicator(), &#x2F;&#x2F; 未初始完成顯示loading圖示
      );
    return Container(
      child: wweb.Webview(_winController),
    );
  &#125;

  @override
  void initState() &#123;
    super.initState();
    initWindowsWebView();
  &#125;

  @override
  void dispose() &#123;
    super.dispose();
    _winController.dispose();
  &#125;

  @override
  Widget build(BuildContext context) &#123;
    return Scaffold(
      appBar: AppBar(
        title: Text(&quot;Sample1&quot;),
      ),
      body: webView(),
    );
  &#125;
&#125;</code></pre>
]]></content>
      <categories>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>App</tag>
        <tag>Flutter</tag>
        <tag>Dart</tag>
        <tag>Windows</tag>
        <tag>Edge Webview2</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello Hexo World</title>
    <url>//post/hello-world.html</url>
    <content><![CDATA[<h1 id="歡迎來到我的秘密基地！"><a href="#歡迎來到我的秘密基地！" class="headerlink" title="歡迎來到我的秘密基地！"></a>歡迎來到我的秘密基地！</h1><p><img src="https://i.imgur.com/HbkFUz3.gif" alt="building..."></p>
<p>正在努力建置中…</p>
<p>敬請期待</p>
]]></content>
  </entry>
  <entry>
    <title>那些封裝Flutter for Windows Desktop踩過的坑</title>
    <url>//post/flutter-windows-msix.html</url>
    <content><![CDATA[<p>當我用Flutter寫完一個App後，想要將這個App封裝成Window的MSIX應用程式，但發現網上Windows Desktop的教學屈指可數，且多數都是英文，於是就產生了想法把它記錄下來，把坑填好，以免以後要用到忘記踩過的坑！</p>
<h3 id="前置作業"><a href="#前置作業" class="headerlink" title="前置作業"></a>前置作業</h3><ul>
<li>一個欲封裝的Flutter專案</li>
<li>一台安裝好Flutter環境的Windows電腦</li>
<li>一顆強壯的心</li>
</ul>
<h3 id="新增MSIX套件"><a href="#新增MSIX套件" class="headerlink" title="新增MSIX套件"></a>新增MSIX套件</h3><p>本篇是運用Flutter Package中的<a href="https://pub.dev/packages/msix">msix</a>套件來封裝Windows應用程式，所以首先～我們就先將msix套件新增至我們Flutter專案中的<code>pubspec.yaml</code>中。</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">dev_dependencies:
  flutter_test:
    sdk: flutter
  msix: ^2.2.3</code></pre>

<h3 id="建置Windwos-Release版本應用"><a href="#建置Windwos-Release版本應用" class="headerlink" title="建置Windwos Release版本應用"></a>建置Windwos Release版本應用</h3><p>若Flutter專案中還沒有windows資料夾，則先輸入：</p>
<p><code>flutter config --enable-windows-desktop</code></p>
<p>接下來先來建置個windows的應用(.exe)，只需在終端機的Flutter專案的目錄下輸入：</p>
<p><code>flutter build windows</code></p>
<p>這時，建置好的Windows應用將會輸出至Flutter專案中<strong>\build\windows\runner\Release</strong>資料夾下。</p>
<blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot="">
<path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path>
<path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path>
<path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path>
</svg>
</span><p>若應用程式要上架至Windows Store，就不需要再額外進行數位簽署，上架Windows Store時會自動簽署。<br>若要將MSIX進行私有部署或測試，則須創建一個.pfx證書來將應用進行數位簽署。</p></blockquote>
<p><em>如不需數位簽署則直接跳至下面MSIX打包</em></p>
<h3 id="創建自簽名的-pfx證書"><a href="#創建自簽名的-pfx證書" class="headerlink" title="創建自簽名的.pfx證書"></a>創建自簽名的.pfx證書</h3><ol>
<li><p>安裝<a href="https://slproweb.com/products/Win32OpenSSL.html">OpenSSL</a></p>
</li>
<li><p>將OpenSSL新增至環境變數<br> e.g. <code>&quot;C:\Program Files\OpenSSL-Win64\bin&quot;</code></p>
</li>
<li><p>產生私鑰<br> <code>openssl genrsa -out mykeyname.key 2048</code></p>
</li>
<li><p>使用私鑰產生自簽名證書(CSR)<br> <code>openssl req -new -key mykeyname.key –subj “/CN=Comapny Name/O=Comapny Name/C=TW” -out mycsrname.csr</code></p>
<blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot="">
<path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path>
<path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path>
<path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path>
</svg>
</span><ul>
<li>&#x2F;CN: Company Name</li>
<li>&#x2F;O:  Organization Name</li>
<li>&#x2F;C:  Country Name</li>
</ul></blockquote>
</li>
<li><p>使用私鑰及CSR文件生成自簽名證書(CRT)<br> <code>openssl x509 -in mycsrname.csr -out mycrtname.crt -req -signkey mykeyname.key -days 10000</code></p>
</li>
<li><p>使用私鑰與CRT文件生成.pfx文件<br> <code>openssl pkcs12 -export -out CERTIFICATE.pfx -inkey mykeyname.key -in mycrtname.crt</code></p>
</li>
</ol>
<h3 id="將應用程式進行數位簽署"><a href="#將應用程式進行數位簽署" class="headerlink" title="將應用程式進行數位簽署"></a>將應用程式進行數位簽署</h3><ol>
<li><p>將signtool新增至環境變數<br> e.g. <code>C:\Program Files (x86)\Windows Kits\10\bin\10.0.19041.0\x64</code></p>
</li>
<li><p>將.pfx證書簽署至exe<br> <code>signtool sign /tr http://timestamp.digicert.com /td sha256 /fd sha256 /f CERTIFICATE.pfx /p 16595169 myapp.exe</code></p>
<blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot="">
<path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path>
<path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path>
<path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path>
</svg>
</span><ul>
<li>&#x2F;tr: 時間戳記</li>
<li>&#x2F;td: 時間戳記摘要演算法</li>
<li>&#x2F;fd: 檔案摘要演算法</li>
<li>&#x2F;f:  簽署憑證</li>
<li>&#x2F;p:  憑證密碼</li>
</ul></blockquote>
</li>
<li><p>右鍵點擊.exe檔選取<strong>內容</strong>，確認<strong>數位簽章</strong>內有.pfx證書</p>
<img src="/images/msix/image7.png" alt="signtool_verify" title="height='500'" height="500" /></li>
</ol>
<h3 id="將-pfx資訊新增至Flutter專案"><a href="#將-pfx資訊新增至Flutter專案" class="headerlink" title="將.pfx資訊新增至Flutter專案"></a>將.pfx資訊新增至Flutter專案</h3><ul>
<li><p>確認.pfx資訊</p>
<ol>
<li>於Windows PowerShell輸入<br> <code>Get-PfxCertificate</code></li>
<li>於FilePath[0]輸入.pfx路徑</li>
<li>跳出FilePath[1]留空Enter</li>
<li>輸入.pfx密碼</li>
<li>將輸出Subject記錄下來<br><img src="/images/msix/image8.png" alt="pfx_info"></li>
</ol>
</li>
<li><p>將<code>msix_config</code>新增至<code>pubspec.yaml</code>的最底部</p>
</li>
</ul>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">msix_config:
  display_name: myApp
  publisher_display_name: CompanyName
  identity_name: MyCompany.MySuite.MyApp
  msix_version: 1.0.0.0
  certificate_path: C:\&lt;PathToCertificate&gt;\&lt;CERTIFICATE.pfx&gt;
  certificate_password: 1234
  publisher: CN&#x3D;Comapny Name, O&#x3D;Comapny Name, C&#x3D;TW
  logo_path: C:\&lt;PathToIcon&gt;\&lt;Logo.png&gt;
  start_menu_icon_path: C:\&lt;PathToIcon&gt;\&lt;Icon.png&gt;
  tile_icon_path: C:\&lt;PathToIcon&gt;\&lt;Icon.png&gt;
  vs_generated_images_folder_path: C:\&lt;PathToFolder&gt;\icons
  icons_background_color: transparent
  architecture: x64
  capabilities: &#39;internetClient,location,microphone,webcam&#39;</code></pre>

<p>將剛剛紀錄的Subject直接貼上<code>publisher</code></p>
<blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot="">
<path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path>
<path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path>
<path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path>
</svg>
</span><p>大坑-1: 若排序錯了則會封裝失敗！！！</p></blockquote>
<h3 id="MSIX打包"><a href="#MSIX打包" class="headerlink" title="MSIX打包"></a>MSIX打包</h3><p>在終端機的Flutter專案的目錄下輸入：<br><code>flutter pub run msix:create</code></p>
<p><img src="/images/msix/image0.png" alt="msix:create"></p>
<p>Flutter專案中<strong>\build\windows\runner\Release</strong>資料夾下，會多產生一個msix檔。</p>
<h4 id="安裝未受信任應用程式"><a href="#安裝未受信任應用程式" class="headerlink" title="安裝未受信任應用程式"></a>安裝未受信任應用程式</h4><p>在msix封裝時，msix套件會自動簽署預設的測試簽章，但此時開啟.msix檔案還是會跳出此應用程式是未受信任的應用程式而無法安裝，如下圖：</p>
<p><img src="https://docs.microsoft.com/zh-tw/windows/msix/images/msix-bad-cert.png" alt="取自https://docs.microsoft.com/"></p>
<p>此時，需要右鍵點擊.msix檔案再選取內容，將會看到<strong>數位簽章</strong>的標籤，點擊簽章再選取詳細資料。</p>
<img src="/images/msix/image1.png" alt="UntrustedApp_Step1" title="width='350'" width="350" />

<p>點擊<strong>檢視憑證</strong><br><img src="/images/msix/image2.png" alt="UntrustedApp_Step2" title="width='350'" width="350" /></p>
<p>點擊<strong>安裝憑證</strong><br><img src="/images/msix/image3.png" alt="UntrustedApp_Step3" title="width='350'" width="350" /></p>
<p>選擇<strong>本機電腦</strong><br><img src="/images/msix/image4.png" alt="UntrustedApp_Step4" title="width='350'" width="350" /></p>
<p>選擇存放在<strong>受信任的根憑證目錄</strong><br><img src="/images/msix/image5.png" alt="UntrustedApp_Step5" title="width='350'" width="350" /></p>
<p>點擊<strong>完成</strong><br><img src="/images/msix/image6.png" alt="UntrustedApp_Step6" title="width='350'" width="350" /></p>
<p>接著全部點確定，再開啟.msix檔案，就變為受信任的應用程式且可以安裝了～<br><img src="https://docs.microsoft.com/zh-tw/windows/msix/images/msix-good-cert.png" alt="取自https://docs.microsoft.com/"></p>
]]></content>
      <categories>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>App</tag>
        <tag>Flutter</tag>
        <tag>Dart</tag>
        <tag>Windows</tag>
        <tag>MSIX</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux硬碟的大小事</title>
    <url>//post/linux-disk.html</url>
    <content><![CDATA[<p>今天想要來幫目前已經在運行的GCP VM來掛載一個新的硬碟，使會持續變多的資料不要存在開機碟，而是把他掛載到新的硬碟裡，這樣之後也可以方便地隨著資料增加而擴增。</p>
<h2 id="新增磁碟"><a href="#新增磁碟" class="headerlink" title="新增磁碟"></a>新增磁碟</h2><h3 id="GCP端"><a href="#GCP端" class="headerlink" title="GCP端"></a>GCP端</h3><p>首先要從GCP選擇需要增加硬碟的VM，並點擊編輯來新增一個新的硬碟或已存在的硬碟，選擇完後按儲存GCP這邊就新增完成了！<br><img src="https://imgur.com/mgnuN28.png" alt="Imgur"></p>
<h3 id="Linux端"><a href="#Linux端" class="headerlink" title="Linux端"></a>Linux端</h3><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot="">
<path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path>
<path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path>
<path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path>
</svg>
</span><p>以下指令皆使用root呼叫</p></blockquote>
<h4 id="確認磁碟狀態"><a href="#確認磁碟狀態" class="headerlink" title="確認磁碟狀態"></a>確認磁碟狀態</h4><p>第一步先列出目前有的硬碟，而我新增的硬碟叫<strong>sdb</strong>，大小為256GB</p>
<pre class="line-numbers language-console" data-language="console"><code class="language-console">$ lsblk
NAME    MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
sda       8:0    0   10G  0 disk 
├─sda1    8:1    0  9.9G  0 part &#x2F;
├─sda14   8:14   0    3M  0 part 
└─sda15   8:15   0  124M  0 part &#x2F;boot&#x2F;efi
sdb       8:16   0  256G  0 disk</code></pre>

<p>再來確認一下硬碟的掛載狀態，可以看到目前我們新增的硬碟還沒有被掛載</p>
<pre class="line-numbers language-console" data-language="console"><code class="language-console">$ df -h
Filesystem      Size  Used Avail Use% Mounted on
udev            2.0G     0  2.0G   0% &#x2F;dev
&#x2F;dev&#x2F;sda1       9.7G  1.9G  7.4G  20% &#x2F;
&#x2F;dev&#x2F;sda15      124M  5.7M  119M   5% &#x2F;boot&#x2F;efi</code></pre>

<h4 id="格式化磁碟"><a href="#格式化磁碟" class="headerlink" title="格式化磁碟"></a>格式化磁碟</h4><p>接下來我們使用<code>mkfs</code>來格式化硬碟，並使用<code>ext4</code>文件系統，之後便可以快速增加硬碟大小，不需修改分區</p>
<pre class="line-numbers language-console" data-language="console"><code class="language-console">$ mkfs.ext4 -m 0 -E lazy_itable_init&#x3D;0,lazy_journal_init&#x3D;0,discard &#x2F;dev&#x2F;sdb</code></pre>
<blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot="">
<path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path>
<path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path>
<path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path>
</svg>
</span><p>-m 0: 使用所有可用的磁碟空間<br>-E  : 最大限度的提高磁碟性能</p></blockquote>
<h4 id="掛載磁碟"><a href="#掛載磁碟" class="headerlink" title="掛載磁碟"></a>掛載磁碟</h4><p>接著創建一個掛載磁碟的目錄，這邊創建一個<code>/data</code>目錄</p>
<pre class="line-numbers language-console" data-language="console"><code class="language-console">$ mkdir -p data
$ ls
bin   data  etc   lib    lib64   lost+found  mnt  proc  run   srv  tmp  var
boot  dev   home  lib32  libx32  media       opt  root  sbin  sys  usr</code></pre>

<p>再來使用<code>mount</code>來將磁碟掛載到對應的目錄</p>
<pre class="line-numbers language-console" data-language="console"><code class="language-console">$ mount -o discard,defaults &#x2F;dev&#x2F;sdb &#x2F;data</code></pre>

<p>並讓所有用戶有讀寫權限</p>
<pre class="line-numbers language-console" data-language="console"><code class="language-console">$ chmod a+w &#x2F;data</code></pre>

<h4 id="設置開機時自動掛載"><a href="#設置開機時自動掛載" class="headerlink" title="設置開機時自動掛載"></a>設置開機時自動掛載</h4><p>獲取磁碟的<strong>UUID</strong></p>
<pre class="line-numbers language-console" data-language="console"><code class="language-console">$ blkid dev&#x2F;sdb -s UUID -o value
ccff9e1e-b518-4ac5-aabd-e37988247c95</code></pre>

<p>複製磁碟的UUID，打開<code>/etc/fstab</code></p>
<pre class="line-numbers language-console" data-language="console"><code class="language-console">$ vi etc&#x2F;fstab</code></pre>

<p>將硬碟加入<code>/etc/fstab</code>，<code>nofail</code>為在磁碟不可用時也能開機</p>
<pre class="line-numbers language-console" data-language="console"><code class="language-console">UUID&#x3D;ccff9e1e-b518-4ac5-aabd-e37988247c95 &#x2F;data ext4 discard,defaults,nofail 0 2</code></pre>

<p>接著重新啟動VM，並確認磁碟狀態，如果新磁碟有掛載上去就大功告成了～～</p>
<h2 id="增加磁碟大小"><a href="#增加磁碟大小" class="headerlink" title="增加磁碟大小"></a>增加磁碟大小</h2><h3 id="GCP端-1"><a href="#GCP端-1" class="headerlink" title="GCP端"></a>GCP端</h3><p>在<strong>Compute Engine</strong> &gt; <strong>磁碟</strong> 選擇要擴增的磁碟然後編輯它的大小，並儲存</p>
<blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot="">
<path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path>
<path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path>
<path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path>
</svg>
</span><p>大小只能增加不能減少</p></blockquote>
<p><img src="https://imgur.com/uajWt0O.png" alt="Imgur"></p>
<h3 id="Linux端-1"><a href="#Linux端-1" class="headerlink" title="Linux端"></a>Linux端</h3><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot="">
<path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path>
<path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path>
<path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path>
</svg>
</span><p>此方法只適用不是開機碟的磁碟</p></blockquote>
<p>使用<code>resize2fs</code>調整磁碟掛載大小</p>
<pre class="line-numbers language-console" data-language="console"><code class="language-console">resize2fs &#x2F;dev&#x2F;sdb</code></pre>

<p>然後再使用<code>df -h</code>確認掛載大小就成功了～是不是超簡單！</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Debian</tag>
        <tag>GCP</tag>
      </tags>
  </entry>
  <entry>
    <title>Flutter的Windows套件 - webview_windows (2)</title>
    <url>//post/flutter-webview-windows-2.html</url>
    <content><![CDATA[<p>前幾天介紹了webview_windows的<a href="https://cailirl980519.github.io/2021/10/07/flutter-webview-windows/">基本使用</a>，我們已經學會了如何在Flutter App裡開啟網頁，但通常如果是開啟自己的網頁的話，可能有些Web功能就需要跟Flutter端溝通。<br>今天要來學習如何運用<a href="https://pub.dev/packages/webview_windows">webview_windows</a>來接收網頁的訊息及從Flutter傳訊息至Web端。</p>
<h3 id="前置作業"><a href="#前置作業" class="headerlink" title="前置作業"></a>前置作業</h3><ul>
<li>引入<code>webview_windows</code>套件</li>
<li>創建一個需要溝通的html檔<blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot="">
<path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path>
<path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path>
<path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path>
</svg>
</span><p>以下是這次範例所使用的html</p></blockquote>
<pre class="line-numbers language-html" data-language="html"><code class="language-html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
	&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;
    &lt;link href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;bootstrap@5.0.2&#x2F;dist&#x2F;css&#x2F;bootstrap.min.css&quot; rel&#x3D;&quot;stylesheet&quot; integrity&#x3D;&quot;sha384-EVSTQN3&#x2F;azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC&quot; crossorigin&#x3D;&quot;anonymous&quot;&gt;
	&lt;title&gt;WebView Sample for Windows&lt;&#x2F;title&gt;
&lt;&#x2F;head&gt;
&lt;body&gt;
    &lt;h1 class&#x3D;&quot;text-center&quot;&gt;Communicate With Flutter&lt;&#x2F;h1&gt;
    &lt;div&gt;
        &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;@lottiefiles&#x2F;lottie-player@latest&#x2F;dist&#x2F;lottie-player.js&quot;&gt;&lt;&#x2F;script&gt;
        &lt;lottie-player class&#x3D;&quot;mx-auto&quot; src&#x3D;&quot;https:&#x2F;&#x2F;assets1.lottiefiles.com&#x2F;packages&#x2F;lf20_zwykwl1i.json&quot;  background&#x3D;&quot;transparent&quot;  speed&#x3D;&quot;1&quot;  style&#x3D;&quot;width: 300px; height: 300px;&quot;  loop autoplay&gt;&lt;&#x2F;lottie-player&gt;
    &lt;&#x2F;div&gt;
    &lt;div class&#x3D;&quot;row justify-content-around&quot;&gt;
        &lt;div class&#x3D;&quot;col-5&quot;&gt;
            &lt;h3&gt;Example 1.&lt;&#x2F;h3&gt;
            &lt;input id&#x3D;&quot;web_message&quot; class&#x3D;&quot;w-100 mb-2&quot; type&#x3D;&quot;text&quot; value&#x3D;&quot;Hi! I&#39;m web message.&quot;&gt;
            &lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;btn btn-primary&quot; onclick&#x3D;&quot;sendMessage()&quot;&gt;Send Message to Flutter&lt;&#x2F;button&gt;
        &lt;&#x2F;div&gt;
        &lt;div class&#x3D;&quot;col-5&quot;&gt;
            &lt;h3&gt;Example 2.&lt;&#x2F;h3&gt;
            &lt;p&gt;Message from Dart:&lt;&#x2F;p&gt;
            &lt;textarea id&#x3D;&quot;flutter&quot; class&#x3D;&quot;w-100&quot; disabled&#x3D;&quot;true&quot; style&#x3D;&quot;height: 30vw;&quot;&gt;&lt;&#x2F;textarea&gt;
        &lt;&#x2F;div&gt;
    &lt;&#x2F;div&gt;
&lt;&#x2F;body&gt;
&lt;&#x2F;html&gt;</code></pre>
<h3 id="Web-to-Flutter-將Web訊息傳至Flutter"><a href="#Web-to-Flutter-將Web訊息傳至Flutter" class="headerlink" title="Web to Flutter - 將Web訊息傳至Flutter"></a>Web to Flutter - 將Web訊息傳至Flutter</h3></li>
</ul>
<h4 id="Web端"><a href="#Web端" class="headerlink" title="Web端"></a>Web端</h4><p>在JavaScipt內加入function <code>sendMessage()</code></p>
<pre class="line-numbers language-js" data-language="js"><code class="language-js">const message &#x3D; document.getElementById(&quot;web_message&quot;) &#x2F;&#x2F; 輸入文字的input元件
function sendMessage() &#123;
    &#x2F;&#x2F; 若無Flutter通道則不動作
    if (window.chrome &#x3D;&#x3D;&#x3D; undefined &amp;&amp; window.chrome.webview &#x3D;&#x3D;&#x3D; undefined)
        return
    &#x2F;&#x2F; 將訊息以json格式傳送
    window.chrome.webview.postMessage(&#123;&quot;message&quot;: message.value&#125;)
&#125;</code></pre>

<h4 id="Flutter端"><a href="#Flutter端" class="headerlink" title="Flutter端"></a>Flutter端</h4><p>先宣告<code>WebviewController</code></p>
<pre class="line-numbers language-dart" data-language="dart"><code class="language-dart">import &#39;package:webview_windows&#x2F;webview_windows.dart&#39; as wweb;

final _winController &#x3D; wweb.WebviewController();</code></pre>

<p>並寫一個<code>initWindowsWebView()</code>的function來初始Webview，並在Webview載入完成時監聽Web端訊息</p>
<pre class="line-numbers language-dart" data-language="dart"><code class="language-dart">Future&lt;void&gt; initWindowsWebView() async &#123;
    if (!Platform.isWindows) return;
    await _winController.initialize();
    String data &#x3D; await rootBundle.loadString(&quot;assets&#x2F;webpages&#x2F;index.html&quot;);
    await _winController.loadStringContent(data);
    while (!_winController.value.isInitialized) &#123;
        sleep(Duration(milliseconds: 200));
    &#125;
    setState(() &#123;&#125;);
    &#x2F;&#x2F; 等待Webview載入完成
    await for (wweb.LoadingState value in _winController.loadingState) &#123;
        if (value.toString() &#x3D;&#x3D; &quot;LoadingState.navigationCompleted&quot;) &#123;
            &#x2F;&#x2F; 監聽Web端訊息
            _winController.webMessage.listen((args) async &#123;
                &#x2F;&#x2F; args為接收到的訊息(e.g. &#123;&quot;message&quot;: &quot;Hi! I&#39;m web message.&quot;&#125;)
                &#x2F;&#x2F; 收到訊息動作（彈出對話框）
                showDialog(
                    context: context,
                    builder: (context) &#123;
                        return AlertDialog(
                            title: Text(&quot;Message from Web&quot;),
                            content: Text(&quot;$&#123;args[&quot;message&quot;]&#125;&quot;),
                        );
                    &#125;,
                );
            &#125;);
        &#125;
    &#125;
&#125;</code></pre>

<p>最後在<code>initState()</code>時呼叫<code>initWindowsWebView()</code>，並在離開時關閉<code>WebviewController</code></p>
<pre class="line-numbers language-dart" data-language="dart"><code class="language-dart">@override
void initState() &#123;
    super.initState();
    initWindowsWebView();
&#125;

@override
void dispose() &#123;
    super.dispose();
    _winController.dispose(); &#x2F;&#x2F; 增加這行來關閉WebviewController
&#125;</code></pre>

<h3 id="Flutter-to-Web-將Flutter訊息傳至Web"><a href="#Flutter-to-Web-將Flutter訊息傳至Web" class="headerlink" title="Flutter to Web - 將Flutter訊息傳至Web"></a>Flutter to Web - 將Flutter訊息傳至Web</h3><h4 id="Web端-1"><a href="#Web端-1" class="headerlink" title="Web端"></a>Web端</h4><p>在JavaScipt加入監聽Flutter訊息的Code</p>
<pre class="line-numbers language-js" data-language="js"><code class="language-js">const textarea &#x3D; document.getElementById(&quot;flutter&quot;) &#x2F;&#x2F; 顯示Flutter訊息的textarea元件
&#x2F;&#x2F; 若無Flutter通道則不監聽
if (window.chrome !&#x3D;&#x3D; undefined &amp;&amp; window.chrome.webview !&#x3D;&#x3D; undefined) &#123;
    window.chrome.webview.addEventListener(&#39;message&#39;, function(e) &#123;
        &#x2F;&#x2F; 若收到到訊息動作
        textarea.innerHTML +&#x3D; (e.data.message + &quot;\n&quot;)
    &#125;)
&#125;</code></pre>
<h4 id="Flutter端-1"><a href="#Flutter端-1" class="headerlink" title="Flutter端"></a>Flutter端</h4><p>宣告一個<code>TextEditingController</code>來輸入訊息，並在離開時關閉</p>
<pre class="line-numbers language-dart" data-language="dart"><code class="language-dart">final _textController &#x3D; TextEditingController(text: &quot;Hi! I&#39;m flutter message.&quot;);

@override
void dispose() &#123;
    super.dispose();
    _textController.dispose(); &#x2F;&#x2F; 增加這行來關閉TextEditingController
&#125;</code></pre>

<p>新增一個<code>IconButton</code>元件來傳送訊息至Web</p>
<pre class="line-numbers language-dart" data-language="dart"><code class="language-dart">IconButton(
    icon: Icon(Icons.send),
    onPressed: () &#123;
        showDialog(
            context: context,
            builder: (context) &#123;
                return AlertDialog(
                    title: Text(&quot;Send Message to Web&quot;),
                    content: TextField(
                        controller: _textController,
                    ),
                    actions: [
                        TextButton(
                            child: Text(&quot;Send&quot;),
                            onPressed: () &#123;
                                &#x2F;&#x2F; 將欲傳送至Web的訊息宣告為data
                                Map data &#x3D; &#123;&quot;message&quot;: _textController.text&#125;;
                                &#x2F;&#x2F; 將data傳送至Web
                                _winController.postWebMessage(&#39;$&#123;jsonEncode(data)&#125;&#39;);
                                Navigator.of(context).pop();
                            &#125;,
                        ),
                    ],
                );
            &#125;,
        );
    &#125;,
)</code></pre>

<h3 id="大坑1-UTF8編碼問題"><a href="#大坑1-UTF8編碼問題" class="headerlink" title="大坑1 - UTF8編碼問題"></a>大坑1 - UTF8編碼問題</h3><p>在webview_windows 0.0.8（目前最新）這個版本中，尚未對UTF8編碼做特殊處理，也就是如果在溝通上使用中文字的話則會出現問題，所以我就研究了一下套件源碼，經歷了千辛萬苦(?，終於讓套件用中文溝通了～</p>
<p>首先，我們先進入webview_windows的檔案位置，通常會在Flutter SDK位置下的資料夾內<br><em>e.g. …&#x2F;flutter&#x2F;.pub-cache&#x2F;hosted&#x2F;pub.dartlang.org&#x2F;webview_windows-0.0.8&#x2F;windows&#x2F;</em></p>
<p>接著，找到<code>webview_bridge.cc</code>檔案並修改裡面的<code>towstring</code> function</p>
<pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">std::wstring towstring(std::string_view str) &#123;
  if (str.empty()) &#123;
    return std::wstring();
  &#125;
  int utf16Length &#x3D; ::MultiByteToWideChar(CP_UTF8, MB_ERR_INVALID_CHARS, str.data(), static_cast&lt;int&gt;(str.length()), nullptr, 0);
  if (utf16Length &#x3D;&#x3D; 0) &#123;
    return std::wstring();
  &#125;
  std::wstring utf16;
  utf16.resize(utf16Length);
  int convertLength &#x3D; ::MultiByteToWideChar(CP_UTF8, MB_ERR_INVALID_CHARS, str.data(), static_cast&lt;int&gt;(str.length()), utf16.data(), utf16Length);
  if (convertLength &#x3D;&#x3D; 0) &#123;
    return std::wstring();
  &#125;
  return utf16;
&#125;</code></pre>
<blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot="">
<path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path>
<path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path>
<path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path>
</svg>
</span><p>修改後，此function會將傳至Web的值變為正確的UTF8編碼</p></blockquote>
<p>接下來，我們再來修改<code>webview.cc</code>中的<code>webview_-&gt;add_WebMessageReceived</code></p>
<pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">webview_-&gt;add_WebMessageReceived(
  Callback&lt;ICoreWebView2WebMessageReceivedEventHandler&gt;(
      [this](ICoreWebView2* sender,
              ICoreWebView2WebMessageReceivedEventArgs* args) -&gt; HRESULT &#123;
        wil::unique_cotaskmem_string wmessage;
        if (web_message_received_callback_ &amp;&amp;
            args-&gt;get_WebMessageAsJson(&amp;wmessage) &#x3D;&#x3D; S_OK) &#123;
          const std::string message &#x3D;  CW2A(wmessage.get(), CP_UTF8); &#x2F;&#x2F; 加入CP_UTF8指定UTF8編碼
          web_message_received_callback_(message);
        &#125;

        return S_OK;
      &#125;)
      .Get(),
  &amp;event_registrations_.web_message_received_token_);</code></pre>
<blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot="">
<path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path>
<path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path>
<path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path>
</svg>
</span><p>修改後，Web接收到的值經過C++後中文就不會變亂碼了</p></blockquote>
<h3 id="Bonus-回傳Web的console-log訊息至Flutter端"><a href="#Bonus-回傳Web的console-log訊息至Flutter端" class="headerlink" title="Bonus - 回傳Web的console.log訊息至Flutter端"></a>Bonus - 回傳Web的console.log訊息至Flutter端</h3><p>再測試時，常常需要用到<code>console.log</code>來確認程式碼有沒有問題，所以我們就可以直接劫持console.log訊息，將他傳至Flutter端。</p>
<h4 id="Web端-2"><a href="#Web端-2" class="headerlink" title="Web端"></a>Web端</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js">console.log &#x3D; function (txt) &#123;
    let messages &#x3D; []
    &#x2F;&#x2F; arguments為console.log輸出訊息
    for (var i &#x3D; 0; i &lt; arguments.length; i++) &#123;
        messages.push(arguments[i]) &#x2F;&#x2F; 將訊息存至messages
    &#125;
    &#x2F;&#x2F; 將messages傳至Flutter端
    window.chrome.webview.postMessage(
        &#123; 
            &quot;method&quot;: &quot;console&quot;, &#x2F;&#x2F; 宣告來源，方便Flutter端判斷
            &quot;message&quot;: messages.join(&quot; &quot;) 
        &#125;
    )
&#125;</code></pre>
<blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot="">
<path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path>
<path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path>
<path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path>
</svg>
</span><p><code>console.log</code>被劫持後就不會印在主控台(Console)上了哦！畢竟它被綁架了麻～</p></blockquote>
<h4 id="Flutter端-2"><a href="#Flutter端-2" class="headerlink" title="Flutter端"></a>Flutter端</h4><p>我們一樣在<code>initWindowsWebView()</code>內監聽，只是在多加判斷它是不是console的訊息，如果是的話則輸出至Flutter Console。</p>
<pre class="line-numbers language-dart" data-language="dart"><code class="language-dart">await for (wweb.LoadingState value in _winController.loadingState) &#123;
    if (value.toString() &#x3D;&#x3D; &quot;LoadingState.navigationCompleted&quot;) &#123;
        &#x2F;&#x2F; 監聽Web端訊息
        _winController.webMessage.listen((args) async &#123;
            &#x2F;&#x2F; args為接收到的訊息(e.g. &#123;&quot;message&quot;: &quot;Hi! I&#39;m web message.&quot;&#125;)
            if (args[&quot;method&quot;] &#x3D;&#x3D; &quot;console&quot;) &#123;
                &#x2F;&#x2F; 若為console訊息動作
                print(args[&quot;message&quot;]);
            &#125; else &#123;
                &#x2F;&#x2F; 收到訊息動作（彈出對話框）
                showDialog(
                    context: context,
                    builder: (context) &#123;
                        return AlertDialog(
                            title: Text(&quot;Message from Web&quot;),
                            content: Text(&quot;$&#123;args[&quot;message&quot;]&#125;&quot;),
                        );
                    &#125;,
                );
            &#125;
            
        &#125;);
    &#125;
&#125;</code></pre>

<h3 id="感動到哭的成果時間"><a href="#感動到哭的成果時間" class="headerlink" title="感動到哭的成果時間"></a>感動到哭的成果時間</h3><script src="https://unpkg.com/@lottiefiles/lottie-player@latest/dist/lottie-player.js"></script>
<p><lottie-player src="https://assets9.lottiefiles.com/packages/lf20_xkbhgbld.json"  background="transparent"  speed="1"  style="width: 300px; height: 300px;"  loop autoplay></lottie-player></p>
<p><em>忘記備份成果了，等有Windows電腦後再回來放…</em></p>
<h3 id="Full-Code"><a href="#Full-Code" class="headerlink" title="Full Code"></a>Full Code</h3><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot="">
<path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path>
<path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path>
<path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path>
</svg>
</span><p>完整程式碼請至<a href="https://github.com/cailirl980519/sample_windows_webview">sample_windows_webview</a></p></blockquote>
<h4 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h4><pre class="line-numbers language-html" data-language="html"><code class="language-html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
	&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;
    &lt;link href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;bootstrap@5.0.2&#x2F;dist&#x2F;css&#x2F;bootstrap.min.css&quot; rel&#x3D;&quot;stylesheet&quot; integrity&#x3D;&quot;sha384-EVSTQN3&#x2F;azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC&quot; crossorigin&#x3D;&quot;anonymous&quot;&gt;
	&lt;title&gt;WebView Sample for Windows&lt;&#x2F;title&gt;
&lt;&#x2F;head&gt;
&lt;body&gt;
    &lt;h1 class&#x3D;&quot;text-center&quot;&gt;Communicate With Flutter&lt;&#x2F;h1&gt;
    &lt;div&gt;
        &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;@lottiefiles&#x2F;lottie-player@latest&#x2F;dist&#x2F;lottie-player.js&quot;&gt;&lt;&#x2F;script&gt;
        &lt;lottie-player class&#x3D;&quot;mx-auto&quot; src&#x3D;&quot;https:&#x2F;&#x2F;assets1.lottiefiles.com&#x2F;packages&#x2F;lf20_zwykwl1i.json&quot;  background&#x3D;&quot;transparent&quot;  speed&#x3D;&quot;1&quot;  style&#x3D;&quot;width: 300px; height: 300px;&quot;  loop autoplay&gt;&lt;&#x2F;lottie-player&gt;
    &lt;&#x2F;div&gt;
    &lt;div class&#x3D;&quot;row justify-content-around&quot;&gt;
        &lt;div class&#x3D;&quot;col-5&quot;&gt;
            &lt;h3&gt;Example 1.&lt;&#x2F;h3&gt;
            &lt;input id&#x3D;&quot;web_message&quot; class&#x3D;&quot;w-100 mb-2&quot; type&#x3D;&quot;text&quot; value&#x3D;&quot;Hi! I&#39;m web message.&quot;&gt;
            &lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;btn btn-primary&quot; onclick&#x3D;&quot;sendMessage()&quot;&gt;Send Message to Flutter&lt;&#x2F;button&gt;
        &lt;&#x2F;div&gt;
        &lt;div class&#x3D;&quot;col-5&quot;&gt;
            &lt;h3&gt;Example 2.&lt;&#x2F;h3&gt;
            &lt;p&gt;Message from Dart:&lt;&#x2F;p&gt;
            &lt;textarea id&#x3D;&quot;flutter&quot; class&#x3D;&quot;w-100&quot; disabled&#x3D;&quot;true&quot; style&#x3D;&quot;height: 30vw;&quot;&gt;&lt;&#x2F;textarea&gt;
        &lt;&#x2F;div&gt;
    &lt;&#x2F;div&gt;
&lt;&#x2F;body&gt;
&lt;script&gt;
    const message &#x3D; document.getElementById(&quot;web_message&quot;)
    function sendMessage() &#123;
        if (window.chrome &#x3D;&#x3D;&#x3D; undefined &amp;&amp; window.chrome.webview &#x3D;&#x3D;&#x3D; undefined)
            return
        window.chrome.webview.postMessage(&#123;&quot;message&quot;: message.value&#125;)
    &#125;
    const textarea &#x3D; document.getElementById(&quot;flutter&quot;)
    if (window.chrome !&#x3D;&#x3D; undefined &amp;&amp; window.chrome.webview !&#x3D;&#x3D; undefined) &#123;
        window.chrome.webview.addEventListener(&#39;message&#39;, function(e) &#123;
            textarea.innerHTML +&#x3D; (e.data.message + &quot;\n&quot;)
        &#125;)
    &#125;
&lt;&#x2F;script&gt;
&lt;&#x2F;html&gt;</code></pre>

<h4 id="index-html-1"><a href="#index-html-1" class="headerlink" title="index.html"></a>index.html</h4><pre class="line-numbers language-dart" data-language="dart"><code class="language-dart">import &#39;dart:convert&#39;;
import &#39;dart:io&#39;;

import &#39;package:flutter&#x2F;material.dart&#39;;
import &#39;package:flutter&#x2F;services.dart&#39;;
import &#39;package:lottie&#x2F;lottie.dart&#39;;
import &#39;package:webview_windows&#x2F;webview_windows.dart&#39; as wweb;

class WebView2Page extends StatefulWidget &#123;
  const WebView2Page(&#123;Key? key&#125;) : super(key: key);

  @override
  _WebView2PageState createState() &#x3D;&gt; _WebView2PageState();
&#125;

class _WebView2PageState extends State&lt;WebView2Page&gt; &#123;
  final _winController &#x3D; wweb.WebviewController();
  final _textController &#x3D;
      TextEditingController(text: &quot;Hi! I&#39;m flutter message.&quot;);

  Future&lt;void&gt; initWindowsWebView() async &#123;
    if (!Platform.isWindows) return;
    await _winController.initialize();
    String data &#x3D; await rootBundle.loadString(&quot;assets&#x2F;webpages&#x2F;index.html&quot;);
    await _winController.loadStringContent(data);
    while (!_winController.value.isInitialized) &#123;
      sleep(Duration(milliseconds: 200));
    &#125;
    setState(() &#123;&#125;);
    await for (wweb.LoadingState value in _winController.loadingState) &#123;
      if (value.toString() &#x3D;&#x3D; &quot;LoadingState.navigationCompleted&quot;) &#123;
        _winController.webMessage.listen((args) async &#123;
          showDialog(
            context: context,
            builder: (context) &#123;
              return AlertDialog(
                title: Text(&quot;Message from Web&quot;),
                content: Text(&quot;$&#123;args[&quot;message&quot;]&#125;&quot;),
              );
            &#125;,
          );
        &#125;);
      &#125;
    &#125;
  &#125;

  Widget webView() &#123;
    if (!Platform.isWindows)
      return Center(
        child: Text(&quot;not Support&quot;),
      );
    if (!_winController.value.isInitialized)
      return Center(
        child: Lottie.network(
            &quot;https:&#x2F;&#x2F;assets9.lottiefiles.com&#x2F;datafiles&#x2F;bEYvzB8QfV3EM9a&#x2F;data.json&quot;),
      );
    return Container(
      child: wweb.Webview(_winController),
    );
  &#125;

  @override
  void initState() &#123;
    super.initState();
    initWindowsWebView();
  &#125;

  @override
  void dispose() &#123;
    super.dispose();
    _winController.dispose();
    _textController.dispose();
  &#125;

  @override
  Widget build(BuildContext context) &#123;
    return Scaffold(
      appBar: AppBar(
        title: Text(&quot;Sample2&quot;),
        actions: [
          IconButton(
            icon: Icon(Icons.send),
            onPressed: () &#123;
              showDialog(
                context: context,
                builder: (context) &#123;
                  return AlertDialog(
                    title: Text(&quot;Send Message to Web&quot;),
                    content: TextField(
                      controller: _textController,
                    ),
                    actions: [
                      TextButton(
                        child: Text(&quot;Send&quot;),
                        onPressed: () &#123;
                          Map data &#x3D; &#123;
                            &quot;message&quot;: _textController.text,
                          &#125;;
                          print(data);
                          _winController.postWebMessage(&#39;$&#123;jsonEncode(data)&#125;&#39;);
                          Navigator.of(context).pop();
                        &#125;,
                      ),
                    ],
                  );
                &#125;,
              );
            &#125;,
          )
        ],
      ),
      body: webView(),
    );
  &#125;
&#125;</code></pre>
]]></content>
      <categories>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>App</tag>
        <tag>Flutter</tag>
        <tag>Dart</tag>
        <tag>Windows</tag>
        <tag>Edge Webview2</tag>
      </tags>
  </entry>
  <entry>
    <title>識別HTML5 Canvas上的圖形（直線、箭號、圓形、矩形...）</title>
    <url>//post/js-shape-recognition.html</url>
    <content><![CDATA[<p>在iOS的備忘錄或Samsung Note App裡畫畫都可以將手畫的筆跡轉換成漂亮的圖形，讓我不禁想嘗試HTML5的Canvas是不是也可以做到，今天就來記錄一下如何將HTML5 Canvas上醜醜的圖形變成漂亮的直線、箭號、矩形等等。</p>
<h3 id="開心地展示時間"><a href="#開心地展示時間" class="headerlink" title="開心地展示時間"></a>開心地展示時間</h3><p class="codepen" data-height="300" data-slug-hash="zYdNBxM" data-preview="true" data-editable="true" data-user="cailirl980519" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
  <span>See the Pen <a href="https://codepen.io/cailirl980519/pen/zYdNBxM">
  Shape Recognition</a> by cailirl980519 (<a href="https://codepen.io/cailirl980519">@cailirl980519</a>)
  on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script>

<h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><h4 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h4><p>首先，先在頁面創建一個<code>&lt;canvas&gt;</code>用來畫畫，再創建一個<code>&lt;button&gt;</code>來清除畫布</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html">&lt;canvas id&#x3D;&quot;canvas&quot;&gt;&lt;&#x2F;canvas&gt;
&lt;div id&#x3D;&quot;menu&quot;&gt;
  &lt;button id&#x3D;&quot;clear&quot; onclick&#x3D;&quot;reset()&quot;&gt;clear&lt;&#x2F;button&gt;
&lt;&#x2F;div&gt;</code></pre>

<h4 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h4><p>再來用CSS排個版～</p>
<pre class="line-numbers language-css" data-language="css"><code class="language-css">#canvas &#123;
  width: 100vw;
  height: 100vh;
&#125;
#menu &#123;
  position: absolute;
  top: 10px;
  left: 10px;
  z-index: 1;
&#125;</code></pre>

<h4 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h4><p>先宣告幾個等等需要用到的參數，並將偵測動作加入畫布</p>
<pre class="line-numbers language-js" data-language="js"><code class="language-js">const isMobile &#x3D; window.orientation !&#x3D;&#x3D; undefined;
const canvas &#x3D; document.getElementById(&quot;canvas&quot;);
&#x2F;&#x2F; 設定畫布大小
canvas.width &#x3D; canvas.clientWidth;
canvas.height &#x3D; canvas.clientHeight;
const ctx &#x3D; canvas.getContext(&quot;2d&quot;);
&#x2F;&#x2F; 設定畫布樣式
ctx.fillStyle &#x3D; &quot;lightgray&quot;;
ctx.lineWidth &#x3D; 2;
ctx.font &#x3D; &quot;30px Arial&quot;;
&#x2F;&#x2F; 記錄筆跡的參數
var drawCache &#x3D; new Array();
var lineCache &#x3D; new Array();
&#x2F;&#x2F; 偵測畫布動作
if (isMobile) &#123;
  canvas.addEventListener(&quot;touchstart&quot;, handleDraw);
  canvas.addEventListener(&quot;touchmove&quot;, handleDraw);
  canvas.addEventListener(&quot;touchend&quot;, handleDraw);
&#125; else &#123;
  canvas.addEventListener(&quot;pointerdown&quot;, handleDraw);
  canvas.addEventListener(&quot;pointermove&quot;, handleDraw);
  canvas.addEventListener(&quot;pointerup&quot;, handleDraw);
  canvas.addEventListener(&quot;pointercancel&quot;, handleDraw);
&#125;</code></pre>

<p>接下來宣告一個<code>handleDraw</code> function來執行偵測到畫布動作後需要做的事情：</p>
<ul>
<li>偵測到這些動作時，將目前觸碰到的點加入<code>lineCache</code>陣列裡<ul>
<li>pointerdown</li>
<li>pointermove</li>
<li>touchstart</li>
<li>touchmove</li>
</ul>
</li>
<li>偵測到這些動作時，利用<code>detectShape</code>判斷圖形，再將偵測到的圖形及目前的線段<code>lineCache</code>新增至<code>drawCache</code><ul>
<li>pointerup</li>
<li>pointercancel</li>
<li>touchend</li>
</ul>
</li>
</ul>
<pre class="line-numbers language-js" data-language="js"><code class="language-js">function handleDraw(e) &#123;
  e.preventDefault();
  if (
    (isMobile &amp;&amp; (e.type &#x3D;&#x3D; &quot;touchstart&quot; || e.type &#x3D;&#x3D; &quot;touchmove&quot;)) ||
    (e.buttons &#x3D;&#x3D; 1 &amp;&amp; (e.type &#x3D;&#x3D; &quot;pointerdown&quot; || e.type &#x3D;&#x3D; &quot;pointermove&quot;))
  ) &#123;
    &#x2F;&#x2F; 將目前觸碰到的點加入&#96;lineCache&#96;陣列裡
    lineCache.push(&#123;
      x: isMobile ? e.touches[0].clientX : e.clientX,
      y: isMobile ? e.touches[0].clientY : e.clientY
    &#125;);
    draw(); &#x2F;&#x2F; 更新畫布
  &#125; else if (
    e.type &#x3D;&#x3D; &quot;pointerup&quot; ||
    e.type &#x3D;&#x3D; &quot;pointercancel&quot; ||
    e.type &#x3D;&#x3D; &quot;touchend&quot;
  ) &#123;
    if (lineCache.length &gt; 1) &#123;
      detectShape(lineCache); &#x2F;&#x2F; 偵測圖形
    &#125;
    lineCache &#x3D; new Array();
    draw(); &#x2F;&#x2F; 更新畫布
  &#125;
&#125;</code></pre>

<p>接著就是今天的重點<code>detectShape</code></p>
<ol>
<li>先將三個連續點變為兩個線段，並判斷兩個線段的角度，如果大於<code>Math.PI / 4</code>則認定它為角</li>
<li>計算所有認定為角的平均角度</li>
<li>判斷第一個點跟最後一個點的距離是否小於30，如是，則認定為封閉的圖形，並將<strong>第一個點</strong>加入<code>corners</code>的最後一項</li>
<li>若為封閉的圖形，則利用<code>avgA</code>判斷是否為<strong>圓形</strong>或<strong>橢圓形</strong></li>
<li>若為封閉的圖形，且不是圓形或橢圓形，並有5個角，則可以認定它為<strong>四方形</strong>，接著就繼續判斷是否為<strong>矩形</strong></li>
<li>若不為封閉的圖形，則將<strong>最後一個</strong>點加入<code>corners</code>的最後一項</li>
<li>若不為封閉的圖形，則判斷是否為曲線、直線或箭號</li>
</ol>
<pre class="line-numbers language-js" data-language="js"><code class="language-js">function detectShape(points) &#123;
  let ptLast &#x3D; &#123; ...points[points.length - 1] &#125;;
  ptLast.index &#x3D; points.length - 1;
  &#x2F;&#x2F; 線段轉彎的地方（角）
  let corners &#x3D; [points[0]];
  let n &#x3D; 0;
  let t &#x3D; 0;
  let lastCorner &#x3D; points[0];
  let angles &#x3D; 0;
  let avgA;
  &#x2F;&#x2F; 1. 判斷是否為角
  for (let i &#x3D; 1; i &lt; points.length - 2; i++) &#123;
    let pt &#x3D; points[i + 1];
    let d &#x3D; delta(lastCorner, points[i - 1]);
    if (len(d) &gt; 20 &amp;&amp; n &gt; 2) &#123;
      ac &#x3D; delta(points[i - 1], pt);
      if (Math.abs(angle_between(ac, d)) &gt; Math.PI &#x2F; 4) &#123;
        angles +&#x3D; (angle_between(ac, d) * 180) &#x2F; Math.PI;
        pt.index &#x3D; i;
        corners.push(pt);
        lastCorner &#x3D; pt;
        n &#x3D; 0;
        t &#x3D; 0;
      &#125;
    &#125;
    n++;
  &#125;
  &#x2F;&#x2F; 2. 計算所有角的平均角度
  avgA &#x3D; angles &#x2F; corners.length;
  &#x2F;&#x2F; 3. 判斷是否為封閉的圖形
  if (len(delta(points[points.length - 1], points[0])) &lt; 30) &#123;
    &#x2F;&#x2F; 3. 將第一個點加入corners最後一項
    ptLast &#x3D; &#123; ...points[0] &#125;;
    ptLast.index &#x3D; 0;
    corners.push(ptLast);
    &#x2F;&#x2F; 4. 判斷是否為圓形或橢圓形
    if (avgA &lt; 45) &#123;
      let l &#x3D; points.length;
      let ps &#x3D; [...points];
      let left &#x3D; ps.sort((a, b) &#x3D;&gt; a.x - b.x)[0];
      let right &#x3D; ps.sort((a, b) &#x3D;&gt; b.x - a.x)[0];
      let top &#x3D; ps.sort((a, b) &#x3D;&gt; a.y - b.y)[0];
      let bottom &#x3D; ps.sort((a, b) &#x3D;&gt; b.y - a.y)[0];
      corners &#x3D; [left, right, top, bottom];
      drawCache.push(&#123;
        type: &quot;circle&quot;,
        corners: corners,
        line: [...lineCache]
      &#125;);
      return;
    &#125;
    &#x2F;&#x2F; 5. 判斷是否為四方形
    if (corners.length &#x3D;&#x3D; 5) &#123;
      let p0 &#x3D; corners[0];
      let p1 &#x3D; corners[1];
      let p2 &#x3D; corners[2];
      let p3 &#x3D; corners[3];
      let p0p1 &#x3D; delta(p0, p1);
      let p1p2 &#x3D; delta(p1, p2);
      let p2p3 &#x3D; delta(p2, p3);
      let p3p0 &#x3D; delta(p3, p0);
      &#x2F;&#x2F; 5. 判斷是否為矩形
      if (
        Math.abs(angle_between(p0p1, p1p2) - Math.PI &#x2F; 2) &lt; Math.PI &#x2F; 6 &amp;&amp;
        Math.abs(angle_between(p1p2, p2p3) - Math.PI &#x2F; 2) &lt; Math.PI &#x2F; 6 &amp;&amp;
        Math.abs(angle_between(p2p3, p3p0) - Math.PI &#x2F; 2) &lt; Math.PI &#x2F; 6 &amp;&amp;
        Math.abs(angle_between(p3p0, p0p1) - Math.PI &#x2F; 2) &lt; Math.PI &#x2F; 6
      ) &#123;
        let p0p2 &#x3D; delta(p0, p2);
        let p1p3 &#x3D; delta(p1, p3);
        let diag &#x3D; (len(p0p2) + len(p1p3)) &#x2F; 4;
        let tocenter0 &#x3D; scale(unit(p0p2), -diag);
        let tocenter1 &#x3D; scale(unit(p1p3), -diag);
        let center &#x3D; average(corners);
        let angle &#x3D; angle_between(p0p2, p1p3);
        corners &#x3D; [
          add(center, tocenter0),
          add(center, tocenter1),
          add(center, scale(tocenter0, -1)),
          add(center, scale(tocenter1, -1)),
          add(center, tocenter0)
        ];
        drawCache.push(&#123;
          type: &quot;rect&quot;,
          corners: corners,
          line: [...lineCache]
        &#125;);
        return;
      &#125;
    &#125;
  &#125; else &#123; &#x2F;&#x2F; 不是封閉的圖形
    &#x2F;&#x2F; 6. 將最後一個點加入corners最後一項
    corners.push(ptLast);
    &#x2F;&#x2F; 7. 判斷是否為曲線
    if (avgA &gt; 20 &amp;&amp; avgA &lt; 40) &#123;
      drawCache.push(&#123;
        type: &quot;arc&quot;,
        corners: corners,
        line: [...lineCache]
      &#125;);
      return;
    &#125;
    &#x2F;&#x2F; 7. 判斷是否為直線
    if (corners.length &#x3D;&#x3D; 2) &#123;
      drawCache.push(&#123;
        type: &quot;line&quot;,
        corners: corners,
        line: [...lineCache]
      &#125;);
      return;
    &#125; else if (corners.length &#x3D;&#x3D; 3) &#123; 
      &#x2F;&#x2F; 7. 判斷是否為鍵號
      let p0 &#x3D; corners[0];
      let p1 &#x3D; corners[1];
      let p2 &#x3D; ptLast;
      let p0p1 &#x3D; delta(p0, p1);
      let p1p2 &#x3D; delta(p1, p2);
      if (Math.abs(angle_between(p0p1, p1p2) - Math.PI &#x2F; 4) &gt; Math.PI &#x2F; 6) &#123;
        drawCache.push(&#123;
          type: &quot;arrow&quot;,
          corners: corners,
          line: [...lineCache]
        &#125;);
        return;
      &#125;
    &#125;
  &#125;
  drawCache.push(&#123;
    type: &quot;other&quot;,
    corners: corners,
    line: [...lineCache]
  &#125;);
&#125;</code></pre>

<p>經過複雜且麻煩的偵測圖形後，最後就只要將偵測到的圖案更新至畫布內就大功告成了！</p>
<pre class="line-numbers language-js" data-language="js"><code class="language-js">&#x2F;&#x2F; 清除畫布
function clear() &#123;
  ctx.clearRect(0, 0, canvas.width, canvas.height);
&#125;

function draw() &#123;
  clear();
  ctx.strokeStyle &#x3D; &quot;orange&quot;;
  &#x2F;&#x2F; 繪製完成的筆跡
  drawCache.forEach((e) &#x3D;&gt; &#123;
    ctx.beginPath();
    if (e.type &#x3D;&#x3D; &quot;line&quot;) &#123; &#x2F;&#x2F; 直線
      let l &#x3D; e.line.length - 1;
      ctx.moveTo(e.line[0].x, e.line[0].y);
      ctx.lineTo(e.line[l].x, e.line[l].y);
    &#125; else if (e.type &#x3D;&#x3D; &quot;arrow&quot;) &#123; &#x2F;&#x2F; 箭號
      let l &#x3D; e.line.length - 1;
      let angle &#x3D;
        (Math.atan2(e.line[l].y - e.line[0].y, e.line[l].x - e.line[0].x) *
          180) &#x2F;
        Math.PI;
      let angle1 &#x3D; ((angle + 150) * Math.PI) &#x2F; 180;
      let angle2 &#x3D; ((angle - 150) * Math.PI) &#x2F; 180;
      ctx.moveTo(e.line[0].x, e.line[0].y);
      ctx.lineTo(e.line[l].x, e.line[l].y);
      ctx.lineTo(
        e.line[l].x + 20 * Math.cos(angle1),
        e.line[l].y + 20 * Math.sin(angle1)
      );
      ctx.moveTo(e.line[l].x, e.line[l].y);
      ctx.lineTo(
        e.line[l].x + 20 * Math.cos(angle2),
        e.line[l].y + 20 * Math.sin(angle2)
      );
    &#125; else if (e.type &#x3D;&#x3D; &quot;rect&quot;) &#123; &#x2F;&#x2F; 矩形
      ctx.strokeStyle &#x3D; &quot;orange&quot;;
      ctx.beginPath();
      ctx.moveTo(e.corners[0].x, e.corners[0].y);
      e.corners.forEach((p) &#x3D;&gt; ctx.lineTo(p.x, p.y));
    &#125; else if (e.type &#x3D;&#x3D; &quot;arc&quot;) &#123; &#x2F;&#x2F; 曲線
      ctx.moveTo(e.corners[0].x, e.corners[0].y);
      for (var i &#x3D; 0; i &lt; e.corners.length - 1; i++) &#123;
        var x_mid &#x3D; (e.corners[i].x + e.corners[i + 1].x) &#x2F; 2;
        var cp_x1 &#x3D; (x_mid + e.corners[i].x) &#x2F; 2;
        var cp_y1 &#x3D; i % 2 &#x3D;&#x3D; 0 ? e.corners[i + 1].y : e.corners[i].y;
        ctx.quadraticCurveTo(
          cp_x1,
          cp_y1,
          e.corners[i + 1].x,
          e.corners[i + 1].y
        );
      &#125;
    &#125; else if (e.type &#x3D;&#x3D; &quot;circle&quot;) &#123; &#x2F;&#x2F; 圓形或橢圓形
      ctx.ellipse(
        (e.corners[0].x + e.corners[1].x) &#x2F; 2,
        (e.corners[2].y + e.corners[3].y) &#x2F; 2,
        Math.abs(e.corners[1].x - e.corners[0].x) &#x2F; 2,
        Math.abs(e.corners[3].y - e.corners[2].y) &#x2F; 2,
        0,
        0,
        Math.PI * 2
      );
    &#125; else &#123; &#x2F;&#x2F; 其他
      ctx.beginPath();
      ctx.moveTo(e.corners[0].x, e.corners[0].y);
      e.corners.forEach((p) &#x3D;&gt; ctx.lineTo(p.x, p.y));
    &#125;
    ctx.stroke();
  &#125;);
  &#x2F;&#x2F; 正在繪製的筆跡
  ctx.strokeStyle &#x3D; &quot;pink&quot;;
  if (lineCache.length &gt; 1) &#123;
    ctx.beginPath();
    ctx.moveTo(lineCache[0].x, lineCache[0].y);
    lineCache.forEach((p) &#x3D;&gt; &#123;
      ctx.lineTo(p.x, p.y);
    &#125;);
    ctx.stroke();
  &#125;
  &#x2F;&#x2F; 沒有任何筆跡
  if (lineCache.length + drawCache.length &#x3D;&#x3D; 0)
    ctx.fillText(
      &quot;Draw Something Here.&quot;,
      canvas.width * 0.4,
      canvas.height * 0.45
    );
&#125;</code></pre>]]></content>
      <categories>
        <category>Javascript</category>
      </categories>
      <tags>
        <tag>Javascript</tag>
        <tag>Web</tag>
        <tag>HTML5 Canvas</tag>
        <tag>Shape recognition</tag>
      </tags>
  </entry>
  <entry>
    <title>透過Pointer events偵測多點觸控</title>
    <url>//post/js-zoom-by-pointer.html</url>
    <content><![CDATA[<p>在多平台的時代，瀏覽器的輸入事件也越來越多樣化，從早期只有滑鼠可以點擊畫面，到現在有了觸控、觸控筆，於是Pointer events誕生了，它不僅保留了Mouse events的常見屬性，還多了可以追蹤各種類型指針事件的功能，使程式碼可以相容各種不同類型的裝置。</p>
<p>Pointer events不像Touch events一樣，Pointer events並沒有TouchesList，沒辦法輕易得知目前有幾的觸碰點在畫面上，所以如果要進行縮放這種需要兩隻手指的動作，就需要多寫點程式碼來判斷了，今天就來記錄一下如何用一個事件只能記錄一個觸碰點的Pointer events來偵測多點觸控～</p>
<h3 id="先來個成果時間"><a href="#先來個成果時間" class="headerlink" title="先來個成果時間"></a>先來個成果時間</h3><p class="codepen" data-height="300" data-default-tab="result" data-slug-hash="VwzmQXJ" data-preview="true" data-editable="true" data-user="cailirl980519" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
  <span>See the Pen <a href="https://codepen.io/cailirl980519/pen/VwzmQXJ">
  pointer-events</a> by cailirl980519 (<a href="https://codepen.io/cailirl980519">@cailirl980519</a>)
  on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script>

<h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><p>一開始，我們先將需要偵測的物件加入事件偵測</p>
<pre class="line-numbers language-js" data-language="js"><code class="language-js">const t &#x3D; document.getElementById(&quot;target&quot;)
t.addEventListener(&#39;pointerdown&#39;	, zoomHandler, false)
t.addEventListener(&#39;pointermove&#39;	, zoomHandler, false)
t.addEventListener(&#39;pointerup&#39;		, zoomHandler, false)
t.addEventListener(&#39;pointercancel&#39;	, zoomHandler, false)
t.addEventListener(&#39;pointerout&#39;		, zoomHandler, false)
t.addEventListener(&#39;pointerleave&#39;	, zoomHandler, false)</code></pre>

<p>接下來將每個事件要做的動作加入<code>zoomHandler</code>：</p>
<ul>
<li>pointerdown: 將觸碰點加入<code>evCache</code></li>
<li>pointermove: 找到移動的點並更新至<code>evCache</code></li>
<li>pointerup, pointercancel, pointerout, pointerleave: 將離開的點從<code>evChache</code>中刪除</li>
</ul>
<p>最後判斷畫面上觸碰點的數量，隨著數量的不同，變更目標背景的顏色，用Pointer events偵測多點觸控就這樣完成了～</p>
<pre class="line-numbers language-js" data-language="js"><code class="language-js">var evCache &#x3D; new Array() &#x2F;&#x2F; 紀錄正觸碰的點
function zoomHandler(e) &#123;
    e.preventDefault()
    if (e.type &#x3D;&#x3D; &quot;pointerdown&quot;) &#123; &#x2F;&#x2F; 將觸碰點加入&#96;evCache&#96;
        evCache.push(e)
    &#125; else if (e.type &#x3D;&#x3D; &quot;pointermove&quot;) &#123; &#x2F;&#x2F; 找到移動的點並更新至&#96;evCache&#96;
        for (var i &#x3D; 0; i &lt; evCache.length; i++) &#123;
            if (e.pointerId &#x3D;&#x3D; evCache[i].pointerId) &#123;
                evCache[i] &#x3D; e
                break
            &#125;
        &#125;
    &#125; else &#123;
        for (var i &#x3D; 0; i &lt; evCache.length; i++) &#123; &#x2F;&#x2F; 將離開的點從&#96;evChache&#96;中刪除
            if (evCache[i].pointerId &#x3D;&#x3D; e.pointerId) &#123;
                evCache.splice(i, 1)
                break
            &#125;
        &#125;
    &#125;
    switch (evCache.length) &#123;
        case 0:
            $(t).css(&quot;background-color&quot;, &quot;transparent&quot;)
            $(&quot;#text&quot;).html(&quot;Touch Here&quot;)
            break
        case 1:
            $(t).css(&quot;background-color&quot;, &quot;lightgray&quot;)
            $(&quot;#text&quot;).html(&quot;1 Touches&quot;)
            break
        case 2:
            $(t).css(&quot;background-color&quot;, &quot;lightblue&quot;)
            $(&quot;#text&quot;).html(&quot;2 Touches&quot;)
            break
        case 3:
            $(t).css(&quot;background-color&quot;, &quot;pink&quot;)
            $(&quot;#text&quot;).html(&quot;3 Touches&quot;)
            break
    &#125;
&#125;</code></pre>]]></content>
      <categories>
        <category>Javascript</category>
      </categories>
      <tags>
        <tag>Javascript</tag>
        <tag>Web</tag>
        <tag>Pointer events</tag>
      </tags>
  </entry>
  <entry>
    <title>Debian安裝LEMP(Linux, Nginx, MariaDB, PHP)</title>
    <url>//post/linux-lemp.html</url>
    <content><![CDATA[<p>LEMP指的是在L - Linux OS下，安裝E - Nginx(Engine x)、M - MySQL&#x2F;MariaDB、P - PHP，是現在很流行的伺服器組合，是將以往的LAMP中的Apache取代為Nginx，藉此提高伺服器的效能。</p>
<p>今天就來紀錄一下在Debian10下安裝LEMP的過程～</p>
<blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot="">
<path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path>
<path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path>
<path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path>
</svg>
</span><p>以下指令皆使用root執行</p></blockquote>
<h2 id="前置作業"><a href="#前置作業" class="headerlink" title="前置作業"></a>前置作業</h2><p>安裝前先更新一下<code>apt-get</code></p>
<pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">$ apt-get update</code></pre>

<h3 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h3><p>接著快速安裝一下Nginx, MariaDB和PHP</p>
<blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot="">
<path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path>
<path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path>
<path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path>
</svg>
</span><p>Debian10 默認 PHP7.3; Debian11 則默認 PHP7.4</p></blockquote>
<pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">$ apt-get install nginx
$ apt-get install mariadb-server
$ apt-get install php php-fpm php-cli php-mysql php-zip php-curl php-xml</code></pre>

<p>安裝完成後，就可以將Nginx及MariaDB啟用了</p>
<pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">$ systemctl start nginx
$ systemctl start mariadb</code></pre>

<p>若要在開機時就啟動Nginx及MariaDB，則輸入以下指令</p>
<pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">$ systemctl enable nginx
$ systemctl enable mariadb</code></pre>

<p>測試Nginx是否啟用</p>
<pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">$ systemctl status nginx
● nginx.service - A high performance web server and a reverse proxy server
   Loaded: loaded (&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;nginx.service; enabled; vendor preset: enabled)
   Active: active (running) since Thu 2022-03-03 09:10:15 UTC; 18h ago
     Docs: man:nginx(8)
  Process: 457 ExecStartPre&#x3D;&#x2F;usr&#x2F;sbin&#x2F;nginx -t -q -g daemon on; master_process on; (code&#x3D;exited, status&#x3D;0&#x2F;SUCCESS)
  Process: 468 ExecStart&#x3D;&#x2F;usr&#x2F;sbin&#x2F;nginx -g daemon on; master_process on; (code&#x3D;exited, status&#x3D;0&#x2F;SUCCESS)
 Main PID: 483 (nginx)
    Tasks: 3 (limit: 4651)
   Memory: 9.6M
   CGroup: &#x2F;system.slice&#x2F;nginx.service
           ├─483 nginx: master process &#x2F;usr&#x2F;sbin&#x2F;nginx -g daemon on; master_process on;
           ├─488 nginx: worker process
           └─489 nginx: worker process</code></pre>

<p>測試MariaDB是否啟用</p>
<pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">$ systemctl status mariadb
● mariadb.service - MariaDB 10.3.31 database server
   Loaded: loaded (&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;mariadb.service; enabled; vendor preset: enabled)
   Active: active (running) since Thu 2022-03-03 09:10:16 UTC; 18h ago
     Docs: man:mysqld(8)
           https:&#x2F;&#x2F;mariadb.com&#x2F;kb&#x2F;en&#x2F;library&#x2F;systemd&#x2F;
  Process: 460 ExecStartPre&#x3D;&#x2F;usr&#x2F;bin&#x2F;install -m 755 -o mysql -g root -d &#x2F;var&#x2F;run&#x2F;mysqld (code&#x3D;exited, status&#x3D;0&#x2F;SUCCESS)
  Process: 469 ExecStartPre&#x3D;&#x2F;bin&#x2F;sh -c systemctl unset-environment _WSREP_START_POSITION (code&#x3D;exited, status&#x3D;0&#x2F;SUCCESS)
  Process: 479 ExecStartPre&#x3D;&#x2F;bin&#x2F;sh -c [ ! -e &#x2F;usr&#x2F;bin&#x2F;galera_recovery ] &amp;&amp; VAR&#x3D; ||   VAR&#x3D;&#96;cd &#x2F;usr&#x2F;bin&#x2F;..; &#x2F;usr&#x2F;bin&#x2F;galera_rec
  Process: 701 ExecStartPost&#x3D;&#x2F;bin&#x2F;sh -c systemctl unset-environment _WSREP_START_POSITION (code&#x3D;exited, status&#x3D;0&#x2F;SUCCESS)
  Process: 703 ExecStartPost&#x3D;&#x2F;etc&#x2F;mysql&#x2F;debian-start (code&#x3D;exited, status&#x3D;0&#x2F;SUCCESS)
 Main PID: 604 (mysqld)
   Status: &quot;Taking your SQL requests now...&quot;
    Tasks: 30 (limit: 4651)
   Memory: 103.8M
   CGroup: &#x2F;system.slice&#x2F;mariadb.service
           └─604 &#x2F;usr&#x2F;sbin&#x2F;mysqld</code></pre>

<p>若皆啟用後，也可以確認一下運行的port，一般情況下Nginx會運行在80 port; MariaDB則會運行在3306 port</p>
<pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">$ ss -antpl
LISTEN    0         128                0.0.0.0:80             0.0.0.0:*        users:((&quot;nginx&quot;,pid&#x3D;489,fd&#x3D;6),(&quot;nginx&quot;,pid&#x3D;488,fd&#x3D;6),(&quot;nginx&quot;,pid&#x3D;483,fd&#x3D;6))   
LISTEN    0         128                   [::]:80                [::]:*        users:((&quot;nginx&quot;,pid&#x3D;489,fd&#x3D;7),(&quot;nginx&quot;,pid&#x3D;488,fd&#x3D;7),(&quot;nginx&quot;,pid&#x3D;483,fd&#x3D;7))
LISTEN    0          80            127.0.0.1:3306             0.0.0.0:*        users:((&quot;mariadbd&quot;,pid&#x3D;12181,fd&#x3D;15))</code></pre>
<p>亦可以使用瀏覽器輸入http:&#x2F;&#x2F;[IP] 檢查Nginx是否安裝成功，若成功則可以看到以下畫面<br><img src="https://0xzx.com/wp-content/webp-express/webp-images/doc-root/wp-content/uploads/2021/09/20210917-196.png.webp"></p>
<h2 id="設置Nginx"><a href="#設置Nginx" class="headerlink" title="設置Nginx"></a>設置Nginx</h2><p>打開<code>/etc/nginx/sites-available/default</code></p>
<pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">$ vi etc&#x2F;nginx&#x2F;site-available&#x2F;default</code></pre>

<p>新增PHP的配置，並儲存離開</p>
<pre class="line-numbers language-none"><code class="language-none">server &#123;
  listen 80 default_server;
  listen [::]:80 default_server;

  root &#x2F;data; # &lt;&lt;--變更網頁目錄位置

  # Add index.php to the list if you are using PHP
  index index.html index.htm index.nginx-debian.html index.php; # &lt;&lt;--此處新增index.php

  server_name _;

  location &#x2F; &#123;
          # First attempt to serve request as file, then
          # as directory, then fall back to displaying a 404.
          try_files $uri $uri&#x2F; &#x3D;404;
  &#125;

  # pass PHP scripts to FastCGI server
  #
  location ~ \.php$ &#123; # &lt;&lt;--此處取消註解
          include snippets&#x2F;fastcgi-php.conf; # &lt;&lt;--此處取消註解
  #
  #       # With php-fpm (or other unix sockets):
          fastcgi_pass unix:&#x2F;run&#x2F;php&#x2F;php7.3-fpm.sock; # &lt;&lt;--此處取消註解
  #       # With php-cgi (or other tcp sockets):
  #       fastcgi_pass 127.0.0.1:9000;
  &#125; # &lt;&lt;--此處取消註解
&#125;</code></pre>

<p>接著確認Nginx是否有配置錯誤，若正確則會看到以下訊息</p>
<pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">$ nginx -t
nginx: the configuration file &#x2F;etc&#x2F;nginx&#x2F;nginx.conf syntax is ok
nginx: configuration file &#x2F;etc&#x2F;nginx&#x2F;nginx.conf test is successful</code></pre>

<p>最後重新啟動Nginx來應用更改的配置</p>
<pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">$ systemctl restart nginx</code></pre>


<h2 id="設置MariaDB"><a href="#設置MariaDB" class="headerlink" title="設置MariaDB"></a>設置MariaDB</h2><p>運行<code>mysql_secure_installation</code>來初始設置MariaDB</p>
<pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">$ mysql_secure_installation
Enter current password for root (enter for none): 
Change the root password? [Y&#x2F;n] Y
New password: 
Re-enter new password: 
Remove anonymous users? [Y&#x2F;n] Y
Disallow root login remotely? [Y&#x2F;n] Y
Remove test database and access to it? [Y&#x2F;n] Y
Reload privilege tables now? [Y&#x2F;n] Y</code></pre>

<p>設置完成後即可以登入確認，並檢查MariaDB版本</p>
<pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">$ mysql -u root -p
Enter password: 
Welcome to the MariaDB monitor.  Commands end with ; or \g.
Your MariaDB connection id is 36
Server version: 10.3.31-MariaDB-0+deb10u1 Debian 10

Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.

Type &#39;help;&#39; or &#39;\h&#39; for help. Type &#39;\c&#39; to clear the current input statement.

MariaDB [(none)]&gt; SELECT VERSION();
+---------------------------+
| VERSION()                 |
+---------------------------+
| 10.3.31-MariaDB-0+deb10u1 |
+---------------------------+
1 row in set (0.000 sec)</code></pre>

<h2 id="設置PHP"><a href="#設置PHP" class="headerlink" title="設置PHP"></a>設置PHP</h2><p>若要變更PHP配置，則要打開<code>/etc/php/7.3/fpm/php.ini</code></p>
<pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">$ vi etc&#x2F;php&#x2F;7.3&#x2F;fpm&#x2F;php.ini</code></pre>

<p>編輯完成後儲存並重啟PHP</p>
<pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">$ systemctl restart php7.3-fpm</code></pre>


<p>在伺服器根目錄的地方加上<code>index.php</code>並編輯</p>
<pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">$ vi data&#x2F;info.php</code></pre>

<pre class="line-numbers language-php" data-language="php"><code class="language-php">&lt;?php
  echo phpinfo();
?&gt;</code></pre>

<p>完成後在瀏覽器輸入http:&#x2F;&#x2F;[IP]，若成功則可以看到以下畫面<br><img src="https://i.imgur.com/JD4o00c.png" alt="Imgur"></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Debian</tag>
        <tag>GCP</tag>
        <tag>LEMP</tag>
      </tags>
  </entry>
  <entry>
    <title>擁有強大編輯器的互動動畫 | Rive</title>
    <url>//post/rive-begin.html</url>
    <content><![CDATA[<p>第一次看到<a href="https://rive.app/">Rive</a>是在Flutter官網的Showcase裡，發現它可以客製化互動動畫，還可以跟著使用者的動作或狀態去改變動畫，也太酷了吧！而且看了Rive的官網簡介發現，他竟然支援超多運行環境(Runtime)的！於是就開始掉入坑內…</p>
<h2 id="支援的Runtime"><a href="#支援的Runtime" class="headerlink" title="支援的Runtime"></a>支援的Runtime</h2><h3 id="官方"><a href="#官方" class="headerlink" title="官方"></a>官方</h3><ul>
<li>Web</li>
<li>React</li>
<li>iOS</li>
<li>Android</li>
<li>Flutter</li>
<li>C++</li>
<li>Tizen</li>
<li>React Native</li>
</ul>
<h3 id="社群"><a href="#社群" class="headerlink" title="社群"></a>社群</h3><ul>
<li>Vue.js</li>
<li>Angular</li>
<li>AWTK</li>
</ul>
<blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot="">
<path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path>
<path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path>
<path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path>
</svg>
</span><p>簡直是現正流行的開發Runtime都支援了…聽說未來還會支援Unity呢</p></blockquote>
<p>剛開始在搜尋引擎上搜尋Rive，發現中文資料超少外，反而搜到很多關於<strong>Flare</strong>(Rive的前身)的資料，完全沒有Rive的中文資源，於是就打算來整理一份關於Rive的資料，以便以後複習使用。</p>
<h2 id="優缺點"><a href="#優缺點" class="headerlink" title="優缺點"></a>優缺點</h2><h3 id="優點"><a href="#優點" class="headerlink" title="優點"></a>優點</h3><ul>
<li>對於UX設計師(Editor)</li>
</ul>
<ul>
<li>支援桌面及Web應用</li>
<li>支援多人共同編輯(須付費)</li>
<li>支援raster image</li>
<li>編輯器好上手</li>
</ul>
<ul>
<li>對於開發者(Runtime)</li>
</ul>
<ul>
<li>輸出檔案容量小</li>
<li>高解析度</li>
<li>根據不同狀態呈現不同動畫</li>
</ul>
<h3 id="缺點"><a href="#缺點" class="headerlink" title="缺點"></a>缺點</h3><ul>
<li>社群作品不夠多</li>
<li>官網不支援搜尋作品(超不方便的！)</li>
<li>Beta版線上編輯器偶爾會崩潰(記得存檔)</li>
<li>無法從After Effect匯入</li>
<li>Adobe XD匯入動畫可能不完整</li>
</ul>
<h2 id="版面介紹"><a href="#版面介紹" class="headerlink" title="版面介紹"></a>版面介紹</h2><p><img src="https://i.imgur.com/WcvDfmP.jpg" alt="Imgur"></p>
<ol>
<li>Community: 社群作品<br>可以直接在裡面找喜歡的作品套用到現有的應用上</li>
<li>Resource: 官方資源<br>各式各樣的範例及官方文件</li>
<li>Launch: 線上編輯器<br>用來客製化自己的作品，也可將喜歡的社群作品匯入編輯</li>
</ol>
]]></content>
      <categories>
        <category>Rive</category>
      </categories>
      <tags>
        <tag>App</tag>
        <tag>Web</tag>
        <tag>Rive</tag>
        <tag>Interactive Animation</tag>
      </tags>
  </entry>
  <entry>
    <title>顏色選擇器 Color Dialog | Excel VBA</title>
    <url>//post/vba-color-picker.html</url>
    <content><![CDATA[<h3 id="使用VBA開啟顏色選擇器"><a href="#使用VBA開啟顏色選擇器" class="headerlink" title="使用VBA開啟顏色選擇器"></a>使用VBA開啟顏色選擇器</h3><p><video autoplay muted loop src="https://imgur.com/B7Jvktz.mp4" type="video/mp4" style="width:100%"></video></p>
<h4 id="STEP-1-新增模組"><a href="#STEP-1-新增模組" class="headerlink" title="STEP 1 新增模組"></a>STEP 1 新增模組</h4><p>於VBA Project點擊右鍵插入模組並命名為ColorDialog</p>
<blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot="">
<path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path>
<path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path>
<path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path>
</svg>
</span><p>模組為全域性質，在活頁簿中的所有工作表皆可呼叫</p></blockquote>
<p><img src="https://imgur.com/4v5uq1d.png" alt="vba-color-dialog"></p>
<h4 id="STEP-2-新增function-Show"><a href="#STEP-2-新增function-Show" class="headerlink" title="STEP 2 新增function Show()"></a>STEP 2 新增function <code>Show()</code></h4><p>新增完成後即可在左側模組的資料夾下看到，點擊兩下即可叫出視窗編輯，接著我們就可以在ColorDialog模組下加入<code>Show()</code>來開啟顏色選擇器</p>
<pre class="line-numbers language-vb" data-language="vb"><code class="language-vb">&#39;開啟顏色選擇對話框
Public Function Show() As Long &#39;宣告回傳選中顏色值的型態
    Dim FullColorCode As Long
    &#39;如果有選擇並按確認
    &#39;Application.Dialogs(xlDialogEditColor).Show(Alpha, R, G, B) &lt;-- 初始顏色
    If Application.Dialogs(xlDialogEditColor).Show(1, 84, 96, 164) &#x3D; True Then
        FullColorCode &#x3D; ActiveWorkbook.Colors(1)
    End If
    Show &#x3D; FullColorCode &#39;回傳選中的顏色
End Function</code></pre>
<img alt="vba-color-dialog" src="https://imgur.com/sSBjKPU.png" style="width: 80%">


<p>完成後便可以按下執行測試，就可以發現已經可以成功叫出選擇顏色的對話框了！<br><img alt="vba-color-dialog" src="https://imgur.com/iAaPvSP.png" style="width: 80%"></p>
<h4 id="STEP-3-關聯至工作表"><a href="#STEP-3-關聯至工作表" class="headerlink" title="STEP 3 關聯至工作表"></a>STEP 3 關聯至工作表</h4><p>於巨集編輯器左側展開Microsoft Excel物件，打開要關聯的工作表，新增一個<code>Worksheet_BeforeDoubleClick</code>，當點擊兩下儲存格時叫出顏色選擇器</p>
<pre class="line-numbers language-vb" data-language="vb"><code class="language-vb">Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
    Dim color As Long &#39;顏色
    Dim R, G, B As Integer &#39;RGB值
    Dim row As Integer &#39;列數
    Dim cell As Range
    &#39;呼叫Module ColorDialog中的Funciton Show
    color &#x3D; ColorDialog.Show
    &#39;將color轉為RGB
    R &#x3D; color Mod 256
    G &#x3D; (color \ 256) Mod 256
    B &#x3D; color \ 65536
    &#39;獲取點擊列數
    row &#x3D; Target.row
    &#39;將儲存格設為點擊列數的B欄
    Set cell &#x3D; Cells(row, 2)
    &#39;設置前一個儲存格背景色
    cell.Previous.Interior.color &#x3D; color
    &#39;將轉換成HexColor的值放進儲存格
    cell.value &#x3D; Application.Dec2Hex(R, 2) + Application.Dec2Hex(G, 2) + Application.Dec2Hex(B, 2)
    &#39;將轉換成RGB的值放進右邊儲存格
    cell.Next.value &#x3D; R &amp; &quot;, &quot; &amp; G &amp; &quot;, &quot; &amp; B
    &#39;設置右側儲存格邊框
    With cell.Next.Borders(xlEdgeRight)
        .LineStyle &#x3D; xlContinous &#39;邊框樣式
        .Weight &#x3D; xlThick &#39;邊框粗細
        .color &#x3D; color &#39;邊框顏色
    End With
End Sub</code></pre>

<img alt="vba-color-dialog" src="https://imgur.com/NKXz86U.png" style="width: 80%">]]></content>
      <categories>
        <category>Excel VBA</category>
      </categories>
      <tags>
        <tag>Excel</tag>
        <tag>VBA</tag>
        <tag>Color Dialog</tag>
      </tags>
  </entry>
  <entry>
    <title>新手上路 | Excel VBA</title>
    <url>//post/vba-begin.html</url>
    <content><![CDATA[<h3 id="開啟VBA"><a href="#開啟VBA" class="headerlink" title="開啟VBA"></a>開啟VBA</h3><p>點擊工作表右鍵 &gt; 檢視程式碼，即可看到編輯VBA的視窗<br><img src="https://imgur.com/1s7J9Ql.png" alt="vba-begin"><br><img alt="vba-begin" src="https://imgur.com/5YSI1h8.png" style="width: 80%;"></p>
<h3 id="開啟開發人員工作列"><a href="#開啟開發人員工作列" class="headerlink" title="開啟開發人員工作列"></a>開啟開發人員工作列</h3><ul>
<li>Windows: 檔案 &gt; 選項 &gt; 自訂功能區 &gt; 勾選開發人員</li>
<li>Mac: Excel &gt; 喜好設定 &gt; 功能區和工具列 &gt; 勾選開發人員<br><img src="https://imgur.com/VTBQgK7.png" alt="vba-begin"></li>
</ul>
<h3 id="使用按鈕複製選取儲存格文字"><a href="#使用按鈕複製選取儲存格文字" class="headerlink" title="使用按鈕複製選取儲存格文字"></a>使用按鈕複製選取儲存格文字</h3><h4 id="STEP-1-插入按鈕"><a href="#STEP-1-插入按鈕" class="headerlink" title="STEP 1 插入按鈕"></a>STEP 1 插入按鈕</h4><ul>
<li>Windows: 開發人員 &gt; 插入 &gt; 表單控制項中的按鈕</li>
<li>Mac: 開發人員 &gt; 按鈕<br>接著就在工作表中放置按鈕<br><img src="https://imgur.com/Jnyyw9z.png" alt="vba-begin"><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot="">
<path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path>
<path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path>
<path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path>
</svg>
</span><p>若要移動按鈕位置或改變大小，Windows需點擊開發人員中的設計模式; Mac則需右鍵點擊按鈕</p></blockquote>
</li>
</ul>
<h4 id="STEP-2-指定巨集"><a href="#STEP-2-指定巨集" class="headerlink" title="STEP 2 指定巨集"></a>STEP 2 指定巨集</h4><p>新增一個巨集，當按鈕按下後會呼叫<br><img src="https://imgur.com/niJHjvK.png" alt="vba-begin"><br>新增完成即會跳到巨集編輯器<br><img alt="vba-begin" src="https://imgur.com/bCf7vGl.png" style="width: 80%;"></p>
<h4 id="STEP3-編輯巨集功能"><a href="#STEP3-編輯巨集功能" class="headerlink" title="STEP3 編輯巨集功能"></a>STEP3 編輯巨集功能</h4><p>接著我們就可以開始編寫複製功能</p>
<ul>
<li>Selection.Address: 當前選取的儲存格地址</li>
<li>MsgBox: 提示框<pre class="line-numbers language-vb" data-language="vb"><code class="language-vb">Sub Btn()
    &#39;選取儲存格的數量
    If Range(Selection.Address).Count &#x3D; 1 Then
        &#39;將文字丟進剪貼簿
        Dim obj As New DataObject
        obj.SetText Range(Selection.Address).value
        obj.PutInClipboard
        MsgBox &quot;已複製：&quot; &amp; obj.GetText
    Else
        MsgBox &quot;無法複製多個儲存格&quot;
    End If
End Sub</code></pre></li>
</ul>
<h4 id="STEP4-點擊按鈕"><a href="#STEP4-點擊按鈕" class="headerlink" title="STEP4 點擊按鈕"></a>STEP4 點擊按鈕</h4><p>寫完程式碼後就可以開始測試效果了～<br><img src="https://imgur.com/LNDpGpA.gif" alt="vba-begin"></p>
<h3 id="儲存"><a href="#儲存" class="headerlink" title="儲存"></a>儲存</h3><p>儲存有巨集的Excel時必須存成<strong>啟用巨集的活頁簿（<code>.*xlsm</code>）</strong>，若存為一般的<code>.*xls</code>是無法啟用巨集的哦～</p>
]]></content>
      <categories>
        <category>Excel VBA</category>
      </categories>
      <tags>
        <tag>Excel</tag>
        <tag>VBA</tag>
      </tags>
  </entry>
  <entry>
    <title>匯入圖片 Image Picker | Excel VBA</title>
    <url>//post/vba-image-picker.html</url>
    <content><![CDATA[<h3 id="使用VBA開啟匯入圖片對話框"><a href="#使用VBA開啟匯入圖片對話框" class="headerlink" title="使用VBA開啟匯入圖片對話框"></a>使用VBA開啟匯入圖片對話框</h3><p><video autoplay muted loop src="https://imgur.com/HzOPsBL.mp4" type="video/mp4" style="width:100%"></video></p>
<h4 id="STEP-1-新增模組"><a href="#STEP-1-新增模組" class="headerlink" title="STEP 1 新增模組"></a>STEP 1 新增模組</h4><p>於VBA Project點擊右鍵插入模組並命名為ImagePicker</p>
<blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot="">
<path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path>
<path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path>
<path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path>
</svg>
</span><p>模組為全域性質，在活頁簿中的所有工作表皆可呼叫</p></blockquote>
<p><img src="https://imgur.com/4v5uq1d.png" alt="vba-image-picker"></p>
<h4 id="STEP-2-新增function-Show"><a href="#STEP-2-新增function-Show" class="headerlink" title="STEP 2 新增function Show()"></a>STEP 2 新增function <code>Show()</code></h4><p>新增完成後即可在左側模組的資料夾下看到，點擊兩下即可叫出視窗編輯，接著我們就可以在ImagePicker模組下加入<code>Show()</code>來開啟圖片選擇對話框</p>
<blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot="">
<path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path>
<path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path>
<path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path>
<path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path>
</svg>
</span><p>Windows及Mac的文件選擇需要使用不同方式呼叫</p></blockquote>
<pre class="line-numbers language-vb" data-language="vb"><code class="language-vb">&#39;開啟圖片選擇對話框
Public Function Show() As String &#39;宣告回傳圖片路徑的型態
    #If Mac Then
        Show &#x3D; GetFileName_Mac &#39;回傳圖片路徑
    #Else
        Show &#x3D; GetFileName_Windows &#39;回傳圖片路徑
    #End If
End Function
&#39;Mac選擇照片
Function GetFileName_Mac() As String
    Dim startPath As String
    Dim script As String
    Dim result As String

    On Error Resume Next
    startPath &#x3D; MacScript(&quot;return (path to downloads folder) as String&quot;)
    script &#x3D; &quot;set applescript&#39;s text item delimiters to &quot;&quot;,&quot;&quot; &quot; &amp; _
            vbNewLine &amp; _
            &quot;set theFiles to (choose file of type &quot; &amp; _
            &quot; &#123;&quot;&quot;png&quot;&quot;,&quot;&quot;jpg&quot;&quot;&#125;&quot; &amp; _
            &quot;with prompt &quot;&quot;Select an image file&quot;&quot; default location alias &quot;&quot;&quot; &amp; startPath &amp; _
            &quot;&quot;&quot; multiple selections allowed false) as string&quot; &amp; vbNewLine &amp; _
            &quot;set applescript&#39;s text item delimiters to &quot;&quot;&quot;&quot; &quot; &amp; vbNewLine &amp; _
            &quot;return theFiles&quot;
    result &#x3D; MacScript(script)
    result &#x3D; Replace$(result, &quot;Macintosh HD&quot;, &quot;&quot;, Count:&#x3D;1)
    result &#x3D; Replace$(result, &quot;:&quot;, &quot;&#x2F;&quot;)
    GetFileName_Mac &#x3D; result
End Function
&#39;Windows選擇照片
Public Function GetFileName_Windows() As String
    With Application.FileDialog(msoFileDialogFilePicker)
        .AllowMultiSelect &#x3D; False
        .Title &#x3D; &quot;Select an image file&quot;
        .Filters.Clear
        .Filters.Add &quot;All Pictures&quot;, &quot;*.*&quot;
        .Filters.Add &quot;JPG&quot;, &quot;*.JPG&quot;
        .Filters.Add &quot;JPEG File Interchange Format&quot;, &quot;*.JPEG&quot;
        .Filters.Add &quot;Portable Network Graphics&quot;, &quot;*.PNG&quot;
        If .Show &#x3D; -1 Then
            GetFileName_Windows &#x3D; .SelectedItems(1)
        End If
    End With
End Function</code></pre>

<p><img src="https://imgur.com/Q0fDp3a.png" alt="vba-image-picker"></p>
<p>完成後便可以按下執行測試，就可以發現已經可以成功叫出選擇選擇圖片的對話框了～可以看到只能選擇我們允許的副檔名</p>
<p><img src="https://imgur.com/uss69V2.png" alt="vba-image-picker"></p>
<h4 id="STEP-3-關聯至工作表"><a href="#STEP-3-關聯至工作表" class="headerlink" title="STEP 3 關聯至工作表"></a>STEP 3 關聯至工作表</h4><p>於巨集編輯器左側展開Microsoft Excel物件，打開要關聯的工作表，新增一個Worksheet_BeforeDoubleClick，當點擊兩下儲存格時叫出圖片選擇器</p>
<p><img src="https://imgur.com/5dbpyEt.png" alt="vba-image-picker"></p>
<pre class="line-numbers language-vb" data-language="vb"><code class="language-vb">Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
    Dim path As String &#39;圖片路徑
    Dim row As Integer &#39;列數
    Dim cell As Range
    &#39;呼叫Module ImagePicker中的Funciton Show
    path &#x3D; ImagePicker.Show
    &#39;獲取當前點擊列數
    row &#x3D; Target.row
    Set cell &#x3D; Cells(row, 1)
    If Not path &#x3D; &quot;&quot; Then
        &#39;將圖片路徑放入儲存格
        cell.value &#x3D; path
        &#39;將圖片放進工作表
        Set img &#x3D; ActiveSheet.Pictures.Insert(path)
        &#39;設置圖片大小
        img.Height &#x3D; 50
        &#39;設置圖片位置（儲存格內置中）
        img.Left &#x3D; cell.Next.Left + (cell.Width - img.Width) &#x2F; 2
        img.Top &#x3D; cell.Top + (cell.Height - img.Height) &#x2F; 2
    End If
End Sub</code></pre>]]></content>
      <categories>
        <category>Excel VBA</category>
      </categories>
      <tags>
        <tag>Excel</tag>
        <tag>VBA</tag>
        <tag>Image Picker</tag>
      </tags>
  </entry>
</search>
