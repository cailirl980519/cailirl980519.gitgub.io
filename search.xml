<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>用Isolate實現Loading Widget不卡頓</title>
    <url>/2021/12/16/flutter-isolate/</url>
    <content><![CDATA[<blockquote>
<p>Flutter預設是單執行緒處理，在你還沒發覺UI變得卡頓時，你是不會發現的。</p>
</blockquote>
<p>剛開始接觸Flutter時，完全沒有認真研究過他的執行序，認為只要把複雜或需要時間的工作丟進Future, async, await就解決一切了，直到…我發現UI變得超卡的！！於是就誕生了這篇文章…紀錄在頁面放上loading元件<code>CircularProgressIndicator()</code>並在背後做繁重的運算。</p>
<h3 id="Dart中的Isolate"><a href="#Dart中的Isolate" class="headerlink" title="Dart中的Isolate"></a>Dart中的Isolate</h3><p>如果不特別創建Isolate，我們的所有程式碼幾乎都是在預設的main Isolate中執行的，不管是使用Future, async, await，最後都還是在同一個Isolate上進行處理，如果我們給main Isolate太多繁重的工作，UI就會開始延遲，因此我們就需要一個新的Isolate來分擔繁重的工作。<br>Dart中的Isolate是不會共享記憶體的，所以必須透過Port來溝通，且Dart中的溝通是異步的，這就使得寫起來變得十分複雜啊…</p>
<h3 id="預覽目標"><a href="#預覽目標" class="headerlink" title="預覽目標"></a>預覽目標</h3><p><img src="https://imgur.com/fPbyIxA.gif" alt="flutter-isolate"></p>
<h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>首先，我們需要一個非常繁重的工作，於是我們就創一個超繁重的while迴圈，Isolate的工作內容都需寫在最上層（global）或是static funciton。</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="built_in">int</span> countEven() &#123;</span><br><span class="line">  <span class="built_in">int</span> <span class="built_in">num</span> = Random().nextInt(<span class="number">100</span>) + <span class="number">1000000000</span>;</span><br><span class="line">  <span class="built_in">int</span> count = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> (<span class="built_in">num</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">num</span> % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">      count++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">num</span>--;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> count % <span class="number">1000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>給他跑個十億多次，夠繁重了吧</p>
</blockquote>
<p>接著，創造一個與Isolate溝通的通道<code>isolateCompute()</code>，分別會有兩個通訊端</p>
<ul>
<li>SendPort: 丟工作的Isolate的通訊端（傳送端）</li>
<li>ReceivePort: 做工作的Isolate的通訊端（接收端）</li>
</ul>
<p>當main Isolate帶著他的通訊端過來時：</p>
<ol>
<li>先創造一個做工作Isolate的通訊端</li>
<li>並使用<code>sendPort.send(reveivePort.sendPort)</code>將兩個通訊端做連接</li>
<li>連接上後接收端就可以用<code>receivePort</code>開始監聽訊息</li>
<li>若有訊息包<code>MessagePackage</code>過來則開始處理</li>
<li>將結果用臨時傳送器傳回main Isolate</li>
</ol>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 訊息包</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MessagePackage</span> </span>&#123;</span><br><span class="line">  SendPort sender; <span class="comment">// 臨時傳送器</span></span><br><span class="line">  <span class="built_in">dynamic</span> msg; <span class="comment">// 訊息</span></span><br><span class="line">  MessagePackage(<span class="keyword">this</span>.sender, <span class="keyword">this</span>.msg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">isolateCompute(SendPort sendPort) &#123;</span><br><span class="line">  <span class="comment">// 1. 創造一個做工作Isolate的通訊端</span></span><br><span class="line">  ReceivePort receivePort = ReceivePort();</span><br><span class="line">  <span class="comment">// 2. 將兩個通訊端做連接</span></span><br><span class="line">  sendPort.send(receivePort.sendPort);</span><br><span class="line">  <span class="comment">// 3. 連接上後接收端就可以開始監聽訊息</span></span><br><span class="line">  receivePort.listen((package) &#123;</span><br><span class="line">    <span class="comment">// 4. 若有訊息過來則開始處理</span></span><br><span class="line">    MessagePackage _msg = package <span class="keyword">as</span> MessagePackage;</span><br><span class="line">    <span class="built_in">print</span>(_msg.msg); <span class="comment">// output: a message to isolate</span></span><br><span class="line">    <span class="built_in">int</span> r = countEven();</span><br><span class="line">    <span class="comment">// 5. 將結果用臨時傳送器傳回去</span></span><br><span class="line">    _msg.sender.send(r);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>創建完Isolate後，我們就可以在頁面上加上<code>_executeIsolate()</code>來呼叫Isolate做事</p>
<ol>
<li>創建一個通訊端</li>
<li>將通訊端傳至Isolate，並等待連接上，即變成傳送端</li>
<li>建立好通道後即可使用傳送端將訊息包（臨時傳送器＋訊息）傳至Isolate</li>
<li>回傳結果</li>
<li>關閉臨時傳送器</li>
<li>關閉通訊端<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="built_in">int?</span> _counter;</span><br><span class="line"><span class="built_in">bool</span> _computing = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">Isolate? isolate;</span><br><span class="line">SendPort? isolateSender;</span><br><span class="line"><span class="keyword">void</span> _executeIsolate() <span class="keyword">async</span> &#123;</span><br><span class="line">  setState(() &#123;</span><br><span class="line">    _computing = <span class="keyword">true</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">// 1. 創建一個通訊端</span></span><br><span class="line">  ReceivePort receivePort = ReceivePort();</span><br><span class="line">  <span class="comment">// 2. 將通訊端傳至Isolate，並等待連接上</span></span><br><span class="line">  isolate =</span><br><span class="line">      <span class="keyword">await</span> Isolate.spawn&lt;SendPort&gt;(isolateCompute, receivePort.sendPort);</span><br><span class="line">  isolateSender = <span class="keyword">await</span> receivePort.first;</span><br><span class="line">  <span class="comment">// 3. 用傳送端將訊息包傳至Isolate</span></span><br><span class="line">  ReceivePort _temp = ReceivePort();</span><br><span class="line">  isolateSender!.send(MessagePackage(_temp.sendPort, <span class="string">&quot;a message to isolate&quot;</span>));</span><br><span class="line">  <span class="comment">// 4. 回傳結果</span></span><br><span class="line">  <span class="built_in">int</span> r = <span class="keyword">await</span> _temp.first;</span><br><span class="line">  setState(() &#123;</span><br><span class="line">    _counter = r;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">// 5. 關閉臨時傳送器</span></span><br><span class="line">  _temp.close();</span><br><span class="line">  <span class="comment">// 6. 關閉通訊端</span></span><br><span class="line">  receivePort.close();</span><br><span class="line">  setState(() &#123;</span><br><span class="line">    _computing = <span class="keyword">false</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<p>最後做個按鈕來觸發<code>_executeIsolate()</code>，並在運算時把<code>CircularProgressIndicator()</code>加入頁面</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="meta">@override</span></span><br><span class="line">Widget build(BuildContext context) &#123;</span><br><span class="line">  <span class="built_in">int</span> i = _counter ?? <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">return</span> Scaffold(</span><br><span class="line">    appBar: AppBar(</span><br><span class="line">      title: <span class="keyword">const</span> Text(<span class="string">&quot;Flutter Demo Home Page&quot;</span>),</span><br><span class="line">    ),</span><br><span class="line">    body: Center(</span><br><span class="line">      child: Container(</span><br><span class="line">        alignment: Alignment.center,</span><br><span class="line">        width: MediaQuery.of(context).size.width * <span class="number">0.5</span>,</span><br><span class="line">        height: MediaQuery.of(context).size.width * <span class="number">0.5</span>,</span><br><span class="line">        color: Colors.grey[<span class="number">100</span>],</span><br><span class="line">        child: _computing</span><br><span class="line">            ? <span class="keyword">const</span> CircularProgressIndicator()</span><br><span class="line">            : Text(</span><br><span class="line">                <span class="string">&quot;<span class="subst">$i</span>&quot;</span>,</span><br><span class="line">                style: Theme.of(context).textTheme.headline1,</span><br><span class="line">              ),</span><br><span class="line">      ),</span><br><span class="line">    ),</span><br><span class="line">    floatingActionButton: FloatingActionButton(</span><br><span class="line">      onPressed: _executeIsolate,</span><br><span class="line">      tooltip: <span class="string">&#x27;Change&#x27;</span>,</span><br><span class="line">      child: _computing</span><br><span class="line">          ? <span class="keyword">const</span> CircularProgressIndicator()</span><br><span class="line">          : <span class="keyword">const</span> Icon(Icons.swap_horiz_rounded),</span><br><span class="line">    ),</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>Flutter</tag>
        <tag>Dart</tag>
        <tag>Isolate</tag>
      </tags>
  </entry>
  <entry>
    <title>那些封裝Flutter for Windows Desktop踩過的坑</title>
    <url>/2021/10/05/flutter-windows-msix/</url>
    <content><![CDATA[<p>當我用Flutter寫完一個App後，想要將這個App封裝成Window的MSIX應用程式，但發現網上Windows Desktop的教學屈指可數，且多數都是英文，於是就產生了想法把它記錄下來，把坑填好，以免以後要用到忘記踩過的坑！</p>
<h3 id="前置作業"><a href="#前置作業" class="headerlink" title="前置作業"></a>前置作業</h3><ul>
<li>一個欲封裝的Flutter專案</li>
<li>一台安裝好Flutter環境的Windows電腦</li>
<li>一顆強壯的心</li>
</ul>
<h3 id="新增MSIX套件"><a href="#新增MSIX套件" class="headerlink" title="新增MSIX套件"></a>新增MSIX套件</h3><p>本篇是運用Flutter Package中的<a class="link"   href="https://pub.dev/packages/msix" >msix<i class="fas fa-external-link-alt"></i></a>套件來封裝Windows應用程式，所以首先～我們就先將msix套件新增至我們Flutter專案中的<code>pubspec.yaml</code>中。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">dev_dependencies:</span></span><br><span class="line">  <span class="attr">flutter_test:</span></span><br><span class="line">    <span class="attr">sdk:</span> <span class="string">flutter</span></span><br><span class="line">  <span class="attr">msix:</span> <span class="string">^2.2.3</span></span><br></pre></td></tr></table></figure>

<h3 id="建置Windwos-Release版本應用"><a href="#建置Windwos-Release版本應用" class="headerlink" title="建置Windwos Release版本應用"></a>建置Windwos Release版本應用</h3><p>若Flutter專案中還沒有windows資料夾，則先輸入：</p>
<p><code>flutter config --enable-windows-desktop</code></p>
<p>接下來先來建置個windows的應用(.exe)，只需在終端機的Flutter專案的目錄下輸入：</p>
<p><code>flutter build windows</code></p>
<p>這時，建置好的Windows應用將會輸出至Flutter專案中<strong>\build\windows\runner\Release</strong>資料夾下。</p>
<blockquote>
<p>若應用程式要上架至Windows Store，就不需要再額外進行數位簽署，上架Windows Store時會自動簽署。<br>若要將MSIX進行私有部署或測試，則須創建一個.pfx證書來將應用進行數位簽署。</p>
</blockquote>
<p><em>如不需數位簽署則直接跳至下面MSIX打包</em></p>
<h3 id="創建自簽名的-pfx證書"><a href="#創建自簽名的-pfx證書" class="headerlink" title="創建自簽名的.pfx證書"></a>創建自簽名的.pfx證書</h3><ol>
<li><p>安裝<a class="link"   href="https://slproweb.com/products/Win32OpenSSL.html" >OpenSSL<i class="fas fa-external-link-alt"></i></a></p>
</li>
<li><p>將OpenSSL新增至環境變數<br> e.g. <code>&quot;C:\Program Files\OpenSSL-Win64\bin&quot;</code></p>
</li>
<li><p>產生私鑰<br> <code>openssl genrsa -out mykeyname.key 2048</code></p>
</li>
<li><p>使用私鑰產生自簽名證書(CSR)<br> <code>openssl req -new -key mykeyname.key –subj “/CN=Comapny Name/O=Comapny Name/C=TW” -out mycsrname.csr</code></p>
<blockquote>
<ul>
<li>/CN: Company Name</li>
<li>/O:  Organization Name</li>
<li>/C:  Country Name</li>
</ul>
</blockquote>
</li>
<li><p>使用私鑰及CSR文件生成自簽名證書(CRT)<br> <code>openssl x509 -in mycsrname.csr -out mycrtname.crt -req -signkey mykeyname.key -days 10000</code></p>
</li>
<li><p>使用私鑰與CRT文件生成.pfx文件<br> <code>openssl pkcs12 -export -out CERTIFICATE.pfx -inkey mykeyname.key -in mycrtname.crt</code></p>
</li>
</ol>
<h3 id="將應用程式進行數位簽署"><a href="#將應用程式進行數位簽署" class="headerlink" title="將應用程式進行數位簽署"></a>將應用程式進行數位簽署</h3><ol>
<li><p>將signtool新增至環境變數<br> e.g. <code>C:\Program Files (x86)\Windows Kits\10\bin\10.0.19041.0\x64</code></p>
</li>
<li><p>將.pfx證書簽署至exe<br> <code>signtool sign /tr http://timestamp.digicert.com /td sha256 /fd sha256 /f CERTIFICATE.pfx /p 16595169 myapp.exe</code></p>
<blockquote>
<ul>
<li>/tr: 時間戳記</li>
<li>/td: 時間戳記摘要演算法</li>
<li>/fd: 檔案摘要演算法</li>
<li>/f:  簽署憑證</li>
<li>/p:  憑證密碼</li>
</ul>
</blockquote>
</li>
<li><p>右鍵點擊.exe檔選取<strong>內容</strong>，確認<strong>數位簽章</strong>內有.pfx證書</p>
<img src="/images/msix/image7.png" alt="signtool_verify" title="height='500'" height="500" /></li>
</ol>
<h3 id="將-pfx資訊新增至Flutter專案"><a href="#將-pfx資訊新增至Flutter專案" class="headerlink" title="將.pfx資訊新增至Flutter專案"></a>將.pfx資訊新增至Flutter專案</h3><ul>
<li><p>確認.pfx資訊</p>
<ol>
<li>於Windows PowerShell輸入<br> <code>Get-PfxCertificate</code></li>
<li>於FilePath[0]輸入.pfx路徑</li>
<li>跳出FilePath[1]留空Enter</li>
<li>輸入.pfx密碼</li>
<li>將輸出Subject記錄下來<br><img src="/images/msix/image8.png" alt="pfx_info"></li>
</ol>
</li>
<li><p>將<code>msix_config</code>新增至<code>pubspec.yaml</code>的最底部</p>
</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">msix_config:</span></span><br><span class="line">  <span class="attr">display_name:</span> <span class="string">myApp</span></span><br><span class="line">  <span class="attr">publisher_display_name:</span> <span class="string">CompanyName</span></span><br><span class="line">  <span class="attr">identity_name:</span> <span class="string">MyCompany.MySuite.MyApp</span></span><br><span class="line">  <span class="attr">msix_version:</span> <span class="number">1.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">  <span class="attr">certificate_path:</span> <span class="string">C:\&lt;PathToCertificate&gt;\&lt;CERTIFICATE.pfx&gt;</span></span><br><span class="line">  <span class="attr">certificate_password:</span> <span class="number">1234</span></span><br><span class="line">  <span class="attr">publisher:</span> <span class="string">CN=Comapny</span> <span class="string">Name,</span> <span class="string">O=Comapny</span> <span class="string">Name,</span> <span class="string">C=TW</span></span><br><span class="line">  <span class="attr">logo_path:</span> <span class="string">C:\&lt;PathToIcon&gt;\&lt;Logo.png&gt;</span></span><br><span class="line">  <span class="attr">start_menu_icon_path:</span> <span class="string">C:\&lt;PathToIcon&gt;\&lt;Icon.png&gt;</span></span><br><span class="line">  <span class="attr">tile_icon_path:</span> <span class="string">C:\&lt;PathToIcon&gt;\&lt;Icon.png&gt;</span></span><br><span class="line">  <span class="attr">vs_generated_images_folder_path:</span> <span class="string">C:\&lt;PathToFolder&gt;\icons</span></span><br><span class="line">  <span class="attr">icons_background_color:</span> <span class="string">transparent</span></span><br><span class="line">  <span class="attr">architecture:</span> <span class="string">x64</span></span><br><span class="line">  <span class="attr">capabilities:</span> <span class="string">&#x27;internetClient,location,microphone,webcam&#x27;</span></span><br></pre></td></tr></table></figure>

<p>將剛剛紀錄的Subject直接貼上<code>publisher</code></p>
<blockquote>
<p>大坑-1: 若排序錯了則會封裝失敗！！！</p>
</blockquote>
<h3 id="MSIX打包"><a href="#MSIX打包" class="headerlink" title="MSIX打包"></a>MSIX打包</h3><p>在終端機的Flutter專案的目錄下輸入：<br><code>flutter pub run msix:create</code></p>
<p><img src="/images/msix/image0.png" alt="msix:create"></p>
<p>Flutter專案中<strong>\build\windows\runner\Release</strong>資料夾下，會多產生一個msix檔。</p>
<h4 id="安裝未受信任應用程式"><a href="#安裝未受信任應用程式" class="headerlink" title="安裝未受信任應用程式"></a>安裝未受信任應用程式</h4><p>在msix封裝時，msix套件會自動簽署預設的測試簽章，但此時開啟.msix檔案還是會跳出此應用程式是未受信任的應用程式而無法安裝，如下圖：</p>
<p><img src="https://docs.microsoft.com/zh-tw/windows/msix/images/msix-bad-cert.png" alt="取自https://docs.microsoft.com/"></p>
<p>此時，需要右鍵點擊.msix檔案再選取內容，將會看到<strong>數位簽章</strong>的標籤，點擊簽章再選取詳細資料。</p>
<img src="/images/msix/image1.png" alt="UntrustedApp_Step1" title="width='350'" width="350" />

<p>點擊<strong>檢視憑證</strong><br><img src="/images/msix/image2.png" alt="UntrustedApp_Step2" title="width='350'" width="350" /></p>
<p>點擊<strong>安裝憑證</strong><br><img src="/images/msix/image3.png" alt="UntrustedApp_Step3" title="width='350'" width="350" /></p>
<p>選擇<strong>本機電腦</strong><br><img src="/images/msix/image4.png" alt="UntrustedApp_Step4" title="width='350'" width="350" /></p>
<p>選擇存放在<strong>受信任的根憑證目錄</strong><br><img src="/images/msix/image5.png" alt="UntrustedApp_Step5" title="width='350'" width="350" /></p>
<p>點擊<strong>完成</strong><br><img src="/images/msix/image6.png" alt="UntrustedApp_Step6" title="width='350'" width="350" /></p>
<p>接著全部點確定，再開啟.msix檔案，就變為受信任的應用程式且可以安裝了～<br><img src="https://docs.microsoft.com/zh-tw/windows/msix/images/msix-good-cert.png" alt="取自https://docs.microsoft.com/"></p>
]]></content>
      <categories>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>Flutter</tag>
        <tag>Dart</tag>
        <tag>Windows</tag>
        <tag>MSIX</tag>
      </tags>
  </entry>
  <entry>
    <title>Flutter的Windows套件 - webview_windows (1)</title>
    <url>/2021/10/07/flutter-webview-windows/</url>
    <content><![CDATA[<p>WebView在Flutter的iOS及Android端支援已非常完善，但在Windows及Mac端卻始終沒有支援，在2019年，就有網友在Github提出何時會支援電腦桌面端的WebView套件，但始終沒有消息…</p>
<p>終於在兩年後，隨著微軟推出了WebView2，終於也有大神在Flutter為Windows開發了<a class="link"   href="https://pub.dev/packages/webview_windows" >Webview<i class="fas fa-external-link-alt"></i></a>套件！！！</p>
<p>今天就來好好了解該怎麼使用這個套件吧～</p>
<h3 id="配置需求"><a href="#配置需求" class="headerlink" title="配置需求"></a>配置需求</h3><ul>
<li><p>用戶端的電腦</p>
<ul>
<li><a class="link"   href="https://developer.microsoft.com/zh-tw/microsoft-edge/webview2/" >WebView2 執行階段<i class="fas fa-external-link-alt"></i></a><blockquote>
<p>當然要debug的話也是要安裝</p>
</blockquote>
</li>
<li>Windows 10 1809+</li>
</ul>
</li>
<li><p>開發端的電腦</p>
<ul>
<li><a class="link"   href="https://visualstudio.microsoft.com/zh-hant/downloads/" >Visual Studio 2019<i class="fas fa-external-link-alt"></i></a></li>
<li>Windows 10 SDK 2004+ (10.0.19041.0)</li>
</ul>
</li>
</ul>
<h4 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h4><p>查看看Windows的版本：<strong>開始</strong> &gt; <strong>設定</strong> &gt; <strong>系統</strong> &gt; <strong>關於</strong><br><img src="https://i.imgur.com/yZKv4QW.png" alt="windows_ver"></p>
<h3 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h3><p>首先，當然就是將套件放進<code>pubspec.yaml</code>中</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">dev_dependencies:</span></span><br><span class="line">  <span class="attr">webview_windows:</span> <span class="string">^0.0.8</span></span><br></pre></td></tr></table></figure>

<p>然後安裝套件</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> flutter pub get</span></span><br></pre></td></tr></table></figure>
<p>再將它匯入專案中</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:webview_windows/webview_windows.dart&#x27;</span> <span class="keyword">as</span> wweb;</span><br></pre></td></tr></table></figure>

<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>首先，我們先宣告一個Controller來控制WebView</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">final</span> _winController = wweb.WebviewController();</span><br></pre></td></tr></table></figure>
<p>並寫一個初始WebView的function</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line">Future&lt;<span class="keyword">void</span>&gt; initWindowsWebView() <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (!Platform.isWindows) <span class="keyword">return</span>;</span><br><span class="line">  <span class="keyword">await</span> _winController.initialize();  <span class="comment">// 初始WebView</span></span><br><span class="line">  <span class="keyword">await</span> _winController.loadUrl(</span><br><span class="line">      <span class="string">&quot;https://developer.microsoft.com/en-us/microsoft-edge/webview2/&quot;</span>); <span class="comment">// 載入頁面</span></span><br><span class="line">  <span class="keyword">while</span> (!_winController.value.isInitialized) &#123; <span class="comment">// 等待初始完成</span></span><br><span class="line">    sleep(<span class="built_in">Duration</span>(milliseconds: <span class="number">200</span>));</span><br><span class="line">  &#125;</span><br><span class="line">  setState(() &#123;&#125;); <span class="comment">// 重整頁面UI</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>再將<code>initWindowsWebView()</code>放至<code>initState()</code>中</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="meta">@override</span></span><br><span class="line"><span class="keyword">void</span> initState() &#123;</span><br><span class="line">  <span class="keyword">super</span>.initState();</span><br><span class="line">  initWindowsWebView();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然後切記!要在離開頁面時關閉WebviewController</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="meta">@override</span></span><br><span class="line"><span class="keyword">void</span> dispose() &#123;</span><br><span class="line">  <span class="keyword">super</span>.dispose();</span><br><span class="line">  _winController.dispose();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>寫完動作後，我們再來寫一個Widget來顯示WebView</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line">Widget webView() &#123;</span><br><span class="line">  <span class="keyword">if</span> (!Platform.isWindows)</span><br><span class="line">    <span class="keyword">return</span> Center(</span><br><span class="line">      child: Text(<span class="string">&quot;not Support&quot;</span>),</span><br><span class="line">    );</span><br><span class="line">  <span class="keyword">if</span> (!_winController.value.isInitialized)</span><br><span class="line">    <span class="keyword">return</span> Center(</span><br><span class="line">      child: CircularProgressIndicator(), <span class="comment">// 未初始完成顯示loading圖示</span></span><br><span class="line">    );</span><br><span class="line">  <span class="keyword">return</span> Container(</span><br><span class="line">    child: wweb.Webview(_winController),</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>最後，再將Wiget放進頁面就完成了~</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="meta">@override</span></span><br><span class="line">Widget build(BuildContext context) &#123;</span><br><span class="line">  <span class="keyword">return</span> Scaffold(</span><br><span class="line">    appBar: AppBar(</span><br><span class="line">      title: Text(<span class="string">&quot;WebView&quot;</span>),</span><br><span class="line">    ),</span><br><span class="line">    body: webView(),</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="另人激動的成果時間"><a href="#另人激動的成果時間" class="headerlink" title="另人激動的成果時間"></a>另人激動的成果時間</h3><p><img src="https://i.imgur.com/ZfztlMU.gif" alt="webview preview"></p>
<h3 id="Full-Code"><a href="#Full-Code" class="headerlink" title="Full Code"></a>Full Code</h3><blockquote>
<p>完整程式碼請至<a class="link"   href="https://github.com/cailirl980519/sample_windows_webview" >sample_windows_webview<i class="fas fa-external-link-alt"></i></a></p>
</blockquote>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;dart:io&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter/material.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:lottie/lottie.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:webview_windows/webview_windows.dart&#x27;</span> <span class="keyword">as</span> wweb;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WebViewPage</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> WebViewPage(&#123;Key? key&#125;) : <span class="keyword">super</span>(key: key);</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  _WebViewPageState createState() =&gt; _WebViewPageState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_WebViewPageState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">WebViewPage</span>&gt; </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> _winController = wweb.WebviewController();</span><br><span class="line"></span><br><span class="line">  Future&lt;<span class="keyword">void</span>&gt; initWindowsWebView() <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!Platform.isWindows) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">await</span> _winController.initialize();  <span class="comment">// 初始WebView</span></span><br><span class="line">    <span class="keyword">await</span> _winController.loadUrl(</span><br><span class="line">        <span class="string">&quot;https://developer.microsoft.com/en-us/microsoft-edge/webview2/&quot;</span>); <span class="comment">// 載入頁面</span></span><br><span class="line">    <span class="keyword">while</span> (!_winController.value.isInitialized) &#123; <span class="comment">// 等待初始完成</span></span><br><span class="line">      sleep(<span class="built_in">Duration</span>(milliseconds: <span class="number">200</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    setState(() &#123;&#125;); <span class="comment">// 重整頁面UI</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  Widget webView() &#123;</span><br><span class="line">    <span class="keyword">if</span> (!Platform.isWindows)</span><br><span class="line">      <span class="keyword">return</span> Center(</span><br><span class="line">        child: Text(<span class="string">&quot;not Support&quot;</span>),</span><br><span class="line">      );</span><br><span class="line">    <span class="keyword">if</span> (!_winController.value.isInitialized)</span><br><span class="line">      <span class="keyword">return</span> Center(</span><br><span class="line">        child: CircularProgressIndicator(), <span class="comment">// 未初始完成顯示loading圖示</span></span><br><span class="line">      );</span><br><span class="line">    <span class="keyword">return</span> Container(</span><br><span class="line">      child: wweb.Webview(_winController),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> initState() &#123;</span><br><span class="line">    <span class="keyword">super</span>.initState();</span><br><span class="line">    initWindowsWebView();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> dispose() &#123;</span><br><span class="line">    <span class="keyword">super</span>.dispose();</span><br><span class="line">    _winController.dispose();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Scaffold(</span><br><span class="line">      appBar: AppBar(</span><br><span class="line">        title: Text(<span class="string">&quot;Sample1&quot;</span>),</span><br><span class="line">      ),</span><br><span class="line">      body: webView(),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>Flutter</tag>
        <tag>Dart</tag>
        <tag>Windows</tag>
        <tag>Edge Webview2</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello Hexo World</title>
    <url>/2021/10/05/hello-world/</url>
    <content><![CDATA[<h1 id="歡迎來到我的秘密基地！"><a href="#歡迎來到我的秘密基地！" class="headerlink" title="歡迎來到我的秘密基地！"></a>歡迎來到我的秘密基地！</h1><p><img src="https://i.imgur.com/HbkFUz3.gif" alt="building..."></p>
<p>正在努力建置中…</p>
<p>敬請期待</p>
]]></content>
  </entry>
  <entry>
    <title>識別HTML5 Canvas上的圖形（直線、箭號、圓形、矩形...）</title>
    <url>/2021/10/26/js-shape-recognition/</url>
    <content><![CDATA[<p>在iOS的備忘錄或Samsung Note App裡畫畫都可以將手畫的筆跡轉換成漂亮的圖形，讓我不禁想嘗試HTML5的Canvas是不是也可以做到，今天就來記錄一下如何將HTML5 Canvas上醜醜的圖形變成漂亮的直線、箭號、矩形等等。</p>
<h3 id="開心地展示時間"><a href="#開心地展示時間" class="headerlink" title="開心地展示時間"></a>開心地展示時間</h3><p class="codepen" data-height="300" data-slug-hash="zYdNBxM" data-preview="true" data-editable="true" data-user="cailirl980519" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
  <span>See the Pen <a class="link"   href="https://codepen.io/cailirl980519/pen/zYdNBxM" >
  Shape Recognition<i class="fas fa-external-link-alt"></i></a> by cailirl980519 (<a class="link"   href="https://codepen.io/cailirl980519" >@cailirl980519<i class="fas fa-external-link-alt"></i></a>)
  on <a class="link"   href="https://codepen.io" >CodePen<i class="fas fa-external-link-alt"></i></a>.</span>
</p>
<script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script>

<h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><h4 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h4><p>首先，先在頁面創建一個<code>&lt;canvas&gt;</code>用來畫畫，再創建一個<code>&lt;button&gt;</code>來清除畫布</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;canvas&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;menu&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;clear&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;reset()&quot;</span>&gt;</span>clear<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h4><p>再來用CSS排個版～</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#canvas</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100vw</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#menu</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h4><p>先宣告幾個等等需要用到的參數，並將偵測動作加入畫布</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> isMobile = <span class="built_in">window</span>.orientation !== <span class="literal">undefined</span>;</span><br><span class="line"><span class="keyword">const</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&quot;canvas&quot;</span>);</span><br><span class="line"><span class="comment">// 設定畫布大小</span></span><br><span class="line">canvas.width = canvas.clientWidth;</span><br><span class="line">canvas.height = canvas.clientHeight;</span><br><span class="line"><span class="keyword">const</span> ctx = canvas.getContext(<span class="string">&quot;2d&quot;</span>);</span><br><span class="line"><span class="comment">// 設定畫布樣式</span></span><br><span class="line">ctx.fillStyle = <span class="string">&quot;lightgray&quot;</span>;</span><br><span class="line">ctx.lineWidth = <span class="number">2</span>;</span><br><span class="line">ctx.font = <span class="string">&quot;30px Arial&quot;</span>;</span><br><span class="line"><span class="comment">// 記錄筆跡的參數</span></span><br><span class="line"><span class="keyword">var</span> drawCache = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line"><span class="keyword">var</span> lineCache = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line"><span class="comment">// 偵測畫布動作</span></span><br><span class="line"><span class="keyword">if</span> (isMobile) &#123;</span><br><span class="line">  canvas.addEventListener(<span class="string">&quot;touchstart&quot;</span>, handleDraw);</span><br><span class="line">  canvas.addEventListener(<span class="string">&quot;touchmove&quot;</span>, handleDraw);</span><br><span class="line">  canvas.addEventListener(<span class="string">&quot;touchend&quot;</span>, handleDraw);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  canvas.addEventListener(<span class="string">&quot;pointerdown&quot;</span>, handleDraw);</span><br><span class="line">  canvas.addEventListener(<span class="string">&quot;pointermove&quot;</span>, handleDraw);</span><br><span class="line">  canvas.addEventListener(<span class="string">&quot;pointerup&quot;</span>, handleDraw);</span><br><span class="line">  canvas.addEventListener(<span class="string">&quot;pointercancel&quot;</span>, handleDraw);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>接下來宣告一個<code>handleDraw</code> function來執行偵測到畫布動作後需要做的事情：</p>
<ul>
<li>偵測到這些動作時，將目前觸碰到的點加入<code>lineCache</code>陣列裡<ul>
<li>pointerdown</li>
<li>pointermove</li>
<li>touchstart</li>
<li>touchmove</li>
</ul>
</li>
<li>偵測到這些動作時，利用<code>detectShape</code>判斷圖形，再將偵測到的圖形及目前的線段<code>lineCache</code>新增至<code>drawCache</code><ul>
<li>pointerup</li>
<li>pointercancel</li>
<li>touchend</li>
</ul>
</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">handleDraw</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  e.preventDefault();</span><br><span class="line">  <span class="keyword">if</span> (</span><br><span class="line">    (isMobile &amp;&amp; (e.type == <span class="string">&quot;touchstart&quot;</span> || e.type == <span class="string">&quot;touchmove&quot;</span>)) ||</span><br><span class="line">    (e.buttons == <span class="number">1</span> &amp;&amp; (e.type == <span class="string">&quot;pointerdown&quot;</span> || e.type == <span class="string">&quot;pointermove&quot;</span>))</span><br><span class="line">  ) &#123;</span><br><span class="line">    <span class="comment">// 將目前觸碰到的點加入`lineCache`陣列裡</span></span><br><span class="line">    lineCache.push(&#123;</span><br><span class="line">      <span class="attr">x</span>: isMobile ? e.touches[<span class="number">0</span>].clientX : e.clientX,</span><br><span class="line">      <span class="attr">y</span>: isMobile ? e.touches[<span class="number">0</span>].clientY : e.clientY</span><br><span class="line">    &#125;);</span><br><span class="line">    draw(); <span class="comment">// 更新畫布</span></span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (</span><br><span class="line">    e.type == <span class="string">&quot;pointerup&quot;</span> ||</span><br><span class="line">    e.type == <span class="string">&quot;pointercancel&quot;</span> ||</span><br><span class="line">    e.type == <span class="string">&quot;touchend&quot;</span></span><br><span class="line">  ) &#123;</span><br><span class="line">    <span class="keyword">if</span> (lineCache.length &gt; <span class="number">1</span>) &#123;</span><br><span class="line">      detectShape(lineCache); <span class="comment">// 偵測圖形</span></span><br><span class="line">    &#125;</span><br><span class="line">    lineCache = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line">    draw(); <span class="comment">// 更新畫布</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>接著就是今天的重點<code>detectShape</code></p>
<ol>
<li>先將三個連續點變為兩個線段，並判斷兩個線段的角度，如果大於<code>Math.PI / 4</code>則認定它為角</li>
<li>計算所有認定為角的平均角度</li>
<li>判斷第一個點跟最後一個點的距離是否小於30，如是，則認定為封閉的圖形，並將<strong>第一個點</strong>加入<code>corners</code>的最後一項</li>
<li>若為封閉的圖形，則利用<code>avgA</code>判斷是否為<strong>圓形</strong>或<strong>橢圓形</strong></li>
<li>若為封閉的圖形，且不是圓形或橢圓形，並有5個角，則可以認定它為<strong>四方形</strong>，接著就繼續判斷是否為<strong>矩形</strong></li>
<li>若不為封閉的圖形，則將<strong>最後一個</strong>點加入<code>corners</code>的最後一項</li>
<li>若不為封閉的圖形，則判斷是否為曲線、直線或箭號</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">detectShape</span>(<span class="params">points</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> ptLast = &#123; ...points[points.length - <span class="number">1</span>] &#125;;</span><br><span class="line">  ptLast.index = points.length - <span class="number">1</span>;</span><br><span class="line">  <span class="comment">// 線段轉彎的地方（角）</span></span><br><span class="line">  <span class="keyword">let</span> corners = [points[<span class="number">0</span>]];</span><br><span class="line">  <span class="keyword">let</span> n = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">let</span> t = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">let</span> lastCorner = points[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">let</span> angles = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">let</span> avgA;</span><br><span class="line">  <span class="comment">// 1. 判斷是否為角</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; points.length - <span class="number">2</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">let</span> pt = points[i + <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">let</span> d = delta(lastCorner, points[i - <span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">if</span> (len(d) &gt; <span class="number">20</span> &amp;&amp; n &gt; <span class="number">2</span>) &#123;</span><br><span class="line">      ac = delta(points[i - <span class="number">1</span>], pt);</span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">Math</span>.abs(angle_between(ac, d)) &gt; <span class="built_in">Math</span>.PI / <span class="number">4</span>) &#123;</span><br><span class="line">        angles += (angle_between(ac, d) * <span class="number">180</span>) / <span class="built_in">Math</span>.PI;</span><br><span class="line">        pt.index = i;</span><br><span class="line">        corners.push(pt);</span><br><span class="line">        lastCorner = pt;</span><br><span class="line">        n = <span class="number">0</span>;</span><br><span class="line">        t = <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    n++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 2. 計算所有角的平均角度</span></span><br><span class="line">  avgA = angles / corners.length;</span><br><span class="line">  <span class="comment">// 3. 判斷是否為封閉的圖形</span></span><br><span class="line">  <span class="keyword">if</span> (len(delta(points[points.length - <span class="number">1</span>], points[<span class="number">0</span>])) &lt; <span class="number">30</span>) &#123;</span><br><span class="line">    <span class="comment">// 3. 將第一個點加入corners最後一項</span></span><br><span class="line">    ptLast = &#123; ...points[<span class="number">0</span>] &#125;;</span><br><span class="line">    ptLast.index = <span class="number">0</span>;</span><br><span class="line">    corners.push(ptLast);</span><br><span class="line">    <span class="comment">// 4. 判斷是否為圓形或橢圓形</span></span><br><span class="line">    <span class="keyword">if</span> (avgA &lt; <span class="number">45</span>) &#123;</span><br><span class="line">      <span class="keyword">let</span> l = points.length;</span><br><span class="line">      <span class="keyword">let</span> ps = [...points];</span><br><span class="line">      <span class="keyword">let</span> left = ps.sort(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a.x - b.x)[<span class="number">0</span>];</span><br><span class="line">      <span class="keyword">let</span> right = ps.sort(<span class="function">(<span class="params">a, b</span>) =&gt;</span> b.x - a.x)[<span class="number">0</span>];</span><br><span class="line">      <span class="keyword">let</span> top = ps.sort(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a.y - b.y)[<span class="number">0</span>];</span><br><span class="line">      <span class="keyword">let</span> bottom = ps.sort(<span class="function">(<span class="params">a, b</span>) =&gt;</span> b.y - a.y)[<span class="number">0</span>];</span><br><span class="line">      corners = [left, right, top, bottom];</span><br><span class="line">      drawCache.push(&#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&quot;circle&quot;</span>,</span><br><span class="line">        <span class="attr">corners</span>: corners,</span><br><span class="line">        <span class="attr">line</span>: [...lineCache]</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 5. 判斷是否為四方形</span></span><br><span class="line">    <span class="keyword">if</span> (corners.length == <span class="number">5</span>) &#123;</span><br><span class="line">      <span class="keyword">let</span> p0 = corners[<span class="number">0</span>];</span><br><span class="line">      <span class="keyword">let</span> p1 = corners[<span class="number">1</span>];</span><br><span class="line">      <span class="keyword">let</span> p2 = corners[<span class="number">2</span>];</span><br><span class="line">      <span class="keyword">let</span> p3 = corners[<span class="number">3</span>];</span><br><span class="line">      <span class="keyword">let</span> p0p1 = delta(p0, p1);</span><br><span class="line">      <span class="keyword">let</span> p1p2 = delta(p1, p2);</span><br><span class="line">      <span class="keyword">let</span> p2p3 = delta(p2, p3);</span><br><span class="line">      <span class="keyword">let</span> p3p0 = delta(p3, p0);</span><br><span class="line">      <span class="comment">// 5. 判斷是否為矩形</span></span><br><span class="line">      <span class="keyword">if</span> (</span><br><span class="line">        <span class="built_in">Math</span>.abs(angle_between(p0p1, p1p2) - <span class="built_in">Math</span>.PI / <span class="number">2</span>) &lt; <span class="built_in">Math</span>.PI / <span class="number">6</span> &amp;&amp;</span><br><span class="line">        <span class="built_in">Math</span>.abs(angle_between(p1p2, p2p3) - <span class="built_in">Math</span>.PI / <span class="number">2</span>) &lt; <span class="built_in">Math</span>.PI / <span class="number">6</span> &amp;&amp;</span><br><span class="line">        <span class="built_in">Math</span>.abs(angle_between(p2p3, p3p0) - <span class="built_in">Math</span>.PI / <span class="number">2</span>) &lt; <span class="built_in">Math</span>.PI / <span class="number">6</span> &amp;&amp;</span><br><span class="line">        <span class="built_in">Math</span>.abs(angle_between(p3p0, p0p1) - <span class="built_in">Math</span>.PI / <span class="number">2</span>) &lt; <span class="built_in">Math</span>.PI / <span class="number">6</span></span><br><span class="line">      ) &#123;</span><br><span class="line">        <span class="keyword">let</span> p0p2 = delta(p0, p2);</span><br><span class="line">        <span class="keyword">let</span> p1p3 = delta(p1, p3);</span><br><span class="line">        <span class="keyword">let</span> diag = (len(p0p2) + len(p1p3)) / <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">let</span> tocenter0 = scale(unit(p0p2), -diag);</span><br><span class="line">        <span class="keyword">let</span> tocenter1 = scale(unit(p1p3), -diag);</span><br><span class="line">        <span class="keyword">let</span> center = average(corners);</span><br><span class="line">        <span class="keyword">let</span> angle = angle_between(p0p2, p1p3);</span><br><span class="line">        corners = [</span><br><span class="line">          add(center, tocenter0),</span><br><span class="line">          add(center, tocenter1),</span><br><span class="line">          add(center, scale(tocenter0, -<span class="number">1</span>)),</span><br><span class="line">          add(center, scale(tocenter1, -<span class="number">1</span>)),</span><br><span class="line">          add(center, tocenter0)</span><br><span class="line">        ];</span><br><span class="line">        drawCache.push(&#123;</span><br><span class="line">          <span class="attr">type</span>: <span class="string">&quot;rect&quot;</span>,</span><br><span class="line">          <span class="attr">corners</span>: corners,</span><br><span class="line">          <span class="attr">line</span>: [...lineCache]</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123; <span class="comment">// 不是封閉的圖形</span></span><br><span class="line">    <span class="comment">// 6. 將最後一個點加入corners最後一項</span></span><br><span class="line">    corners.push(ptLast);</span><br><span class="line">    <span class="comment">// 7. 判斷是否為曲線</span></span><br><span class="line">    <span class="keyword">if</span> (avgA &gt; <span class="number">20</span> &amp;&amp; avgA &lt; <span class="number">40</span>) &#123;</span><br><span class="line">      drawCache.push(&#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&quot;arc&quot;</span>,</span><br><span class="line">        <span class="attr">corners</span>: corners,</span><br><span class="line">        <span class="attr">line</span>: [...lineCache]</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 7. 判斷是否為直線</span></span><br><span class="line">    <span class="keyword">if</span> (corners.length == <span class="number">2</span>) &#123;</span><br><span class="line">      drawCache.push(&#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&quot;line&quot;</span>,</span><br><span class="line">        <span class="attr">corners</span>: corners,</span><br><span class="line">        <span class="attr">line</span>: [...lineCache]</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (corners.length == <span class="number">3</span>) &#123; </span><br><span class="line">      <span class="comment">// 7. 判斷是否為鍵號</span></span><br><span class="line">      <span class="keyword">let</span> p0 = corners[<span class="number">0</span>];</span><br><span class="line">      <span class="keyword">let</span> p1 = corners[<span class="number">1</span>];</span><br><span class="line">      <span class="keyword">let</span> p2 = ptLast;</span><br><span class="line">      <span class="keyword">let</span> p0p1 = delta(p0, p1);</span><br><span class="line">      <span class="keyword">let</span> p1p2 = delta(p1, p2);</span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">Math</span>.abs(angle_between(p0p1, p1p2) - <span class="built_in">Math</span>.PI / <span class="number">4</span>) &gt; <span class="built_in">Math</span>.PI / <span class="number">6</span>) &#123;</span><br><span class="line">        drawCache.push(&#123;</span><br><span class="line">          <span class="attr">type</span>: <span class="string">&quot;arrow&quot;</span>,</span><br><span class="line">          <span class="attr">corners</span>: corners,</span><br><span class="line">          <span class="attr">line</span>: [...lineCache]</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  drawCache.push(&#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&quot;other&quot;</span>,</span><br><span class="line">    <span class="attr">corners</span>: corners,</span><br><span class="line">    <span class="attr">line</span>: [...lineCache]</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>經過複雜且麻煩的偵測圖形後，最後就只要將偵測到的圖案更新至畫布內就大功告成了！</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 清除畫布</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clear</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  ctx.clearRect(<span class="number">0</span>, <span class="number">0</span>, canvas.width, canvas.height);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">draw</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  clear();</span><br><span class="line">  ctx.strokeStyle = <span class="string">&quot;orange&quot;</span>;</span><br><span class="line">  <span class="comment">// 繪製完成的筆跡</span></span><br><span class="line">  drawCache.forEach(<span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">    ctx.beginPath();</span><br><span class="line">    <span class="keyword">if</span> (e.type == <span class="string">&quot;line&quot;</span>) &#123; <span class="comment">// 直線</span></span><br><span class="line">      <span class="keyword">let</span> l = e.line.length - <span class="number">1</span>;</span><br><span class="line">      ctx.moveTo(e.line[<span class="number">0</span>].x, e.line[<span class="number">0</span>].y);</span><br><span class="line">      ctx.lineTo(e.line[l].x, e.line[l].y);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.type == <span class="string">&quot;arrow&quot;</span>) &#123; <span class="comment">// 箭號</span></span><br><span class="line">      <span class="keyword">let</span> l = e.line.length - <span class="number">1</span>;</span><br><span class="line">      <span class="keyword">let</span> angle =</span><br><span class="line">        (<span class="built_in">Math</span>.atan2(e.line[l].y - e.line[<span class="number">0</span>].y, e.line[l].x - e.line[<span class="number">0</span>].x) *</span><br><span class="line">          <span class="number">180</span>) /</span><br><span class="line">        <span class="built_in">Math</span>.PI;</span><br><span class="line">      <span class="keyword">let</span> angle1 = ((angle + <span class="number">150</span>) * <span class="built_in">Math</span>.PI) / <span class="number">180</span>;</span><br><span class="line">      <span class="keyword">let</span> angle2 = ((angle - <span class="number">150</span>) * <span class="built_in">Math</span>.PI) / <span class="number">180</span>;</span><br><span class="line">      ctx.moveTo(e.line[<span class="number">0</span>].x, e.line[<span class="number">0</span>].y);</span><br><span class="line">      ctx.lineTo(e.line[l].x, e.line[l].y);</span><br><span class="line">      ctx.lineTo(</span><br><span class="line">        e.line[l].x + <span class="number">20</span> * <span class="built_in">Math</span>.cos(angle1),</span><br><span class="line">        e.line[l].y + <span class="number">20</span> * <span class="built_in">Math</span>.sin(angle1)</span><br><span class="line">      );</span><br><span class="line">      ctx.moveTo(e.line[l].x, e.line[l].y);</span><br><span class="line">      ctx.lineTo(</span><br><span class="line">        e.line[l].x + <span class="number">20</span> * <span class="built_in">Math</span>.cos(angle2),</span><br><span class="line">        e.line[l].y + <span class="number">20</span> * <span class="built_in">Math</span>.sin(angle2)</span><br><span class="line">      );</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.type == <span class="string">&quot;rect&quot;</span>) &#123; <span class="comment">// 矩形</span></span><br><span class="line">      ctx.strokeStyle = <span class="string">&quot;orange&quot;</span>;</span><br><span class="line">      ctx.beginPath();</span><br><span class="line">      ctx.moveTo(e.corners[<span class="number">0</span>].x, e.corners[<span class="number">0</span>].y);</span><br><span class="line">      e.corners.forEach(<span class="function">(<span class="params">p</span>) =&gt;</span> ctx.lineTo(p.x, p.y));</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.type == <span class="string">&quot;arc&quot;</span>) &#123; <span class="comment">// 曲線</span></span><br><span class="line">      ctx.moveTo(e.corners[<span class="number">0</span>].x, e.corners[<span class="number">0</span>].y);</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; e.corners.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">var</span> x_mid = (e.corners[i].x + e.corners[i + <span class="number">1</span>].x) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">var</span> cp_x1 = (x_mid + e.corners[i].x) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">var</span> cp_y1 = i % <span class="number">2</span> == <span class="number">0</span> ? e.corners[i + <span class="number">1</span>].y : e.corners[i].y;</span><br><span class="line">        ctx.quadraticCurveTo(</span><br><span class="line">          cp_x1,</span><br><span class="line">          cp_y1,</span><br><span class="line">          e.corners[i + <span class="number">1</span>].x,</span><br><span class="line">          e.corners[i + <span class="number">1</span>].y</span><br><span class="line">        );</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.type == <span class="string">&quot;circle&quot;</span>) &#123; <span class="comment">// 圓形或橢圓形</span></span><br><span class="line">      ctx.ellipse(</span><br><span class="line">        (e.corners[<span class="number">0</span>].x + e.corners[<span class="number">1</span>].x) / <span class="number">2</span>,</span><br><span class="line">        (e.corners[<span class="number">2</span>].y + e.corners[<span class="number">3</span>].y) / <span class="number">2</span>,</span><br><span class="line">        <span class="built_in">Math</span>.abs(e.corners[<span class="number">1</span>].x - e.corners[<span class="number">0</span>].x) / <span class="number">2</span>,</span><br><span class="line">        <span class="built_in">Math</span>.abs(e.corners[<span class="number">3</span>].y - e.corners[<span class="number">2</span>].y) / <span class="number">2</span>,</span><br><span class="line">        <span class="number">0</span>,</span><br><span class="line">        <span class="number">0</span>,</span><br><span class="line">        <span class="built_in">Math</span>.PI * <span class="number">2</span></span><br><span class="line">      );</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123; <span class="comment">// 其他</span></span><br><span class="line">      ctx.beginPath();</span><br><span class="line">      ctx.moveTo(e.corners[<span class="number">0</span>].x, e.corners[<span class="number">0</span>].y);</span><br><span class="line">      e.corners.forEach(<span class="function">(<span class="params">p</span>) =&gt;</span> ctx.lineTo(p.x, p.y));</span><br><span class="line">    &#125;</span><br><span class="line">    ctx.stroke();</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">// 正在繪製的筆跡</span></span><br><span class="line">  ctx.strokeStyle = <span class="string">&quot;pink&quot;</span>;</span><br><span class="line">  <span class="keyword">if</span> (lineCache.length &gt; <span class="number">1</span>) &#123;</span><br><span class="line">    ctx.beginPath();</span><br><span class="line">    ctx.moveTo(lineCache[<span class="number">0</span>].x, lineCache[<span class="number">0</span>].y);</span><br><span class="line">    lineCache.forEach(<span class="function">(<span class="params">p</span>) =&gt;</span> &#123;</span><br><span class="line">      ctx.lineTo(p.x, p.y);</span><br><span class="line">    &#125;);</span><br><span class="line">    ctx.stroke();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 沒有任何筆跡</span></span><br><span class="line">  <span class="keyword">if</span> (lineCache.length + drawCache.length == <span class="number">0</span>)</span><br><span class="line">    ctx.fillText(</span><br><span class="line">      <span class="string">&quot;Draw Something Here.&quot;</span>,</span><br><span class="line">      canvas.width * <span class="number">0.4</span>,</span><br><span class="line">      canvas.height * <span class="number">0.45</span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Javascript</category>
      </categories>
      <tags>
        <tag>Javascript</tag>
        <tag>Web</tag>
        <tag>HTML5 Canvas</tag>
        <tag>Shape recognition</tag>
      </tags>
  </entry>
  <entry>
    <title>透過Pointer events偵測多點觸控</title>
    <url>/2021/10/22/js-zoom-by-pointer/</url>
    <content><![CDATA[<p>在多平台的時代，瀏覽器的輸入事件也越來越多樣化，從早期只有滑鼠可以點擊畫面，到現在有了觸控、觸控筆，於是Pointer events誕生了，它不僅保留了Mouse events的常見屬性，還多了可以追蹤各種類型指針事件的功能，使程式碼可以相容各種不同類型的裝置。</p>
<p>Pointer events不像Touch events一樣，Pointer events並沒有TouchesList，沒辦法輕易得知目前有幾的觸碰點在畫面上，所以如果要進行縮放這種需要兩隻手指的動作，就需要多寫點程式碼來判斷了，今天就來記錄一下如何用一個事件只能記錄一個觸碰點的Pointer events來偵測多點觸控～</p>
<h3 id="先來個成果時間"><a href="#先來個成果時間" class="headerlink" title="先來個成果時間"></a>先來個成果時間</h3><p class="codepen" data-height="300" data-default-tab="result" data-slug-hash="VwzmQXJ" data-preview="true" data-editable="true" data-user="cailirl980519" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
  <span>See the Pen <a class="link"   href="https://codepen.io/cailirl980519/pen/VwzmQXJ" >
  pointer-events<i class="fas fa-external-link-alt"></i></a> by cailirl980519 (<a class="link"   href="https://codepen.io/cailirl980519" >@cailirl980519<i class="fas fa-external-link-alt"></i></a>)
  on <a class="link"   href="https://codepen.io" >CodePen<i class="fas fa-external-link-alt"></i></a>.</span>
</p>
<script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script>

<h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><p>一開始，我們先將需要偵測的物件加入事件偵測</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> t = <span class="built_in">document</span>.getElementById(<span class="string">&quot;target&quot;</span>)</span><br><span class="line">t.addEventListener(<span class="string">&#x27;pointerdown&#x27;</span>	, zoomHandler, <span class="literal">false</span>)</span><br><span class="line">t.addEventListener(<span class="string">&#x27;pointermove&#x27;</span>	, zoomHandler, <span class="literal">false</span>)</span><br><span class="line">t.addEventListener(<span class="string">&#x27;pointerup&#x27;</span>		, zoomHandler, <span class="literal">false</span>)</span><br><span class="line">t.addEventListener(<span class="string">&#x27;pointercancel&#x27;</span>	, zoomHandler, <span class="literal">false</span>)</span><br><span class="line">t.addEventListener(<span class="string">&#x27;pointerout&#x27;</span>		, zoomHandler, <span class="literal">false</span>)</span><br><span class="line">t.addEventListener(<span class="string">&#x27;pointerleave&#x27;</span>	, zoomHandler, <span class="literal">false</span>)</span><br></pre></td></tr></table></figure>

<p>接下來將每個事件要做的動作加入<code>zoomHandler</code>：</p>
<ul>
<li>pointerdown: 將觸碰點加入<code>evCache</code></li>
<li>pointermove: 找到移動的點並更新至<code>evCache</code></li>
<li>pointerup, pointercancel, pointerout, pointerleave: 將離開的點從<code>evChache</code>中刪除</li>
</ul>
<p>最後判斷畫面上觸碰點的數量，隨著數量的不同，變更目標背景的顏色，用Pointer events偵測多點觸控就這樣完成了～</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> evCache = <span class="keyword">new</span> <span class="built_in">Array</span>() <span class="comment">// 紀錄正觸碰的點</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">zoomHandler</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    e.preventDefault()</span><br><span class="line">    <span class="keyword">if</span> (e.type == <span class="string">&quot;pointerdown&quot;</span>) &#123; <span class="comment">// 將觸碰點加入`evCache`</span></span><br><span class="line">        evCache.push(e)</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.type == <span class="string">&quot;pointermove&quot;</span>) &#123; <span class="comment">// 找到移動的點並更新至`evCache`</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; evCache.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (e.pointerId == evCache[i].pointerId) &#123;</span><br><span class="line">                evCache[i] = e</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; evCache.length; i++) &#123; <span class="comment">// 將離開的點從`evChache`中刪除</span></span><br><span class="line">            <span class="keyword">if</span> (evCache[i].pointerId == e.pointerId) &#123;</span><br><span class="line">                evCache.splice(i, <span class="number">1</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">switch</span> (evCache.length) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            $(t).css(<span class="string">&quot;background-color&quot;</span>, <span class="string">&quot;transparent&quot;</span>)</span><br><span class="line">            $(<span class="string">&quot;#text&quot;</span>).html(<span class="string">&quot;Touch Here&quot;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            $(t).css(<span class="string">&quot;background-color&quot;</span>, <span class="string">&quot;lightgray&quot;</span>)</span><br><span class="line">            $(<span class="string">&quot;#text&quot;</span>).html(<span class="string">&quot;1 Touches&quot;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            $(t).css(<span class="string">&quot;background-color&quot;</span>, <span class="string">&quot;lightblue&quot;</span>)</span><br><span class="line">            $(<span class="string">&quot;#text&quot;</span>).html(<span class="string">&quot;2 Touches&quot;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            $(t).css(<span class="string">&quot;background-color&quot;</span>, <span class="string">&quot;pink&quot;</span>)</span><br><span class="line">            $(<span class="string">&quot;#text&quot;</span>).html(<span class="string">&quot;3 Touches&quot;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Javascript</category>
      </categories>
      <tags>
        <tag>Javascript</tag>
        <tag>Web</tag>
        <tag>Pointer events</tag>
      </tags>
  </entry>
  <entry>
    <title>Flutter的Windows套件 - webview_windows (2)</title>
    <url>/2021/10/13/flutter-webview-windows-2/</url>
    <content><![CDATA[<p>前幾天介紹了webview_windows的<a href="https://cailirl980519.github.io/2021/10/07/flutter-webview-windows/">基本使用</a>，我們已經學會了如何在Flutter App裡開啟網頁，但通常如果是開啟自己的網頁的話，可能有些Web功能就需要跟Flutter端溝通。<br>今天要來學習如何運用<a class="link"   href="https://pub.dev/packages/webview_windows" >webview_windows<i class="fas fa-external-link-alt"></i></a>來接收網頁的訊息及從Flutter傳訊息至Web端。</p>
<h3 id="前置作業"><a href="#前置作業" class="headerlink" title="前置作業"></a>前置作業</h3><ul>
<li>引入<code>webview_windows</code>套件</li>
<li>創建一個需要溝通的html檔<blockquote>
<p>以下是這次範例所使用的html</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">title</span>&gt;</span>WebView Sample for Windows<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;text-center&quot;</span>&gt;</span>Communicate With Flutter<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/@lottiefiles/lottie-player@latest/dist/lottie-player.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">lottie-player</span> <span class="attr">class</span>=<span class="string">&quot;mx-auto&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://assets1.lottiefiles.com/packages/lf20_zwykwl1i.json&quot;</span>  <span class="attr">background</span>=<span class="string">&quot;transparent&quot;</span>  <span class="attr">speed</span>=<span class="string">&quot;1&quot;</span>  <span class="attr">style</span>=<span class="string">&quot;width: 300px; height: 300px;&quot;</span>  <span class="attr">loop</span> <span class="attr">autoplay</span>&gt;</span><span class="tag">&lt;/<span class="name">lottie-player</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row justify-content-around&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-5&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Example 1.<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;web_message&quot;</span> <span class="attr">class</span>=<span class="string">&quot;w-100 mb-2&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Hi! I&#x27;m web message.&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;sendMessage()&quot;</span>&gt;</span>Send Message to Flutter<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-5&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Example 2.<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>Message from Dart:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">&quot;flutter&quot;</span> <span class="attr">class</span>=<span class="string">&quot;w-100&quot;</span> <span class="attr">disabled</span>=<span class="string">&quot;true&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 30vw;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="Web-to-Flutter-將Web訊息傳至Flutter"><a href="#Web-to-Flutter-將Web訊息傳至Flutter" class="headerlink" title="Web to Flutter - 將Web訊息傳至Flutter"></a>Web to Flutter - 將Web訊息傳至Flutter</h3></li>
</ul>
<h4 id="Web端"><a href="#Web端" class="headerlink" title="Web端"></a>Web端</h4><p>在JavaScipt內加入function <code>sendMessage()</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> message = <span class="built_in">document</span>.getElementById(<span class="string">&quot;web_message&quot;</span>) <span class="comment">// 輸入文字的input元件</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sendMessage</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 若無Flutter通道則不動作</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">window</span>.chrome === <span class="literal">undefined</span> &amp;&amp; <span class="built_in">window</span>.chrome.webview === <span class="literal">undefined</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="comment">// 將訊息以json格式傳送</span></span><br><span class="line">    <span class="built_in">window</span>.chrome.webview.postMessage(&#123;<span class="string">&quot;message&quot;</span>: message.value&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Flutter端"><a href="#Flutter端" class="headerlink" title="Flutter端"></a>Flutter端</h4><p>先宣告<code>WebviewController</code></p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:webview_windows/webview_windows.dart&#x27;</span> <span class="keyword">as</span> wweb;</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> _winController = wweb.WebviewController();</span><br></pre></td></tr></table></figure>

<p>並寫一個<code>initWindowsWebView()</code>的function來初始Webview，並在Webview載入完成時監聽Web端訊息</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line">Future&lt;<span class="keyword">void</span>&gt; initWindowsWebView() <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!Platform.isWindows) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">await</span> _winController.initialize();</span><br><span class="line">    <span class="built_in">String</span> data = <span class="keyword">await</span> rootBundle.loadString(<span class="string">&quot;assets/webpages/index.html&quot;</span>);</span><br><span class="line">    <span class="keyword">await</span> _winController.loadStringContent(data);</span><br><span class="line">    <span class="keyword">while</span> (!_winController.value.isInitialized) &#123;</span><br><span class="line">        sleep(<span class="built_in">Duration</span>(milliseconds: <span class="number">200</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    setState(() &#123;&#125;);</span><br><span class="line">    <span class="comment">// 等待Webview載入完成</span></span><br><span class="line">    <span class="keyword">await</span> <span class="keyword">for</span> (wweb.LoadingState value <span class="keyword">in</span> _winController.loadingState) &#123;</span><br><span class="line">        <span class="keyword">if</span> (value.toString() == <span class="string">&quot;LoadingState.navigationCompleted&quot;</span>) &#123;</span><br><span class="line">            <span class="comment">// 監聽Web端訊息</span></span><br><span class="line">            _winController.webMessage.listen((args) <span class="keyword">async</span> &#123;</span><br><span class="line">                <span class="comment">// args為接收到的訊息(e.g. &#123;&quot;message&quot;: &quot;Hi! I&#x27;m web message.&quot;&#125;)</span></span><br><span class="line">                <span class="comment">// 收到訊息動作（彈出對話框）</span></span><br><span class="line">                showDialog(</span><br><span class="line">                    context: context,</span><br><span class="line">                    builder: (context) &#123;</span><br><span class="line">                        <span class="keyword">return</span> AlertDialog(</span><br><span class="line">                            title: Text(<span class="string">&quot;Message from Web&quot;</span>),</span><br><span class="line">                            content: Text(<span class="string">&quot;<span class="subst">$&#123;args[<span class="string">&quot;message&quot;</span>]&#125;</span>&quot;</span>),</span><br><span class="line">                        );</span><br><span class="line">                    &#125;,</span><br><span class="line">                );</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>最後在<code>initState()</code>時呼叫<code>initWindowsWebView()</code>，並在離開時關閉<code>WebviewController</code></p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="meta">@override</span></span><br><span class="line"><span class="keyword">void</span> initState() &#123;</span><br><span class="line">    <span class="keyword">super</span>.initState();</span><br><span class="line">    initWindowsWebView();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@override</span></span><br><span class="line"><span class="keyword">void</span> dispose() &#123;</span><br><span class="line">    <span class="keyword">super</span>.dispose();</span><br><span class="line">    _winController.dispose(); <span class="comment">// 增加這行來關閉WebviewController</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Flutter-to-Web-將Flutter訊息傳至Web"><a href="#Flutter-to-Web-將Flutter訊息傳至Web" class="headerlink" title="Flutter to Web - 將Flutter訊息傳至Web"></a>Flutter to Web - 將Flutter訊息傳至Web</h3><h4 id="Web端-1"><a href="#Web端-1" class="headerlink" title="Web端"></a>Web端</h4><p>在JavaScipt加入監聽Flutter訊息的Code</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> textarea = <span class="built_in">document</span>.getElementById(<span class="string">&quot;flutter&quot;</span>) <span class="comment">// 顯示Flutter訊息的textarea元件</span></span><br><span class="line"><span class="comment">// 若無Flutter通道則不監聽</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">window</span>.chrome !== <span class="literal">undefined</span> &amp;&amp; <span class="built_in">window</span>.chrome.webview !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">    <span class="built_in">window</span>.chrome.webview.addEventListener(<span class="string">&#x27;message&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 若收到到訊息動作</span></span><br><span class="line">        textarea.innerHTML += (e.data.message + <span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="Flutter端-1"><a href="#Flutter端-1" class="headerlink" title="Flutter端"></a>Flutter端</h4><p>宣告一個<code>TextEditingController</code>來輸入訊息，並在離開時關閉</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">final</span> _textController = TextEditingController(text: <span class="string">&quot;Hi! I&#x27;m flutter message.&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">@override</span></span><br><span class="line"><span class="keyword">void</span> dispose() &#123;</span><br><span class="line">    <span class="keyword">super</span>.dispose();</span><br><span class="line">    _textController.dispose(); <span class="comment">// 增加這行來關閉TextEditingController</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>新增一個<code>IconButton</code>元件來傳送訊息至Web</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line">IconButton(</span><br><span class="line">    icon: Icon(Icons.send),</span><br><span class="line">    onPressed: () &#123;</span><br><span class="line">        showDialog(</span><br><span class="line">            context: context,</span><br><span class="line">            builder: (context) &#123;</span><br><span class="line">                <span class="keyword">return</span> AlertDialog(</span><br><span class="line">                    title: Text(<span class="string">&quot;Send Message to Web&quot;</span>),</span><br><span class="line">                    content: TextField(</span><br><span class="line">                        controller: _textController,</span><br><span class="line">                    ),</span><br><span class="line">                    actions: [</span><br><span class="line">                        TextButton(</span><br><span class="line">                            child: Text(<span class="string">&quot;Send&quot;</span>),</span><br><span class="line">                            onPressed: () &#123;</span><br><span class="line">                                <span class="comment">// 將欲傳送至Web的訊息宣告為data</span></span><br><span class="line">                                <span class="built_in">Map</span> data = &#123;<span class="string">&quot;message&quot;</span>: _textController.text&#125;;</span><br><span class="line">                                <span class="comment">// 將data傳送至Web</span></span><br><span class="line">                                _winController.postWebMessage(<span class="string">&#x27;<span class="subst">$&#123;jsonEncode(data)&#125;</span>&#x27;</span>);</span><br><span class="line">                                Navigator.of(context).pop();</span><br><span class="line">                            &#125;,</span><br><span class="line">                        ),</span><br><span class="line">                    ],</span><br><span class="line">                );</span><br><span class="line">            &#125;,</span><br><span class="line">        );</span><br><span class="line">    &#125;,</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h3 id="大坑1-UTF8編碼問題"><a href="#大坑1-UTF8編碼問題" class="headerlink" title="大坑1 - UTF8編碼問題"></a>大坑1 - UTF8編碼問題</h3><p>在webview_windows 0.0.8（目前最新）這個版本中，尚未對UTF8編碼做特殊處理，也就是如果在溝通上使用中文字的話則會出現問題，所以我就研究了一下套件源碼，經歷了千辛萬苦(?，終於讓套件用中文溝通了～</p>
<p>首先，我們先進入webview_windows的檔案位置，通常會在Flutter SDK位置下的資料夾內<br><em>e.g. …/flutter/.pub-cache/hosted/pub.dartlang.org/webview_windows-0.0.8/windows/</em></p>
<p>接著，找到<code>webview_bridge.cc</code>檔案並修改裡面的<code>towstring</code> function</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">std::wstring <span class="title">towstring</span><span class="params">(std::string_view str)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (str.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">    <span class="keyword">return</span> std::<span class="built_in">wstring</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">int</span> utf16Length = ::<span class="built_in">MultiByteToWideChar</span>(CP_UTF8, MB_ERR_INVALID_CHARS, str.<span class="built_in">data</span>(), <span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(str.<span class="built_in">length</span>()), <span class="literal">nullptr</span>, <span class="number">0</span>);</span><br><span class="line">  <span class="keyword">if</span> (utf16Length == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> std::<span class="built_in">wstring</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  std::wstring utf16;</span><br><span class="line">  utf16.<span class="built_in">resize</span>(utf16Length);</span><br><span class="line">  <span class="keyword">int</span> convertLength = ::<span class="built_in">MultiByteToWideChar</span>(CP_UTF8, MB_ERR_INVALID_CHARS, str.<span class="built_in">data</span>(), <span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(str.<span class="built_in">length</span>()), utf16.<span class="built_in">data</span>(), utf16Length);</span><br><span class="line">  <span class="keyword">if</span> (convertLength == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> std::<span class="built_in">wstring</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> utf16;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>修改後，此function會將傳至Web的值變為正確的UTF8編碼</p>
</blockquote>
<p>接下來，我們再來修改<code>webview.cc</code>中的<code>webview_-&gt;add_WebMessageReceived</code></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">webview_-&gt;<span class="built_in">add_WebMessageReceived</span>(</span><br><span class="line">  Callback&lt;ICoreWebView2WebMessageReceivedEventHandler&gt;(</span><br><span class="line">      [<span class="keyword">this</span>](ICoreWebView2* sender,</span><br><span class="line">              ICoreWebView2WebMessageReceivedEventArgs* args) -&gt; HRESULT &#123;</span><br><span class="line">        wil::unique_cotaskmem_string wmessage;</span><br><span class="line">        <span class="keyword">if</span> (web_message_received_callback_ &amp;&amp;</span><br><span class="line">            args-&gt;<span class="built_in">get_WebMessageAsJson</span>(&amp;wmessage) == S_OK) &#123;</span><br><span class="line">          <span class="keyword">const</span> std::string message =  <span class="built_in">CW2A</span>(wmessage.<span class="built_in">get</span>(), CP_UTF8); <span class="comment">// 加入CP_UTF8指定UTF8編碼</span></span><br><span class="line">          <span class="built_in">web_message_received_callback_</span>(message);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> S_OK;</span><br><span class="line">      &#125;)</span><br><span class="line">      .<span class="built_in">Get</span>(),</span><br><span class="line">  &amp;event_registrations_.web_message_received_token_);</span><br></pre></td></tr></table></figure>
<blockquote>
<p>修改後，Web接收到的值經過C++後中文就不會變亂碼了</p>
</blockquote>
<h3 id="Bonus-回傳Web的console-log訊息至Flutter端"><a href="#Bonus-回傳Web的console-log訊息至Flutter端" class="headerlink" title="Bonus - 回傳Web的console.log訊息至Flutter端"></a>Bonus - 回傳Web的console.log訊息至Flutter端</h3><p>再測試時，常常需要用到<code>console.log</code>來確認程式碼有沒有問題，所以我們就可以直接劫持console.log訊息，將他傳至Flutter端。</p>
<h4 id="Web端-2"><a href="#Web端-2" class="headerlink" title="Web端"></a>Web端</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log = <span class="function"><span class="keyword">function</span> (<span class="params">txt</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> messages = []</span><br><span class="line">    <span class="comment">// arguments為console.log輸出訊息</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="built_in">arguments</span>.length; i++) &#123;</span><br><span class="line">        messages.push(<span class="built_in">arguments</span>[i]) <span class="comment">// 將訊息存至messages</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 將messages傳至Flutter端</span></span><br><span class="line">    <span class="built_in">window</span>.chrome.webview.postMessage(</span><br><span class="line">        &#123; </span><br><span class="line">            <span class="string">&quot;method&quot;</span>: <span class="string">&quot;console&quot;</span>, <span class="comment">// 宣告來源，方便Flutter端判斷</span></span><br><span class="line">            <span class="string">&quot;message&quot;</span>: messages.join(<span class="string">&quot; &quot;</span>) </span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>console.log</code>被劫持後就不會印在主控台(Console)上了哦！畢竟它被綁架了麻～</p>
</blockquote>
<h4 id="Flutter端-2"><a href="#Flutter端-2" class="headerlink" title="Flutter端"></a>Flutter端</h4><p>我們一樣在<code>initWindowsWebView()</code>內監聽，只是在多加判斷它是不是console的訊息，如果是的話則輸出至Flutter Console。</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">await</span> <span class="keyword">for</span> (wweb.LoadingState value <span class="keyword">in</span> _winController.loadingState) &#123;</span><br><span class="line">    <span class="keyword">if</span> (value.toString() == <span class="string">&quot;LoadingState.navigationCompleted&quot;</span>) &#123;</span><br><span class="line">        <span class="comment">// 監聽Web端訊息</span></span><br><span class="line">        _winController.webMessage.listen((args) <span class="keyword">async</span> &#123;</span><br><span class="line">            <span class="comment">// args為接收到的訊息(e.g. &#123;&quot;message&quot;: &quot;Hi! I&#x27;m web message.&quot;&#125;)</span></span><br><span class="line">            <span class="keyword">if</span> (args[<span class="string">&quot;method&quot;</span>] == <span class="string">&quot;console&quot;</span>) &#123;</span><br><span class="line">                <span class="comment">// 若為console訊息動作</span></span><br><span class="line">                <span class="built_in">print</span>(args[<span class="string">&quot;message&quot;</span>]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 收到訊息動作（彈出對話框）</span></span><br><span class="line">                showDialog(</span><br><span class="line">                    context: context,</span><br><span class="line">                    builder: (context) &#123;</span><br><span class="line">                        <span class="keyword">return</span> AlertDialog(</span><br><span class="line">                            title: Text(<span class="string">&quot;Message from Web&quot;</span>),</span><br><span class="line">                            content: Text(<span class="string">&quot;<span class="subst">$&#123;args[<span class="string">&quot;message&quot;</span>]&#125;</span>&quot;</span>),</span><br><span class="line">                        );</span><br><span class="line">                    &#125;,</span><br><span class="line">                );</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="感動到哭的成果時間"><a href="#感動到哭的成果時間" class="headerlink" title="感動到哭的成果時間"></a>感動到哭的成果時間</h3><script src="https://unpkg.com/@lottiefiles/lottie-player@latest/dist/lottie-player.js"></script>
<p><lottie-player src="https://assets9.lottiefiles.com/packages/lf20_xkbhgbld.json"  background="transparent"  speed="1"  style="width: 300px; height: 300px;"  loop autoplay></lottie-player></p>
<p><em>忘記備份成果了，等有Windows電腦後再回來放…</em></p>
<h3 id="Full-Code"><a href="#Full-Code" class="headerlink" title="Full Code"></a>Full Code</h3><blockquote>
<p>完整程式碼請至<a class="link"   href="https://github.com/cailirl980519/sample_windows_webview" >sample_windows_webview<i class="fas fa-external-link-alt"></i></a></p>
</blockquote>
<h4 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">title</span>&gt;</span>WebView Sample for Windows<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;text-center&quot;</span>&gt;</span>Communicate With Flutter<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/@lottiefiles/lottie-player@latest/dist/lottie-player.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">lottie-player</span> <span class="attr">class</span>=<span class="string">&quot;mx-auto&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://assets1.lottiefiles.com/packages/lf20_zwykwl1i.json&quot;</span>  <span class="attr">background</span>=<span class="string">&quot;transparent&quot;</span>  <span class="attr">speed</span>=<span class="string">&quot;1&quot;</span>  <span class="attr">style</span>=<span class="string">&quot;width: 300px; height: 300px;&quot;</span>  <span class="attr">loop</span> <span class="attr">autoplay</span>&gt;</span><span class="tag">&lt;/<span class="name">lottie-player</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row justify-content-around&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-5&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Example 1.<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;web_message&quot;</span> <span class="attr">class</span>=<span class="string">&quot;w-100 mb-2&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Hi! I&#x27;m web message.&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;sendMessage()&quot;</span>&gt;</span>Send Message to Flutter<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-5&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Example 2.<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>Message from Dart:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">&quot;flutter&quot;</span> <span class="attr">class</span>=<span class="string">&quot;w-100&quot;</span> <span class="attr">disabled</span>=<span class="string">&quot;true&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 30vw;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> message = <span class="built_in">document</span>.getElementById(<span class="string">&quot;web_message&quot;</span>)</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">sendMessage</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (<span class="built_in">window</span>.chrome === <span class="literal">undefined</span> &amp;&amp; <span class="built_in">window</span>.chrome.webview === <span class="literal">undefined</span>)</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.chrome.webview.postMessage(&#123;<span class="string">&quot;message&quot;</span>: message.value&#125;)</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> textarea = <span class="built_in">document</span>.getElementById(<span class="string">&quot;flutter&quot;</span>)</span></span><br><span class="line"><span class="javascript">    <span class="keyword">if</span> (<span class="built_in">window</span>.chrome !== <span class="literal">undefined</span> &amp;&amp; <span class="built_in">window</span>.chrome.webview !== <span class="literal">undefined</span>) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.chrome.webview.addEventListener(<span class="string">&#x27;message&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            textarea.innerHTML += (e.data.message + <span class="string">&quot;\n&quot;</span>)</span></span><br><span class="line"><span class="javascript">        &#125;)</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="index-html-1"><a href="#index-html-1" class="headerlink" title="index.html"></a>index.html</h4><figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;dart:convert&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;dart:io&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter/material.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter/services.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:lottie/lottie.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:webview_windows/webview_windows.dart&#x27;</span> <span class="keyword">as</span> wweb;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WebView2Page</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> WebView2Page(&#123;Key? key&#125;) : <span class="keyword">super</span>(key: key);</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  _WebView2PageState createState() =&gt; _WebView2PageState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_WebView2PageState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">WebView2Page</span>&gt; </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> _winController = wweb.WebviewController();</span><br><span class="line">  <span class="keyword">final</span> _textController =</span><br><span class="line">      TextEditingController(text: <span class="string">&quot;Hi! I&#x27;m flutter message.&quot;</span>);</span><br><span class="line"></span><br><span class="line">  Future&lt;<span class="keyword">void</span>&gt; initWindowsWebView() <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!Platform.isWindows) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">await</span> _winController.initialize();</span><br><span class="line">    <span class="built_in">String</span> data = <span class="keyword">await</span> rootBundle.loadString(<span class="string">&quot;assets/webpages/index.html&quot;</span>);</span><br><span class="line">    <span class="keyword">await</span> _winController.loadStringContent(data);</span><br><span class="line">    <span class="keyword">while</span> (!_winController.value.isInitialized) &#123;</span><br><span class="line">      sleep(<span class="built_in">Duration</span>(milliseconds: <span class="number">200</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    setState(() &#123;&#125;);</span><br><span class="line">    <span class="keyword">await</span> <span class="keyword">for</span> (wweb.LoadingState value <span class="keyword">in</span> _winController.loadingState) &#123;</span><br><span class="line">      <span class="keyword">if</span> (value.toString() == <span class="string">&quot;LoadingState.navigationCompleted&quot;</span>) &#123;</span><br><span class="line">        _winController.webMessage.listen((args) <span class="keyword">async</span> &#123;</span><br><span class="line">          showDialog(</span><br><span class="line">            context: context,</span><br><span class="line">            builder: (context) &#123;</span><br><span class="line">              <span class="keyword">return</span> AlertDialog(</span><br><span class="line">                title: Text(<span class="string">&quot;Message from Web&quot;</span>),</span><br><span class="line">                content: Text(<span class="string">&quot;<span class="subst">$&#123;args[<span class="string">&quot;message&quot;</span>]&#125;</span>&quot;</span>),</span><br><span class="line">              );</span><br><span class="line">            &#125;,</span><br><span class="line">          );</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  Widget webView() &#123;</span><br><span class="line">    <span class="keyword">if</span> (!Platform.isWindows)</span><br><span class="line">      <span class="keyword">return</span> Center(</span><br><span class="line">        child: Text(<span class="string">&quot;not Support&quot;</span>),</span><br><span class="line">      );</span><br><span class="line">    <span class="keyword">if</span> (!_winController.value.isInitialized)</span><br><span class="line">      <span class="keyword">return</span> Center(</span><br><span class="line">        child: Lottie.network(</span><br><span class="line">            <span class="string">&quot;https://assets9.lottiefiles.com/datafiles/bEYvzB8QfV3EM9a/data.json&quot;</span>),</span><br><span class="line">      );</span><br><span class="line">    <span class="keyword">return</span> Container(</span><br><span class="line">      child: wweb.Webview(_winController),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> initState() &#123;</span><br><span class="line">    <span class="keyword">super</span>.initState();</span><br><span class="line">    initWindowsWebView();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> dispose() &#123;</span><br><span class="line">    <span class="keyword">super</span>.dispose();</span><br><span class="line">    _winController.dispose();</span><br><span class="line">    _textController.dispose();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Scaffold(</span><br><span class="line">      appBar: AppBar(</span><br><span class="line">        title: Text(<span class="string">&quot;Sample2&quot;</span>),</span><br><span class="line">        actions: [</span><br><span class="line">          IconButton(</span><br><span class="line">            icon: Icon(Icons.send),</span><br><span class="line">            onPressed: () &#123;</span><br><span class="line">              showDialog(</span><br><span class="line">                context: context,</span><br><span class="line">                builder: (context) &#123;</span><br><span class="line">                  <span class="keyword">return</span> AlertDialog(</span><br><span class="line">                    title: Text(<span class="string">&quot;Send Message to Web&quot;</span>),</span><br><span class="line">                    content: TextField(</span><br><span class="line">                      controller: _textController,</span><br><span class="line">                    ),</span><br><span class="line">                    actions: [</span><br><span class="line">                      TextButton(</span><br><span class="line">                        child: Text(<span class="string">&quot;Send&quot;</span>),</span><br><span class="line">                        onPressed: () &#123;</span><br><span class="line">                          <span class="built_in">Map</span> data = &#123;</span><br><span class="line">                            <span class="string">&quot;message&quot;</span>: _textController.text,</span><br><span class="line">                          &#125;;</span><br><span class="line">                          <span class="built_in">print</span>(data);</span><br><span class="line">                          _winController.postWebMessage(<span class="string">&#x27;<span class="subst">$&#123;jsonEncode(data)&#125;</span>&#x27;</span>);</span><br><span class="line">                          Navigator.of(context).pop();</span><br><span class="line">                        &#125;,</span><br><span class="line">                      ),</span><br><span class="line">                    ],</span><br><span class="line">                  );</span><br><span class="line">                &#125;,</span><br><span class="line">              );</span><br><span class="line">            &#125;,</span><br><span class="line">          )</span><br><span class="line">        ],</span><br><span class="line">      ),</span><br><span class="line">      body: webView(),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>Flutter</tag>
        <tag>Dart</tag>
        <tag>Windows</tag>
        <tag>Edge Webview2</tag>
      </tags>
  </entry>
  <entry>
    <title>新手上路 | Excel VBA</title>
    <url>/2021/12/17/vba-begin/</url>
    <content><![CDATA[<h3 id="開啟VBA"><a href="#開啟VBA" class="headerlink" title="開啟VBA"></a>開啟VBA</h3><p>點擊工作表右鍵 &gt; 檢視程式碼，即可看到編輯VBA的視窗<br><img src="https://imgur.com/1s7J9Ql.png" alt="vba-begin"><br><img alt="vba-begin" src="https://imgur.com/5YSI1h8.png" style="width: 80%;"></p>
<h3 id="開啟開發人員工作列"><a href="#開啟開發人員工作列" class="headerlink" title="開啟開發人員工作列"></a>開啟開發人員工作列</h3><ul>
<li>Windows: 檔案 &gt; 選項 &gt; 自訂功能區 &gt; 勾選開發人員</li>
<li>Mac: Excel &gt; 喜好設定 &gt; 功能區和工具列 &gt; 勾選開發人員<br><img src="https://imgur.com/VTBQgK7.png" alt="vba-begin"></li>
</ul>
<h3 id="使用按鈕複製選取儲存格文字"><a href="#使用按鈕複製選取儲存格文字" class="headerlink" title="使用按鈕複製選取儲存格文字"></a>使用按鈕複製選取儲存格文字</h3><h4 id="STEP-1-插入按鈕"><a href="#STEP-1-插入按鈕" class="headerlink" title="STEP 1 插入按鈕"></a>STEP 1 插入按鈕</h4><ul>
<li>Windows: 開發人員 &gt; 插入 &gt; 表單控制項中的按鈕</li>
<li>Mac: 開發人員 &gt; 按鈕<br>接著就在工作表中放置按鈕<br><img src="https://imgur.com/Jnyyw9z.png" alt="vba-begin"><blockquote>
<p>若要移動按鈕位置或改變大小，Windows需點擊開發人員中的設計模式; Mac則需右鍵點擊按鈕</p>
</blockquote>
</li>
</ul>
<h4 id="STEP-2-指定巨集"><a href="#STEP-2-指定巨集" class="headerlink" title="STEP 2 指定巨集"></a>STEP 2 指定巨集</h4><p>新增一個巨集，當按鈕按下後會呼叫<br><img src="https://imgur.com/niJHjvK.png" alt="vba-begin"><br>新增完成即會跳到巨集編輯器<br><img alt="vba-begin" src="https://imgur.com/bCf7vGl.png" style="width: 80%;"></p>
<h4 id="STEP3-編輯巨集功能"><a href="#STEP3-編輯巨集功能" class="headerlink" title="STEP3 編輯巨集功能"></a>STEP3 編輯巨集功能</h4><p>接著我們就可以開始編寫複製功能</p>
<ul>
<li>Selection.Address: 當前選取的儲存格地址</li>
<li>MsgBox: 提示框<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Sub</span> Btn()</span><br><span class="line">    <span class="comment">&#x27;選取儲存格的數量</span></span><br><span class="line">    <span class="keyword">If</span> Range(Selection.Address).Count = <span class="number">1</span> <span class="keyword">Then</span></span><br><span class="line">        <span class="comment">&#x27;將文字丟進剪貼簿</span></span><br><span class="line">        <span class="keyword">Dim</span> obj <span class="keyword">As</span> <span class="built_in">New</span> DataObject</span><br><span class="line">        obj.SetText Range(Selection.Address).value</span><br><span class="line">        obj.PutInClipboard</span><br><span class="line">        MsgBox <span class="string">&quot;已複製：&quot;</span> &amp; obj.GetText</span><br><span class="line">    <span class="keyword">Else</span></span><br><span class="line">        MsgBox <span class="string">&quot;無法複製多個儲存格&quot;</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="STEP4-點擊按鈕"><a href="#STEP4-點擊按鈕" class="headerlink" title="STEP4 點擊按鈕"></a>STEP4 點擊按鈕</h4><p>寫完程式碼後就可以開始測試效果了～<br><img src="https://imgur.com/LNDpGpA.gif" alt="vba-begin"></p>
<h3 id="儲存"><a href="#儲存" class="headerlink" title="儲存"></a>儲存</h3><p>儲存有巨集的Excel時必須存成<strong>啟用巨集的活頁簿（<code>.*xlsm</code>）</strong>，若存為一般的<code>.*xls</code>是無法啟用巨集的哦～</p>
]]></content>
      <categories>
        <category>Excel VBA</category>
      </categories>
      <tags>
        <tag>Excel</tag>
        <tag>VBA</tag>
      </tags>
  </entry>
  <entry>
    <title>顏色選擇器 Color Dialog | Excel VBA</title>
    <url>/2021/12/17/vba-color-picker/</url>
    <content><![CDATA[<h3 id="使用VBA開啟顏色選擇器"><a href="#使用VBA開啟顏色選擇器" class="headerlink" title="使用VBA開啟顏色選擇器"></a>使用VBA開啟顏色選擇器</h3><p><video autoplay muted loop src="https://imgur.com/B7Jvktz.mp4" type="video/mp4" style="width:100%"></video></p>
<h4 id="STEP-1-新增模組"><a href="#STEP-1-新增模組" class="headerlink" title="STEP 1 新增模組"></a>STEP 1 新增模組</h4><p>於VBA Project點擊右鍵插入模組並命名為ColorDialog</p>
<blockquote>
<p>模組為全域性質，在活頁簿中的所有工作表皆可呼叫</p>
</blockquote>
<p><img src="https://imgur.com/4v5uq1d.png" alt="vba-color-dialog"></p>
<h4 id="STEP-2-新增function-Show"><a href="#STEP-2-新增function-Show" class="headerlink" title="STEP 2 新增function Show()"></a>STEP 2 新增function <code>Show()</code></h4><p>新增完成後即可在左側模組的資料夾下看到，點擊兩下即可叫出視窗編輯，接著我們就可以在ColorDialog模組下加入<code>Show()</code>來開啟顏色選擇器</p>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="comment">&#x27;開啟顏色選擇對話框</span></span><br><span class="line"><span class="keyword">Public</span> <span class="keyword">Function</span> Show() <span class="keyword">As</span> <span class="type">Long</span> <span class="comment">&#x27;宣告回傳選中顏色值的型態</span></span><br><span class="line">    <span class="keyword">Dim</span> FullColorCode <span class="keyword">As</span> <span class="type">Long</span></span><br><span class="line">    <span class="comment">&#x27;如果有選擇並按確認</span></span><br><span class="line">    <span class="comment">&#x27;Application.Dialogs(xlDialogEditColor).Show(Alpha, R, G, B) &lt;-- 初始顏色</span></span><br><span class="line">    <span class="keyword">If</span> Application.Dialogs(xlDialogEditColor).Show(<span class="number">1</span>, <span class="number">84</span>, <span class="number">96</span>, <span class="number">164</span>) = <span class="literal">True</span> <span class="keyword">Then</span></span><br><span class="line">        FullColorCode = ActiveWorkbook.Colors(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    Show = FullColorCode <span class="comment">&#x27;回傳選中的顏色</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br></pre></td></tr></table></figure>
<img alt="vba-color-dialog" src="https://imgur.com/sSBjKPU.png" style="width: 80%">


<p>完成後便可以按下執行測試，就可以發現已經可以成功叫出選擇顏色的對話框了！<br><img alt="vba-color-dialog" src="https://imgur.com/iAaPvSP.png" style="width: 80%"></p>
<h4 id="STEP-3-關聯至工作表"><a href="#STEP-3-關聯至工作表" class="headerlink" title="STEP 3 關聯至工作表"></a>STEP 3 關聯至工作表</h4><p>於巨集編輯器左側展開Microsoft Excel物件，打開要關聯的工作表，新增一個<code>Worksheet_BeforeDoubleClick</code>，當點擊兩下儲存格時叫出顏色選擇器</p>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Worksheet_BeforeDoubleClick(<span class="keyword">ByVal</span> Target <span class="keyword">As</span> Range, Cancel <span class="keyword">As</span> <span class="type">Boolean</span>)</span><br><span class="line">    <span class="keyword">Dim</span> color <span class="keyword">As</span> <span class="type">Long</span> <span class="comment">&#x27;顏色</span></span><br><span class="line">    <span class="keyword">Dim</span> R, G, B <span class="keyword">As</span> <span class="type">Integer</span> <span class="comment">&#x27;RGB值</span></span><br><span class="line">    <span class="keyword">Dim</span> row <span class="keyword">As</span> <span class="type">Integer</span> <span class="comment">&#x27;列數</span></span><br><span class="line">    <span class="keyword">Dim</span> cell <span class="keyword">As</span> Range</span><br><span class="line">    <span class="comment">&#x27;呼叫Module ColorDialog中的Funciton Show</span></span><br><span class="line">    color = ColorDialog.Show</span><br><span class="line">    <span class="comment">&#x27;將color轉為RGB</span></span><br><span class="line">    R = color <span class="built_in">Mod</span> <span class="number">256</span></span><br><span class="line">    G = (color \ <span class="number">256</span>) <span class="built_in">Mod</span> <span class="number">256</span></span><br><span class="line">    B = color \ <span class="number">65536</span></span><br><span class="line">    <span class="comment">&#x27;獲取點擊列數</span></span><br><span class="line">    row = Target.row</span><br><span class="line">    <span class="comment">&#x27;將儲存格設為點擊列數的B欄</span></span><br><span class="line">    <span class="keyword">Set</span> cell = Cells(row, <span class="number">2</span>)</span><br><span class="line">    <span class="comment">&#x27;設置前一個儲存格背景色</span></span><br><span class="line">    cell.Previous.Interior.color = color</span><br><span class="line">    <span class="comment">&#x27;將轉換成HexColor的值放進儲存格</span></span><br><span class="line">    cell.value = Application.Dec2Hex(R, <span class="number">2</span>) + Application.Dec2Hex(G, <span class="number">2</span>) + Application.Dec2Hex(B, <span class="number">2</span>)</span><br><span class="line">    <span class="comment">&#x27;將轉換成RGB的值放進右邊儲存格</span></span><br><span class="line">    cell.<span class="keyword">Next</span>.value = R &amp; <span class="string">&quot;, &quot;</span> &amp; G &amp; <span class="string">&quot;, &quot;</span> &amp; B</span><br><span class="line">    <span class="comment">&#x27;設置右側儲存格邊框</span></span><br><span class="line">    <span class="keyword">With</span> cell.<span class="keyword">Next</span>.Borders(xlEdgeRight)</span><br><span class="line">        .LineStyle = xlContinous <span class="comment">&#x27;邊框樣式</span></span><br><span class="line">        .Weight = xlThick <span class="comment">&#x27;邊框粗細</span></span><br><span class="line">        .color = color <span class="comment">&#x27;邊框顏色</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>

<img alt="vba-color-dialog" src="https://imgur.com/NKXz86U.png" style="width: 80%">]]></content>
      <categories>
        <category>Excel VBA</category>
      </categories>
      <tags>
        <tag>Excel</tag>
        <tag>VBA</tag>
        <tag>Color Dialog</tag>
      </tags>
  </entry>
  <entry>
    <title>匯入圖片 Image Picker | Excel VBA</title>
    <url>/2021/12/20/vba-image-picker/</url>
    <content><![CDATA[<h3 id="使用VBA開啟匯入圖片對話框"><a href="#使用VBA開啟匯入圖片對話框" class="headerlink" title="使用VBA開啟匯入圖片對話框"></a>使用VBA開啟匯入圖片對話框</h3><p><video autoplay muted loop src="https://imgur.com/HzOPsBL.mp4" type="video/mp4" style="width:100%"></video></p>
<h4 id="STEP-1-新增模組"><a href="#STEP-1-新增模組" class="headerlink" title="STEP 1 新增模組"></a>STEP 1 新增模組</h4><p>於VBA Project點擊右鍵插入模組並命名為ImagePicker</p>
<blockquote>
<p>模組為全域性質，在活頁簿中的所有工作表皆可呼叫</p>
</blockquote>
<p><img src="https://imgur.com/4v5uq1d.png" alt="vba-image-picker"></p>
<h4 id="STEP-2-新增function-Show"><a href="#STEP-2-新增function-Show" class="headerlink" title="STEP 2 新增function Show()"></a>STEP 2 新增function <code>Show()</code></h4><p>新增完成後即可在左側模組的資料夾下看到，點擊兩下即可叫出視窗編輯，接著我們就可以在ImagePicker模組下加入<code>Show()</code>來開啟圖片選擇對話框</p>
<blockquote>
<p>Windows及Mac的文件選擇需要使用不同方式呼叫</p>
</blockquote>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="comment">&#x27;開啟圖片選擇對話框</span></span><br><span class="line"><span class="keyword">Public</span> <span class="keyword">Function</span> Show() <span class="keyword">As</span> <span class="type">String</span> <span class="comment">&#x27;宣告回傳圖片路徑的型態</span></span><br><span class="line"><span class="meta">    #<span class="meta-keyword">If</span> Mac <span class="meta-keyword">Then</span></span></span><br><span class="line">        Show = GetFileName_Mac <span class="comment">&#x27;回傳圖片路徑</span></span><br><span class="line"><span class="meta">    #<span class="meta-keyword">Else</span></span></span><br><span class="line">        Show = GetFileName_Windows <span class="comment">&#x27;回傳圖片路徑</span></span><br><span class="line"><span class="meta">    #<span class="meta-keyword">End</span> <span class="meta-keyword">If</span></span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"><span class="comment">&#x27;Mac選擇照片</span></span><br><span class="line"><span class="keyword">Function</span> GetFileName_Mac() <span class="keyword">As</span> <span class="type">String</span></span><br><span class="line">    <span class="keyword">Dim</span> startPath <span class="keyword">As</span> <span class="type">String</span></span><br><span class="line">    <span class="keyword">Dim</span> script <span class="keyword">As</span> <span class="type">String</span></span><br><span class="line">    <span class="keyword">Dim</span> result <span class="keyword">As</span> <span class="type">String</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">On</span> <span class="keyword">Error</span> <span class="keyword">Resume</span> <span class="keyword">Next</span></span><br><span class="line">    startPath = MacScript(<span class="string">&quot;return (path to downloads folder) as String&quot;</span>)</span><br><span class="line">    script = <span class="string">&quot;set applescript&#x27;s text item delimiters to &quot;&quot;,&quot;&quot; &quot;</span> &amp; _</span><br><span class="line">            vbNewLine &amp; _</span><br><span class="line">            <span class="string">&quot;set theFiles to (choose file of type &quot;</span> &amp; _</span><br><span class="line">            <span class="string">&quot; &#123;&quot;&quot;png&quot;&quot;,&quot;&quot;jpg&quot;&quot;&#125;&quot;</span> &amp; _</span><br><span class="line">            <span class="string">&quot;with prompt &quot;&quot;Select an image file&quot;&quot; default location alias &quot;&quot;&quot;</span> &amp; startPath &amp; _</span><br><span class="line">            <span class="string">&quot;&quot;&quot; multiple selections allowed false) as string&quot;</span> &amp; vbNewLine &amp; _</span><br><span class="line">            <span class="string">&quot;set applescript&#x27;s text item delimiters to &quot;&quot;&quot;&quot; &quot;</span> &amp; vbNewLine &amp; _</span><br><span class="line">            <span class="string">&quot;return theFiles&quot;</span></span><br><span class="line">    result = MacScript(script)</span><br><span class="line">    result = Replace$(result, <span class="string">&quot;Macintosh HD&quot;</span>, <span class="string">&quot;&quot;</span>, Count:=<span class="number">1</span>)</span><br><span class="line">    result = Replace$(result, <span class="string">&quot;:&quot;</span>, <span class="string">&quot;/&quot;</span>)</span><br><span class="line">    GetFileName_Mac = result</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"><span class="comment">&#x27;Windows選擇照片</span></span><br><span class="line"><span class="keyword">Public</span> <span class="keyword">Function</span> GetFileName_Windows() <span class="keyword">As</span> <span class="type">String</span></span><br><span class="line">    <span class="keyword">With</span> Application.FileDialog(msoFileDialogFilePicker)</span><br><span class="line">        .AllowMultiSelect = <span class="literal">False</span></span><br><span class="line">        .Title = <span class="string">&quot;Select an image file&quot;</span></span><br><span class="line">        .Filters.Clear</span><br><span class="line">        .Filters.Add <span class="string">&quot;All Pictures&quot;</span>, <span class="string">&quot;*.*&quot;</span></span><br><span class="line">        .Filters.Add <span class="string">&quot;JPG&quot;</span>, <span class="string">&quot;*.JPG&quot;</span></span><br><span class="line">        .Filters.Add <span class="string">&quot;JPEG File Interchange Format&quot;</span>, <span class="string">&quot;*.JPEG&quot;</span></span><br><span class="line">        .Filters.Add <span class="string">&quot;Portable Network Graphics&quot;</span>, <span class="string">&quot;*.PNG&quot;</span></span><br><span class="line">        <span class="keyword">If</span> .Show = -<span class="number">1</span> <span class="keyword">Then</span></span><br><span class="line">            GetFileName_Windows = .SelectedItems(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br></pre></td></tr></table></figure>

<p><img src="https://imgur.com/Q0fDp3a.png" alt="vba-image-picker"></p>
<p>完成後便可以按下執行測試，就可以發現已經可以成功叫出選擇選擇圖片的對話框了～可以看到只能選擇我們允許的副檔名</p>
<p><img src="https://imgur.com/uss69V2.png" alt="vba-image-picker"></p>
<h4 id="STEP-3-關聯至工作表"><a href="#STEP-3-關聯至工作表" class="headerlink" title="STEP 3 關聯至工作表"></a>STEP 3 關聯至工作表</h4><p>於巨集編輯器左側展開Microsoft Excel物件，打開要關聯的工作表，新增一個Worksheet_BeforeDoubleClick，當點擊兩下儲存格時叫出圖片選擇器</p>
<p><img src="https://imgur.com/5dbpyEt.png" alt="vba-image-picker"></p>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Worksheet_BeforeDoubleClick(<span class="keyword">ByVal</span> Target <span class="keyword">As</span> Range, Cancel <span class="keyword">As</span> <span class="type">Boolean</span>)</span><br><span class="line">    <span class="keyword">Dim</span> path <span class="keyword">As</span> <span class="type">String</span> <span class="comment">&#x27;圖片路徑</span></span><br><span class="line">    <span class="keyword">Dim</span> row <span class="keyword">As</span> <span class="type">Integer</span> <span class="comment">&#x27;列數</span></span><br><span class="line">    <span class="keyword">Dim</span> cell <span class="keyword">As</span> Range</span><br><span class="line">    <span class="comment">&#x27;呼叫Module ImagePicker中的Funciton Show</span></span><br><span class="line">    path = ImagePicker.Show</span><br><span class="line">    <span class="comment">&#x27;獲取當前點擊列數</span></span><br><span class="line">    row = Target.row</span><br><span class="line">    <span class="keyword">Set</span> cell = Cells(row, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">If</span> <span class="built_in">Not</span> path = <span class="string">&quot;&quot;</span> <span class="keyword">Then</span></span><br><span class="line">        <span class="comment">&#x27;將圖片路徑放入儲存格</span></span><br><span class="line">        cell.value = path</span><br><span class="line">        <span class="comment">&#x27;將圖片放進工作表</span></span><br><span class="line">        <span class="keyword">Set</span> img = ActiveSheet.Pictures.Insert(path)</span><br><span class="line">        <span class="comment">&#x27;設置圖片大小</span></span><br><span class="line">        img.Height = <span class="number">50</span></span><br><span class="line">        <span class="comment">&#x27;設置圖片位置（儲存格內置中）</span></span><br><span class="line">        img.Left = cell.<span class="keyword">Next</span>.Left + (cell.Width - img.Width) / <span class="number">2</span></span><br><span class="line">        img.Top = cell.Top + (cell.Height - img.Height) / <span class="number">2</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Excel VBA</category>
      </categories>
      <tags>
        <tag>Excel</tag>
        <tag>VBA</tag>
        <tag>Image Picker</tag>
      </tags>
  </entry>
</search>
